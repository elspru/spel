} 01 Jan 2015
1246 so they say release early, and release often eh.
well okay, guess I'll release something then.
2252 tested the site on my phone earlier, it was a bit slow and
unresponsive, so I'll put up signs for when it is loading and
such ya
} 02 Jan 2015
0803 added blink tag via html5 css, for processing loading stuff
1610 so I'm thinking can add javascript translation support ya
can add a word formating thing, so compounds would be dot
seperated. 
also the verb would have to be distinguished, and the noun
phrases would have to be arguments. 
2323 we can either use an object which would allow named
arguments as input, or have them all in a set order. personally
I prefer named arguments, since it is more similar to how
natural languages are constructed. 
be say ob wu hello ya
say({ob:"hello"});
2326 say would have to be defined also
su say be function for tha ob word de
be console log ob word ya
function say(obj){
var word = obj[ob];
console.log(word);}
2330 so maybe plain ob would be standard argument, without
having an object. 
be say ob word de
be console log ob word ya
function say(word){
console.log(word);}
} 03 Jan 2015
0802 so I'm thinking it is more of a format thing than a
language thing. thus meaning we can output in mwak/eng/spa or
whatever other language, using the same format.
Though of course english is the international language of
computing, and many languages have different versions of say, so
it could make sense to have a dictionary for them also ya
0827 de is really like a multi-sentence quote, but for now we
can simply demonstrate some proof of concept javascript such as
with phrases and such
1428 the easiest computery output we can start with is JSON, can
have it as an output, and potentially even input language ya
also dicionary can be output in JSON. this will be at least a
minimal demonstration of it's programming language ability ya
2357 have it outputting the dictionary in JSON
} 05 Jan 2015
0559 added support for translation to json ya
1332 okay to add javascript output support,
we need to distinguish the verb ya
1336 okay made a verbWords array in grammar, can use that ya
1348 hmmm started making a javascript translation thingy,
but now I'm thinking how do we describe javascript as a
language?
it is prepositional, and it has : as phraseHeadJoiner
is has ';' as a period or end of sentence ya
has ',' as a phraseJoiner
phrases are also encapsulated with a '{' and '}' ya
word order is VO head initial
} 06 Jan 2015
0135 Anyways, should get back to the assigned roadmap ya
0157 have junctions in grammar, can work on junctionParse
then junction Object ya
0158 can start with firstJunctionWordIndexParse and
lastJunctionWordIndexParse.
0205 okay now we have two different kinds of junctions,
prepositional and postpositional style ya
the next stage is to identify phrase junctions,
but we want this to be modable, so can pass a parse function,
or else implement in the same level ya
0208 one possibility is to have a junction extract, much like
the quoteExtract, in it for instance anded phrases would be
grouped together, and extracted from the sentence.
we can check how quote extract works, though if I remember
correctly it simply returns an array with the quote in the same
place as it was, but in object form.
0211 junctions are slightly more complex, since they may be in
different parts of the sentence, though generally I think in
natural speech we find them in the same part of the sentence,
thus we can only accounts for those for now. 
0212 one way of having a modable junctionParse is that for
instance prepositional form would check if the word after it is
either a type or phrase word, if it is, then it gets that type,
and returns the result.
0214 okay lets try that for now
0214 for postpositional style, we'd have to get the next of
whatever it is ya
0220 oh actuall I guess postpositional stuff we usually parse
backwards anyways, so it's not as much of an issue, would still
be parsing whatever it is backwards ya
0227 wrote barebones algorithms for each
0259 implemented, now to test ya
0308 okay is working, now a junction object
0313 copied phrase.js to make junction.js
now rewriting the constructor algorithm
0317 wondering how this is going to work,
phrase encounters a junction at tail, 
then calls junction constructor with it's own head,
junction constructor would have to identify the head,
and parse accordingly, find the tail, and add matching heads 
to it's body ya
0321 later on the toString would iterate through body,
inserting the head junction until it reaches the end ya
0322 there is a hierarchy of junctions though, for instance and
is subordinate to or generally speaking ya
so perhaps would have to give what's been parsed thus far to
junction as an input, as it may be a phrase or a collection of
phrases ya
0325 alternatively it can figure out those things on it's own as
it's going through to be more consistent with other constructor
initialization ya
0326 anyways right now we are only looking at the simple case of
two phrases with one and in between ya
0331 change folder from type/ to class/ so easier to distinguish
from type.js
0352 wrote algorithsm for clause final and clause initial
junctions ya
0410 implementing
0423 hmm just realized that if I have a word junction in a
phrase.. well I guess the type getting will handle that. 
0438 okay wrote it
0442 it compiles
0455 anyways I'll finish debugging later, gotta catch some sleep.
1228 bah, Phrase seems to be acting weird now.
1231 Phrase gets confused if there is more than one of the same
type of phrase in the same sentence ya
while techincally it should simply get just one of them
1234 issue was I was using ta instead of tu, oops
1236 okay cool now simply have to do toString stuff
1237 just gotta prep lunch first ya
1338 good it works ya 
1339 now need it to work with prepositional or clause Initial
input ya
1359 hmmm it's not strict compliant, should fix that ya
1419 okay is strict compliant
1431 wrote the prepositional version
1447 okay working partially, but seems to break after third
1449 okay now both junctions work, have to add them to phrase
object ya
1507 okay seems to be working :-D
1511 next have to test in web version and then can release ya
} 07 Jan 2015
0451 time to test
0501 hmmm doesn't seem to work at sentence level ya
0512 it seems to be because only the parsed phrase tokens are
passed to new Phrase, wheras we'd need the ones previous in
order to get the junction out ya
however we relly on the parse function not including it ya
so we can either have another parse function ya
or find a way of passing the rest of the tokens to phrase ya
0516 I think an extra junction aware parsing function would be 
most compatible ya
0534 made parsing function, now debugging
0556 okay works for postpositional style ya
now for prepositional ya
0602 okay now to test it
0610 debugging
0617 okay it works :-)
0618 now web version ya
0622 seems to be having issue with topClause
0630 okay now got to put it back in order even with junctions ya
0639 okay fixed it up .ia ya
0646 excellent it works, can roadmap and git ya
} 08 Jan 2015
0316 so next is type junctions,
these might be a little bit easier as likely don't have to add
another parser function for them. Can simply have a junction
detector in the type class, which would forward the type
contents to Junction ya
0318 but ya, I'm a little sleepy, will continu this a bit later
2208 hmmm my latest calculations seem to indicate that hydrogen
is 249hz, resonant with B (246hz), helium is 214hz around
A(220hz), lithium is 164hz around E (164hz), berylium (196hz) 
G (195hz), boron 156hz D# (155hz), carbon (176hz) F(174hz), 
oxygen 193hz G (195hz), flourine 222hz A (220Hz). 
so what scale has, A B D# E F G
2226 well anyways that's pretty embarassing. 
I used the more usual f*l = c formula this time,
rather than the convoluted one I was using before. 
} 09 Jan 2015
0540 anyways time to do type junctions
0541 guess can start with the Junction class
0547 I'll check over the algorithm
0553 hmmm, seems like I will need a lastTypeIndexParse and
firstTypeIndexParse function, though should be easy enough.
0613 okay wrote lastTypeIndexParse, can test it ya
0634 okay firstTypeIndexParse also works,
now lets try Junction.
0647 hm seems to parsing correct, but not outputting properly.
appears to have lost it's prototypes.
0709 cool, so Junction level works now with string output ya
0710 now have to add it to Type object ya
0713 right should also check with English version ya
0727 okay fully debugged Junction and parsing,
think I need a nap before baby wakes ya
0815 okay works at Type level, now for Phrase level ya
0820 oh actually Type not yet fully operational ya
0827 issue with english multiple ands
0938 hmm, thinking now that have Type junctions, that case and
subphrase junctions are unecessary. however sentence and
subclause junctions can still be useful ya
1608 whatever can have all sorts and kinds why not, easy enough
to implement at this stage.
1642 okay turned out to be a parsing problem, has been fixed .ia
1645 works for Phrase, debugging for Sentence
1712 okay so test on web, then roadmap and git
1717 cool works, so roadmap and git
1752 found out yesterday that cytoskeletons resonate at
frequencies as low as 10Khz, that means we can make music which
appeals to them. Lets see, B
1756 so in western music that's the 9th octave,
or from about d#9 (9956Hz) til D#10 (19912Hz)
cytoskeleton music w00t w00t!
1806 okay found a study that mentions 2Khz til 20Khz
 http://www.rife.de/files/efficiency_of_solitary-waves.pdf 
1808 the diameter of a microtubule is 12nm and 24nm for inner
and outer, so lets see what note that gives us.
1816 op, redid my music calculations, seems I was right the
first time, it really is C# that is hydrogen harmonic. 
even with the f*l=c equation
(120 * (10^-12) * (16^13) * x) = 2.9979246E8 = approx. x = 554.72748
piano C# is 554.365 
1834 okay so F9 is closest to 11360Hz the harmonic of 
microtubule diameter, 31TET with A at 443.58Hz (tuned for
hydrogen) is -9Hz deviation, whereas 12TET is -184hz deviation.
1837 nice with this new A for 31, schuman is -0.079 deviation at
B2, wheras it's -0.113 for 12TEt, also B2.
1839 of course cytoskeleton microtubule wavelengths matter more
based on their lengths than their diameters, but it's something
ya, they all resonate by their diameters.
2111 decided will work on the translation in 0.4 since it is
more useful sooner. can do some real demonstrations once there
is enough vocabulary ya
} 11 Jan 2015
0411 made command like google translate script, with help of
translate-bin
0416 hmmm have to implement in javascript for portability ya
0421 seems google translate requires payment for apiKey,
so best to simply use translate-bin for now ya
we only need to translate the core words once ya
0438 so I'll have to implement the shell script output for
translation.
0537 for full implementation will need text append
otherwise the translation update script is almost complete 
0538 anyways need to catch some z's 
1539 I think I'm going to go back to posting some of my more
epic email responses on tumblr. They seem to be one of the most
popular sources of posts on reddit.
1623 so need to replace spaces with dashes in the output,
since sometimes a single word is equivalent to multiple words
in a foreign language ya
1624 also thinking insert would be a nice feature, since then
can insert the entry at same place as it is found in the
original file ya
1707 okay so have prett much completed single file translation,
can put the warnings in the .log file with the date
after that have to make a verification file, that makes sure
there aren't any double definition
} 12 Jan 2015
0459 have it working very well now, 
added arabic, portugeuse, now translating indonesian.
can probably also add german, japanese and korean ya
0503 hmmm gotta make yi take multiple words ya
0543 managed to fix the space problem by writing custom function
to replace the spaces with dashes ya
0614 thinking can translate to japanese and korean from chinese,
since then can only have to update chinese for the english
differences rather than all three.
0630 okay updated my mandarin file, will try doing translation
from it to japanese and korean
0643 okay so italian, dutch, swedish, adn then should be done
0717 okay well couldn't find a translation service for esperanto
but I think in total we have enough for now ya
0829 so next have to do roadmap and then verifiers
0904 apostrophe is more common than period for glottal stop so
we should change that ya
0943 some preliminary things I want to translate are some of
Aesop's fables, such as sour grapes. 
1212 thinking that using the apostrophe may make it more
difficult for some things as we'd have to use an escape sequence
for a lot of programs, especially for c conversion and the like. 
1216 there are apostrophe's in English though, so perhaps we can
try it and see if it works? I dono, it seems kinda scary, would
get all sorts of problems, and increase the size of things. I
also like how glottal stop periods are low just like in the 
throat. I think having it as an apostrophe is a bit confusing.
admitedly having it as a period is a bit confusing for people
which aren't familiar with it.
1222 anyways so roadmap done, lets git for now
oh also can make a tarball
2147 I'm going to have to write up a meeting draft soon,
so can probably translate that to mwak also,
it is pertinent to the political theme.
} 13 Jan 2015
0558 so gotta add grammar support for Arabic ya
I'll remove esperanto ya
0634 cool, gotta fix up a few arabic words
0635 then I want to add hindi :-D
oh and portugese, oh and indonesian if possible ya
0706 hmmm seems to be issue with end clasue for hindi and mwak
ya for instance hindi is getting the chinese end clause, and
mwak isn't getting any at all.
0728 okay fixed it, it was simply issue of having the cmnGrammar
in the hinLanguage by accident ya
0730 okay now portuguese ya
0736 next is indonesian, japanese, german, korean, turkish
vietnamese?, italian and swahili ya
0738 i'll add this to the roadmap ya
0743 of currently supported languages we have total support for
3.5 billion speakers (some maybe twice), once we add the above
we'll have 4.1 billion. 
1350 we should have UNL compatability layer sooner rather than
later, I should get UNL certified in order to do so adequately ya
1351 definitely before I start doing frame translations ya
1352 If we want this to be accepted by the UN, then
interoperability with the UNL is paramount!
1436 anyways for now can add a few more langs
can add danish, ukranian and hungarian to the list ya
1444 okay time to test indonesian
1458 okay fixed up vocab. next is Japanese.
1500 okay lets add a few langs at the same time 
jpn deu kor tur swa ukr swe nld
1857 k so they all work, sorta anyways,
since I want this to be used by the UN, I'll focus on the
official languages of the UN.
} 14 Jan 2015
1526 okay so git and roadmap
1527 now time for the verifier
1527 btw I found out that there is no "core UW" vocab
explicitly, the closest they have is extended basic english.
1528 so the frames we had before should be fine, 
though there may be UW attributes which are defined,
we can implement those for sure.
1528 oh an in terms of the syntax of the language I'd like to
fix up the glottal stops, and remove the diphthongs
1542 okay I also removed the unique phones restriction
1545 meh, actually I'll keep it for now
1546 got more than enough core vocab room to fill for now
1546 so I need a script to update the .u's and such to 'u's 
also to remove the CVV and CTVTV CTVV CVTV words,
easy enough for the latter, since can simply regenerate that
file, don't actually hve anything defined there.
1548 also I don't think I have anything defined in the X files,
yet anyways, so can remove those, and regenerate.
1549 oh actually I have nia and tai, and tua, blah
1550 guess I'll have to keep the diphthongs for now.
1551 so I'll just update the vocab files them
1604 okay updating to apostrophe notation, 
working out the kinks
} 15 Jan 2015
0253 great so we can include the UW attributes, and UW relations
which are already defined ya
0255 ideally I'd also support outputting them from my JSON,
or even inputting them, since we strive for UNL compatibility ya
Actually lets see what UNL already has so we don't overlap
functionality ya
0300 so currently they have LILY which is Language to
Interlingua to Language sYstem, which is also a pivot based
translator. It doesn't seem to aim to support computer
programming languages, and it doesn't seem to be functional yet
either. 
0425 anyways I managed to do CUPS250 but their whole way where
the focus on the subliminal meaning of stuff is really
frustrating cause it is so variable and hard to determine.
0427 anyways so I need to make a verifier.
0450 oh ya, I can also change the current diphthong cases to
monopthongs
0514 okay now just have to update the files
tua is now twa, tai is tya, kai is kya and nia is nya
0623 made the verification program, will have to weed out the
duplicated later as I need some shut eye before morning
0626 chinese needs the most work, and then to have japanese and
korean retranslate from it ya
1324 got a new monitor, it is a small one, 7 inches.
So can get a feel for what it would be like for BoP to program,
or how it can be done effectively anyways.
I have it standing up on the box it came in, so that my neck is
fully extended to look at it properly ya
su it be comfortable ya
su me be increase ob font size for ease of reading ya
} 16 Jan 2015
0536 figuring out how to have a core language, and one where we
translate out of. so finding pairs of which less prominent
languages usually use a source.
For instance swahili seems more commonly translated from Russian
than English. 
turkish is usually from arabic and french.
0630 so I'm currently debugging the non unique words out of the
dictionary ya
0712 great so I did it :-)
now they are all unique
0713 now to test the web version ya
0721 hmm seems to be working fine except the synesthesia ya
0723 okay fixed
1703 probably going to have to change back to periods instead of
apostrophes since periods are more compatible with URL's and
filenames. 
} 18 Jan 2015
0724 so next is verb, ergative and tripartite support.
verb support can be added by making a verb variable in grammar.
ergative, tripartive, nominal best with enum
1603 I was looking up x-bar theory, it was saying how a sentence
is like a phrase, with a head consisting of the tense and aspect
ya
So I can probably put tense and aspect in the mood area of the
sentence, which would then be the head of the sentence ya
want su me be sleep ya
past su me be eat ob buckwheat ya
recently su me be watch ob one piece ya
happy su me be like ob it ya
clarify flow su it ob tense and aspect 
in mood area of sentence ya 
} 19 Jan 2015
0258 so should also define object and subject for ergative
transformation ya
0326 did a little studying on tripartite, ergative and
nominative languages.
0327 gotta look up javascript enums if they are viable.
0329 hmmm seems like it would be somewhat of a hassle.
0330 thinking of changing meaning from subject to agent but I
guess it's moot right now, since subject is the more common SOV
and w/e.  I'm using "hu" as agent word. that way can have an
intransitive word order ya
0419 okay so wrote the intransitivity stuff now to test it
0437 okay debugged is working now :-)
0438 next is the long awaited performance grammar phrase
ordering ya
0454 hmmm so I guess it's an output thing,
in toLocaleString for sentence
0459 hmmm testing the word order stuff with indonesian, doesn't
seem to be quite right ya
0509 okay fixed, it was just a typo.
0529 so looked up performance grammar again, 
it seems to take most effect for clusters greater than 4 words.
the hungarian vso example I'm assuming is inflectional so really
has about that much if it were analytical.
0539 wrote algorithm, need some beauty sleep ya
0540 I'll assume by if it is twice the size of average length,
then it should be reordered by performance grammar
1424 so wheras SOV languages use time manner place,
SVO or head-initial languages use place manner time.
interesting so phrase order would change correspondingly.
1519 on the agenda is to finish up that blitz meeting and post
it project rejuvenation's wall.
} Jan 20 2015
0046 also have to make that translation pack so language
maintainers can more easily check on current and new
translations ya
0047 can probably set it up so that it emails them with new
definitions.
0050 anyways decided will do performance grammar in a simple way
for now, which is just to find the phrase which has a clause,
and set that in the tail and just return the rest to be
processed as normal ya.
0146 was studying up on China and it's great firewall,
also looking at my QQ profile, it's interesting.
Though I should really focus on the free world instead.
Chances are however upsetting that they don't want deliberative
assembly in China. Though it might be possible to be a business
thing or something *shrugs*.
Anyways it's a big market, but there is 6 billion other people
in the world also, which may be better to focus on, since they
aren't behind a firewall. 
0209 okay wrote in performance grammar for toLocaleString, now
to test ya
0234 okay it is working even in web version so can increment
roadmap and git
0243 so next is UW relations and toki pona level vocabulary
Here is a listing, with english mwak equivalents:
rel				relation
agt (agent)			su
and (conjunction)		and
aoj (object of an attribute)	su 
ant (antonym, different from)	different-from
equ (synonym, equal to)		equal-to
fld (field)			from-field-of
icl (hyponym, a kind of)	a-kind-of
iof (example, instance of)	is-a
pof (meronym, part of)		part-of
ben (beneficiary)		for
cnt (content or theme)		ob
con (condition)			if
exp (experiencer)		su
mod (modifier)			- h
mat (material)			made-of
nam (name)			named
pos (possessor)			of
qua (quantifier)		nu
obj (patient)			ob
opl (objective place)		ob
res (result)			to
or (disjunction)		or
per (proportion, rate)		per
bas (basis for a comparison)	based-on
plc (location: physical or logical)	at
gol (final place or state, destination)	til
lpl (logical place, scene)		lat
src (initial place or state, origin)	from
via (intermediate place, path)	via
ptn (partner)			with
tim (time)			at-time
tmf (initial time)		from-time
tmt (final time)		til-time
dur (duration)			for-time
coo (co-occurrence)		during
man (manner)			by
ins (instrument or method)	by-tool
met (method)			by-method
pur (purpose)			for-purpose
rsn (reason)			because
seq (consequence)		thus
0308 hmmm some overlap and seem redundant
I wouldn't have so many if I was designing it,
I want to stick to just the basics for now
junctions and/or
su bo to til for by from of
at with named nu tat via thus cuz
0314 we should review the attributes as well
@1 (first person of discourse (speaker)) 00.@1.@pl=we
@2 (second person (addressee)) 00.@2.@pl=you
@3 (third person (other)) 00.@3.@pl=they
@ability
@about (about) book about Paris > mod(book,Paris.@about)
@above (above) above
@according_to (according to)
@across (across)
@active (active voice) kill.@active=kill
@adjective (adjectivation)
@adverb (adverbialization)
@advice
@after (after)
@again (iterative) do.@again=redo
@against (against)
@agreement
@all (all) book.@all=all books
@alliteration (series of words that begin with the same letter or sound alike)
@almost (approximative) big.@almost=almost big
@along (along)
@also (repetition) big.@also=also big
@although (although, even though, though) do.@although=although [he] does
@among (among)
@anacoluthon (change in the syntax within a sentence)
@anadiplosis (repetition of a word at the end of a clause at the beginning of another)
@anaphora (repetition of the same word or group of words at the beginning of successive clauses)
@anastrophe (inversion of the usual word order)
@and (and, nor, as well as, both... and, neither... nor, not only... but also) do.@and=and [he] goes
@anger (Expression of anger)
@angle_bracket (< >) a.@angle_bracket=
@antanaclasis (repetition of a word in two different senses)
@anterior (before some other time other than the time of utterance) go.@past.@anterior=had gone
@anthropomorphism (Ascribing human characteristics to something that is not human, such as an animal or a god (see zoomorphism))
@anticlimax (Arrangement of words in order of decreasing importance)
@antimetabole (repetition of words in successive clauses, in reverse order)
@antiphrasis (Word or words used contradictory to their usual meaning, often with irony)
@antithesis (juxtaposition of opposing or contrasting ideas)
@antonomasia (Substitution of a phrase for a proper name or vice versa)
@any (any) book.@any=any book
@apposition (placing of two elements side by side, in which the second defines the first)
@archaic (archaism)
@around (around)
@as (as) do.@as=as [he] does
@as_far_as (as far as)
@as_of (as of)
@as_per (as per)
@as_regards (as regards)
@as_well_as (as well as) do.@as_well_as=as well as [he] does
@as.@if (as if, as though) do.@as.@if=as if [he] does
@assertion
@assonance (repetition of vowel sounds, most commonly within a short passage of verse)
@assumption
@asyndeton (omission of conjunctions between related clauses)
@at (at) at
@attention (Expression of attention) 00.@attention=hey!
@back (in relation to the back of) the book behind the box = plc(book,box.@back)
@barring (barring)
@because (because, since, for, as, that) do.@because = because [he] does
@because_of (because of)
@before (before)
@behind (behind) behind
@belief
@below (below) the box below the table = plc(box,table.@below)
@beside (beside) beside
@besides (besides)
@between (between)
@both (both) book.@both=both books
@bottom (in relation to the bottom of) the book under the box = plc(book,box.@bottom)
@brace ({ }) a.@brace={a}
@brachylogia (omission of conjunctions between a series of words)
@but (but, yet) do.@but = but [he] does
@by (by)
@by_means_of (by means of)
@catachresis (use an existing word to denote something that has no name in the current language)
@causative (causing) eat.@causative=make eat
@certain (certain) book.@certain=certain book
@chiasmus (reversal of grammatical structures in successive clauses)
@circa (circa) born circa 1900
@climax (arrangement of words in order of increasing importance)
@clockwise (in the same direction as the rotating hands of a clock) a
@colloquial (colloquialism)
@command
@comment (what is being said about the topic) (the dog).@topic (bit the little girl).@comment
@concerning (concerning)
@conclusion
@condition
@confirmation
@consent (Expression of agreement) 00.@consent=Uh-huh
@consequence
@consonance (repetition of consonant sounds without the repetition of the vowel sounds)
@contact (in contact with (in opposition to "near" and "far")) the book at the box = plc(book,box.@contact)
@contentment (Expression of contentment)
@continuative (continuous) eat.@continuative=still eats
@conviction
@decision
@deduction
@def (the) book.@def=the book
@desire
@despite (despite)
@determination
@dialect (regional speech pattern)
@disagreement (Expression of disagreement)
@discontentment (Expression of discontment)
@dissent (Attribute that expresses the sentiment of dissent) 00.@dissent (No way!)
@distal (that, those) book.@distal=that book
@double_negative (Grammar construction that can be used as an expression and it is the repetition of negative words)
@double_parenthesis ((( ))) a.@double_parenthesis=((a))
@double_quote (" ") a.@double_quote="a"
@doubt
@down (down)
@dual (Two of a class) book.@dual=a pair of books
@due_to (due to)
@during (during)
@dysphemism (Substitution of a harsher, more offensive, or more disagreeable term for another. Opposite of euphemism)
@each (each) book.@each=each book
@either (either) book.@either=either book
@ellipsis (omission of words)
@emphasis (emphasis) book.@emphasis=the book itself
@enough (sufficiently) big.@enough=big enough
@entire (Reference to the whole.) entire book = book.@entire, whole book = book.@whole
@entry (head of the main clause)
@epanalepsis (repetition of the initial word or words of a clause or sentence at the end of the clause or sentence)
@epanorthosis (Immediate and emphatic self-correction, often following a slip of the tongue)
@equal (comparative of equality) big.@equal=as big as
@equivalent (equality of status)
@euphemism (Substitution of a less offensive or more agreeable term for another)
@even (even) book.@even=even a book
@even.@if (even if) do.@even.@if = even if [he] does
@except (except)
@except_for (except for)
@except.@if (except if) do.@except.@if = except if [he] does
@exclamation
@excluding (excluding)
@exhortation
@expectation
@experiential (experience) eat.@experiential=have already eaten
@extra (excessively) big.@extra=too big
@failing (failing)
@familiar (high degree of solidarity) mother.@familiar=mom
@far (far from) the book far from the box = plc(book,box.@far)
@fear
@female (female) 00.@3.@female=she
@focus (information that is contrary to the presuppositions of the interlocutor) John.@focus = it was John that
@following (following)
@for (for)
@from (from)
@front (in relation to the front of) the book in front of the box = plc(book,box.@front)
@future (at a time after the moment of utterance) go.@future = will go
@generic (generic) book.@generic=books, a book
@given (given)
@habitual (habitual) eat.@habitual=eats
@half (One of two equal parts that together constitute a whole) semicircle = circle.@half
@hesitation (Expression of hesitation) 00.@hesitation=..er..
@hope
@hyperbole (Use of exaggerated terms for emphasis)
@hypothesis
@if (if) do.@if = if [he] does
@if.@only (only if) do.@if.@only = only if [he] does
@imperfective (uncompleted) eat.@habitual=was eating
@in (in) in
@in_accordance_with (in accordance with)
@in_addition_to (in addition to)
@in_case (in case (that)) do.@in_case = in case [he] does
@in_case_of (in case of)
@in_front_of (in front of) in front of
@in_place_of (in place of) in place of
@in_spite_of (in spite of)
@inceptive (beginning) eat.@inceptive=start eating
@inchoative (Inchoative aspec (change of state)) adult.@inchoative (become adult)
@including (including)
@indef (a, an) book.@indef=a book
@inferior (low degree of status)
@inside (inside)
@instead_of (instead of)
@intention
@interrogation
@intimate (very high degree of solidarity) mother.@intimate=mommy
@invitation
@irony (Use of word in a way that conveys a meaning opposite to its usual meaning)
@iterative (repetition) eat.@iterative=eat and eat
@jargon (technical vocabulary)
@judgement
@least (superlative of inferiority) big.@least=the smallest
@left (in relation to the left side of) the book at the left of box = plc(book,box.@left)
@less (comparative of inferiority) big.@less=smaller
@like (like)
@literary (Used to create a special effect in poems or novels, and are not usually used in ordinary speech or writing.) awaken = awake.@literary
@majority (A great majority of; nearly all) most books = books.@majority; most of the book = book.@majority
@male (male) 00.@3.@male=he
@maybe (Attribute that expresses doubt) Maybe he will go > go.@maybe
@medial (medial) medial
@metaphor (Stating one entity is another for the purpose of comparing them in quality)
@metonymy (Substitution of a word to suggest what is really meant)
@minority (a number, part, or amount forming less than half of the whole) few people among all = people.@minority
@minus (downtoned) big.@minus=a little big
@more (comparative of superiority) big.@more=bigger
@most (superlative of superiority) big.@most=biggest
@multal (a lot of, many, much, several) book.@multal=a lot of books
@narrative
@near (near to) the book near the box = plc(book,box.@near)
@near_to (near to) near to
@necessity
@neither (neither) foot.@neither=neither foot
@neutral (neutral) 00.@3.@neutral=it
@no (no) book.@no=no book
@not (negative) go.@not=I do not go
@notwithstanding (notwithstanding)
@noun (nominalization) poor.@noun=the poor
@obligation
@of (of) book of pictures > mod(book,pictures.@of)
@off (off)
@on (on) on
@on_account_of (on account of)
@on_behalf_of (on behalf of)
@on_top_of (on top of) on top of
@only (only) book.@only=only the book
@onomatopoeia (Words that sound like their meaning)
@opinion
@opposite (opposite)
@or (or, either... or, whether... or) do.@or = or [he] does
@ordinal (ordinal numeral) 1.@ordinal=first
@other (other, another, else) book.@other=other book
@outside (outside)
@over (over) over
@owing_to (owing to)
@own (own) book.@own=own book
@oxymoron (Using two terms together, that normally contradict each other)
@pace (pace)
@pain (Expression of pain) 00.@pain=ouch!
@paradox (Use of apparently contradictory ideas to point out some underlying truth)
@parallelism (use of similar structures in two or more clauses)
@parenthesis (( )) a.@parenthesis=(a)
@paronomasia (A form of pun, in which words similar in sound but with different meanings are used)
@part (A portion, division, piece, or segment of a whole) part of the book = book.@part
@passive (passive voice) kill.@passive=was killed
@past (at a time before the moment of utterance) go.@past = went
@paucal (a few, a little, few, little, some, a couple of) book.@paucal=a few book
@pejorative (Having an unpleasant or disparaging connotation) scalawag = rascal.@pejorative
@per (per)
@perfect (used to indicate that an action or circumstance occurred earlier than the present time (or other time under consideration), often focusing attention on the resulting state rather than on the occurrence itself) I have made the dinner
@perfective (completed) eat.@perfective=ate
@periphrasis (Using several words instead of few)
@permission
@permissive (allowing) eat.@permisse=let eat
@persistent (persistent) eat.@persistent=have been eating
@person (human) 00.@person=someone
@pl (plural) book.@pl=plural
@pleonasm (Use of superfluous or redundant words)
@plus (intensified) big.@plus=very big
@polite (low degree of solidarity)
@polyptoton (repetition of words derived from the same root)
@polysyndeton (repetition of conjunctions)
@possibility
@posterior (after some other time other than the time of utterance)
@prediction
@present (at the moment of utterance) go.@present = goes
@presumption
@prior_to (prior to)
@probability
@progressive (ongoing) eat.@progressive=is eating
@prohibition
@promise
@prospective (imminent) eat.@prospective=about to eat
@proximal (this, these) book.@proximal=this book
@pursuant_to (pursuant to)
@qua (qua)
@quadrual (Four of a class)
@recent (close to the moment of utterance) go.@recent = have just gone
@reciprocal (reciprocal voice) kill.@reciprocal=kill each other
@reflexive (reflexive voice) kill.@reflexive=kill oneself
@regarding (regarding)
@regardless_of (regardless of)
@regret
@relative (head of the relative clause)
@relief (Expression of relief)
@remote (remote from the moment of utterance)
@repetition (Repeated usage of word(s)/group of words in the same sentence to create a poetic/rhythmic effect)
@request
@result (resulting) eat.@result=have eaten
@reverential (very high status)
@right (in relation to the right side of) the box at the right of the box = plc(book,box.@right)
@round (round)
@same (same) book.@same=same book
@save (save)
@side (at one of the sides of) the book beside the box = plc(book,box.@side)
@since (since)
@single_quote (' ') a.@single_quote='a'
@singular (singular) book.@singular=book
@slang (slang)
@so (so, then, so that, that) do.@so = so [he] does
@speculation
@speech (Direct speech)
@square_bracket ([ ]) a.@square_bracket=[a]
@subsequent_to (subsequent to)
@such (such) book.@such=such books
@suggestion
@superior (high status)
@surprise (Expression of surprise) 00.@surprise=oh!
@symploce (combination of anaphora and epistrophe)
@synecdoche (Form of metonymy, in which a part stands for the whole)
@synesthesia (Description of one kind of sense impression by using words that normally describe another.)
@taboo (offensive word)
@terminative (cessation) eat.@terminative=finished eating
@than (than)
@thanks_to (thanks to)
@that_of (that of)
@thing (inanimate) 00.@thing=something
@threat
@through (through)
@throughout (throughout) throughout
@times (multiplicative numeral) 2.@times=twice
@title (title) book.@title=
@to (to)
@top (in relation to the top of) the book on the table = plc(book,table.@top.@contact)
@topic (topic of the sentence) book.@topic=the book that
@towards (towards) towards
@trial (Three of a class)
@tuple (collective numeral) 2.@tuple=double
@under (under) under
@unit (an individual, group, structure, or other entity regarded as an elementary structural or functional constituent of a whole) a slice of bread = bread.@unit
@unless (unless) do.@unless = unless [he] does
@unlike (unlike)
@until (until)
@up (up)
@upon (upon)
@verb (verbalization) google.@verb=to google
@versus (versus)
@vocative (Being addressed) agt(run, John.@vocative)= John, run
@warning
@weariness (Expression of weariness)
@wh (what, whatever, which, whichever) book.@wh=what book
@with (with)
@with_regard_to (with regard to)
@with_respect_to (with respect to)
@within (within) within
@without (without)
@worth (worth)
@yes (affirmative) go.@yes=I do go
@zoomorphism (Applying animal characteristics to humans or gods)
0316 wow there are over 800 of those
0318 I think I like them more than the relations
they seem to cover the same kind of stuff but better,
also the relations are very confusing, since they are all about
graphs and not about language.
0319 can probably start with the super categories
att
animacy (ANIA)
aspect (ASPA)
degree (DEGA)
emotions (FEEL)
figure of speech (FIGA)
gender (GENA)
information structure (ISTA)
lexical category (LEXA)
manner (HOW)
modality (MODA)
nominal attributes (NOUA)
person (PERA)
place (WHERE)
polarity (POLA)
quantification (QUAA)
register (REGA)
social deixis (SODA)
specification (WHICH)
syntactic structures (SYNA)
time (WHEN)
voice (VOIA)
0321 some of those categories while interesting,
are far to specific for an initial frame vocabulary.
0332 I could probably use at least some of it though
perhaps can make a frame vocab that is intersection of one I
made before and this, that may be ideal ya
or can simply select the useful categories like person place
quantification and such
1016 okay what to do, I guess we can do some basic vocab words
for now ya
maybe funny so I can finally make that reply to that guy
can also check out the toki pona vocabulary
1021 hmmm guess can start with english lemmas,
those are bound to be useful, intersected with UW attributes.
I can change mi to be simply first person pronoun
yu to be second person pronoun
sa to be third person pronoun
mu to be plural modifier
1025 okay too many files, gotta trim it back down to the binary
ones 1 bit 2bit 3bit and 4 bit alphabet
or 2 glyphs 4 glyph 8glyph and 16glyph
can simply stop using the other ones
1027 in fact can simply use the 16 bit one and disregard the
others.
I wanted to change either to disjunct or something, 
or I can even simply remove all the 2bit definitions or
something dono, w/e leave them for now, we need to add words at
this point not remove.
1037 I tried putting the vocab in mwak performance grammar
order, but since from doesn't have official sublcauses it ends
up in the wrong spot, not fronted. thus I may have to shift some
stuff around for it to work properly ya
1107 okay rewrote algorithm for performance grammar will have to
debug
1149 almost works :-)
1201 okay works but need to figure out why kya is at end in
stead of front ya
1213 okay fixed
1231 now setting up so text outputs formated lines up to 64
glyphs long and breaks at nearest word boundary ya
} 21 Jan 2015
0024 changed my monitor to be be sideways, so is more like the
page of a book ya
has a good feel to it, also can see more history better this way
:-). 
0107 got a wordwrap function from internet, much better than
mine, but it has some extra newlines where I don't need, not
sure how to remove them, since it uses rather opaque regular
expression for matching.
0130 okay  I think I finally figured it out with a regexp
reference to help me :-)
needed lookahead patter (?=\\s|$) instead of normal match
0133 also performance grammar needs a bit more work
0137 okay now seems to be fully operational :-)
0144 should test in web version
0154 weird it isn't working in web version
0211 okay was issue with basis and not checking for clauses has
been fixed ya
0738 so what is next? vocabulary work.
guess I will start with UW relations and attributes,
even if the UNL implemenation of them is opaque,
at least the common ones which are easy to understand,
I will implement ya
0739 for now can add the UW or UNL equivalent to those words
which are already defined ya
1546 so I'm working on pronouns for now
1559 added null as nwa for 00 UW
1858 hmmm I don't think I should have plural and singular forms 
at this moment, there might be a bunch of other words that want
those CV spots ya, should just have a word for singulr and
plural ya
} 22 Jan 2015
0328 I guess singular is common enough, so I just took out the
one for plural and kept the generic yu 
0436 ya so I'm pretty much defining everything in 4bit, way too
much hassle trying to use multiple files ya
0439 put mom and  dad in the extended vocab, mam and pap ya
though I could put mother and father mat and pat in core
0616 changing yi to li so yi can be this, and ka can be it
0638 debugging seems to be some parse issue or something
0737 almost done update just have to debug a few non unique
words ya
1006 okay it is fully operational now :-)
2317 got synesthesia bookmarklet working fairly satisfactory now
:-D well only on desktop, have no idea how to get it to work on
a phone version, not sure how to open a bookmark in the same
window. 
} 23 Jan 2014
1231 okay figured it out. works on the phone for some websites
also anyways. 
1232 so planning on moving basic conjugation ahead on the
roadmap.
first will organize the language packs so they are in external
files, 
and then will do the conjugation ya
which will consist of simply removing or replace  the su ob ya 
yand and other unusual words ya
1302 okay so the first thing on the agenda is systemizing the
adding of new languages. 
1304 can use spelp as a model
1546 you know what I'm more interested in basic conjugation
support at this time, lets get a basic prototype working, to my
knowledge most languages don't have su and ob, so we can just
assume they aren't marked.
can have an unmarked phrase list ya
1632 or we can simply call it unmarked words.
hmmm I'm thinking topicalization can be good also,
since now that we have performance grammar subject isn't always
the first thing ya
1737 cool so got odroid working :-)
} 26 Jan 2015
0733 can do conjugation with regular expression search and
replace ya
a file consisting of su what to replace with ob what would be
sufficient also ya
0748 okay well seems like we would need multi word quote support
before can make conjugation from text files.  but for now can do
it with json files or something ya
0811 hmmm this form of conjugation is very basic, for instance
can't translate " of you " into "your" as that would require a
word-order change, but can translate "su you" into " ye ".
0813 I've also divided it into reversible and irreversible
conjugation ya
0814 wow, that's amazing I found a word for third-person
singular in english it is ey and eir for they and their
respectively :-D
1127 so can do Translate.conjugate(grammar.conjugation,string);
just before outputting, and this would be at the sentence level
ya
1141 can also deconjugate the reversible ones at least in
begining. 
1150 I've populated eng.js with a bunch of examples.
1402 also need it to take a variable for type of conjugation,
whether it is plain (none), conjugated (reversible), 
or naturalized (irreversible).
} 27 Jan 2014
0344 bah, time to get something done ya
0416 added the statements to sentence.js
0423 hmmm I'm thinking maybe we shouldn't accept any conjugation
as input, since there are no guarantees with such a brute for
search and replace..
0500 bah keep getting distracted by facebook :-|
0501 anyways so next have to set up spel-node.js to accept
eng.js as input, then write the conjugation search and replace
functions
0606 awesome conjugation is now fully operational
0625 still have to port other languages than english into the
new locale framework, and also test the web version. but can do
that later, need some more sleep first ya
1315 okay so I'm settin gup the file system for making it easier
to deal with the languages in locale
1327 okay I made french, now should test it
} 28 Jan 2015
0603 adding languages to the new directory system,
have english, french and spanish so far ya
0641 added mandardin, arabic, hindi
0652 added russian and ukranian
} 29 Jan 2015
0209 hopefully will have enough time to finish off basic
conjugation. or rather I guess we're working on systemizing now
ya
0211 one of the languages I'm most interested in is Inuktitut,
it requires some very heavy verb conjugation however.
also Esperanto requires conjugation, so it might make sense to
have a conjugation.verb and conjugation.noun function ya
0213 we can make a mwak flavoured version of Inuktitut, but it
will bear little or no resemblance to it's parent language ya
however it will still be easier to translate from that to
ordinary Inuktitut than simple SPEL.
Inuktitut is OSV the verbs are VS, it is verb-initial.
0232 I've also got to improve the performance of the site, since
it is too slow with the whole loading all these languages ya
perhaps can put the vocab in JSON files, or compact them into a
single file somehow, don't know if can require a JSON file thus
shove the dictionary in more easily.
0414 okay cool I finished systemizing, now I just have to update
the web file to use it.
0458 now I need to add the new langs ita and hun, also should
make a listener for the conjugation
0520 I have a feeling that if I publish a story in analytic
inuktitut some of the elder inuit might get rather angry ya
since it wouldn't really be inuktitut anymore ya
0530 weird it is not conjugating in web verrsion.
0533 maybe it needs a string buffer or something
0534 I dono anyways I need some sleep before dawn
0743 maybe it is because of static strings, might be able to get
around it with split join via stringBuffer ya
0910 I think it's because of the syntax highlighting, I have to
transform before the syntax highlighting.
0943 okay well now I have no idea why it's not working.
0942 also a simple regexp wouldn't work for anything with html
formatting
2203 finishing up first post to mailing list
} 30 Jan 2015
0714 so next is topicalization
2111 edited the roadmap some,
decided that should leave major conjugation ttil after 1.0 ya
} 31 Jan 2015
1438 updated git repository to reflect the new nodejs branch
it is called spel-code
} 01 Feb 2015
0154 set up my odroid, thinking of moving development over
there.
} 02 Feb 2015
1556 moved development to the odroid
2242 anyways I should really make that file translate thing
input of a language file and output of all files,
figures out language code by input parameter
figures out output language codes either default all,
or if all is given, or a list of particular ones.
loads only if language code given, and is not already defined.
2257 cool okay first one is working
2311 generified, now works for multiple langs,
need to make it even more streamlined, 
using an array or object of codes associated with variables. 
} 03 Feb 2015
0524 okay got it working, with the codes and all.
will have to update the spelp.js file and spel-node.js
accordingly also ya
0544 oh right so should make mwak a language like all the
others, so it could be loaded with them
0938 okay it seems to be all working smoothly together.
\
should update the spelp to work with the new system ASAP.
then we can probably call it a release. 
1004 updating spel-node.js
1019 okay updated :-)
later will have to accept spel-lang input can put it on roadmap
probably somewhere around javascript impelmentation
1033 updated japanese and chinese sentence final particles :-D
1052 updated spelp.js but gotta reinstall browserify
anywas g2g shopping for now will be back
1900 finished fixing it up 
} 04 Feb 2015
0629 so what's next on the roadmap? or rather, what next on the
roadmap do I most feel like implementing? I'm feeling
basic javascript would give me some good satisfaction around
now.
0631 so basic sentences into javascript, 
we'll be converting them into objects
su we be wil convert ob them into objectsixsx<F3>c4343
ya'b'uckwhneatcaleb 
{"su":"we","be":"wil convert","ob":"them","into":"objects"};
tat later su me be add ob verb support and subject support to it ya
me.add("it","verb support","subject support",{"tat":"later"});
su sentence tha be have ob nesting clause-tail ob also possible ya
sentence.have("nesting") = also_possible();
su 1 of item ob array-reference ya
item[1] mode "640x480 60Hz 32bit (GTF)"
    # PCLK: 23.86 MHz, H: 29.82 kHz, V: 60.00 Hz
    geometry 640 480 640 480 32
    timings 41918 80 16 13 1 64 3
    hsync low
    vsync high
endmodeat = arrayReference();
su mwak file contents ob tha be file-read of io ob mwak.txt ya
mwak_file_contents = io.fileRead("mwak.txt");
ob hey world be log of console ya
console.log("hey world")
ob hey world be say ya
say("hey world");
0712 anyways the basic part is just the first of those examples
0716 vocabulary note: 
want to change with to mwa, and love to something else maybe yam
0723 ay borean wen eurasiatic sun afroasiatic 
nikw sino-tibetan nam macro-khoisan
so definitely an n in there, probably an a also
wan or yan perhaps PIE has wenos also, so wan is okay
0732 okay wan it is
0958 thinking should do a glyph transform to romanize some of
the other phonetic scripts, like hindi, arabic and the native
one. like cree and inuktitut syllabics. 
1313 can put it on the roadmap after compound words
1420 trying to get IPA keyboard to work, is a hassle ya
1931 ya I seem obsessed with phonetic transcription 
ya it be on my mind constantly in recent hours
1932 specifically the transcription of English,
but also of the word compounding algorithms for mwak. 
1933 for mwak it is simple in case of consonants clusters
comprised of 1, 2 or 4 consonants,  but near impossible for 3,
so only 1, 2, 4 or 5 will be legal 5 only if the middle is an h
or a . so say a hypothetical may and kya need to go together,
instead of maykya it would be may.kya 
the h is for making meaningful compounds, that are meant as one
word. for instance  piy mak can be piyhmak  then equivalent to
wiyp
1940 for simplicity I can have an external file for the local
glyphs to IPA conversion, similar to the normal dictionary.
for instance the mwak one can be mwak.ipa.txt
just like the normal dictionary, a json would be generated, and
required. there would then be a ipa glyph translate function
available ya
1943 another thing on the todo list is to move cmn to zhe
since zhe wil have the pronunciation reform, and cmn can be
whatever the mandarin people speak
2055 can use web workers API to speed up multi language
translation. If there is more than a quarter second lag then
people may think it is slow, or unresponsive. 
it seems to take more than a second to show output on my samsung
s3 mini, which has a dual core processor, so there is room for
improvement. 
} 05 Feb 2015
0513 so verb highlighting ya can be done in toLocaleString for
sentence ya
0519 actually phrasal level may be better ya
0524 made initial code, now to test
0542 okay cool it works, now lets move subPhrase to type
0617 okay did preliminary code for moving subphrase to type
now lets test
0627 debugging
0653 wow it's all really broken now
0657 translation doesn't work, the dictionaries are blank.
0737 after I fix this, can make the json files dictionaries
instead of plain text for faster load times.
0758 okay may just have to roll it back
and try again or leave the subphrase stuff for later
0806 okay did a restore, may need to rewrite the verb stuff
0807 seems to have been saved so should be okay
moved genitives attaching to 0.5.D
0821 will need to retest the verb header stuff
1339 I discovered SystemC, it's pretty amazing stuff. 
basically like flow based programming, but implementable for
FPGA's.  not sure if it can be used as a general purpose
programming language, but if so then awesome :-D.
There is even some work getting it's simulators to work in
OpenCl.
1921 thinking about pronunciation reform again, can make the
definitions like in espeak, where the simpler ones go first, and
more complex ones later. I think a good goal would be to have
under 0x100 rules for pronunciation, this would mean it wouldn't
get too close to any current variant of english for instance,
and would stay relatively close to the spelling. 
0551 so next step is to add less popular languages from plain
text definitions
0608 wrote algorithm and code, now to test.
0637 okay the plain translator is working, now updated
translationUpdate to use it for esperanto.
0641 okay now to test ya
0705 okay it works :-D
1546 great so next is web workers! w00t w00t, I'm rather excited
to be adding web workers. 
1656 hmmm seems like workers and threads are only good for pure
functions. can't seem to process things as large as the language
translations without loading a bunch of stuff. I'm not even sure
how they can load it all hmmm.
1733 seems like workers are best for low level stuff with reduce
and map and such, I'll see if can adapt parallel.js to nodejs
environment portable with others.
1735 first off will have to optimize the hof.js stuff to work on
serially without performacne downgrade
2229 for the website generator, it can do translation on-the-fly
on-request, 
} 07 Feb 2015
1154 okay so no success setting up OpenCl on my headless system
either. There is a chance my Odroid might work with my old
monitor..
1158 anyways what is really necessary is for it to put in the
DOM that it is doing the translations ya
1243 fixing up device width media queries so it works in firefox
phones ya
1252 cool so works with my samsung galaxy s3 mini anyways
1717 attempting to translate back dictionary file 
which Igor verified for Russian.
1722 maybe my string-literals are broken, 
but in any case I am implementing word-quotes next so in some
ways this is good.
1722 seems like quote extract isn't working properly ya
2037 if I remember correctly the problem was with literal
parsing, where I prematurely attempted to make it grab multiple
words.
} 08 Feb 2015
0709 thinking about setTimeout, can probably use it with the
after-case i.e. after 4 seconds be say ob tha hello world ya
setTimeout(console.log("hello world"),4*1000);
the-word after could be used for other things also
after hello be say ob tha su me be love ob you ya
var hello=new Worker(
function(){
this.postMessage("complete"); });
hello.onmessage = (function(data){
if (event.data === "complete"){
say("su me be love ob you"); } }
0724 anyways  it's better than using a bunch of untranslatable
place-cases like in on through, which don't translate well,
i.e. in 40 seconds, in russian is through 40 seconds. 
but in both of them it is after 40 seconds. 
0725 the workers examples I just gave was  abit contrived,
could also just do
hello();
say("su me be love ob you");
0726 another thing we need is the whole _ like in that gnu
translation software. so it could be 
say(_("su me be love ob you"));
and then it would translate to the destination locale.
1238 I'm thinking it would be good to have a model client,
or rather customer. in order for the language to be useable we
need more vocabulary. I think we don't even have enough to reach
toki pona level, or that of some of the oligosynthetic languages
around. 
spirit guides say I should be the first customer, and should aim
to make all my communications in mwak. "this will the be fastest
route to progress".
" go ahead write a simple readme file with what you have already
assembled, can avoid literal quotes till you fix them. but at
least have an initial paragraph describing the project and it's
long term aims."
1249 looking at the quote parsing, it seems the first quote
parse only does type final quotes, and doesn't even check what
kind the grammar wants.
1250 hmmm seems like I'm going to have to write out algorithms
for most of the code, since I don't really understand how it is
supposed to work.
1303 okay edited the type class to be more sane, by parsing
typing before slicing tokens.
1307 k after word literals I'll do the readme
1450 hmmm seems pretty ruined now ya
1453 rolled back the changes to make it the way it was.
} 09 Feb 2015
0553 so will set it up theh readme to have speak able
programming language at the top, then do some more coding ya
0630 it has occured to me that english is actually verb initial
and noun final ya
0633 once I get the quote literals working, 
I want to set it up so that when there is a vocabulary update,
the new words are added to the log. and if there is a maintainer
for a language, then the new words are emailed to them for
review. also should do unique verify and send those results in
the same email ya
0723 okay so I'll probably set up this sending results sooner
rather than later, already got it to output all the required
stuff to the log.
1249 replied to thread on mwak-spel list ya
so definitely keeping the ya at the end for declarative
sentences ya
so can probably take off the list the ya initial from the
roadmap ya
1338 just gotta finish fixing up the output of translation
update, and we'll have the readme.
} 10 Feb 2015
0526 translated quote and such.
0542 okay so now gotta debug literals
I changed them to "li"s to make it easier to read them
0554 getting some kind of stack overflow range error :-S
problem is i don't know where it is happening.
0604 seems to be somewhere in the parsing, or something that
calls the parsing, anywas sleep for now.
0652 I'm thinking  of word for word quote, 
multi word quote can use tsi
I'm thinking word-quote will translate as the-word
just as glyph quote can be the-letter or the-glyph
and phoneme can be the-sound or the-phoneme
0659 so it crashes at creation of new type
goes on an infinite loop after
0720 okay found what it was, it is the junction stuff,
got to limit it to either tail word, or so that it checks for
literal quotes first
0742 expialadoshus! I finally did it :-D
1426 practicing some svg
1443 one thing I find quite annoying about it is the co-ordinate
system, which starts at top left instead of bottom left. 
} 11 Feb 2015
1237 okay so I'm thinking since quotes are a fairly rare
phenomena, we should dedicate one, at most 3 words to it. 
we have the word for literal, we can also have a word for
head-quote and tail-quote, 
for instance the head-quote work for mwak can be tsi 
not sure about tail quote just yet. 
so for instance tsi mak wi  would mean quoting word wi 
for multi word quotes could be  
quoting.sentence.su me be say ob hello ya.sentence.quoted
and for literals it would be 
literally quoting word wi 
short forms are possible such as 
li quo word wi 
and 
li quo.sentence. yo tsupalies .sentence.enquo
or since it's literal
li quo.s. yo hey tsup! .s.enquo
quo.li. yo hey tsup! .li.enquo
1244 in more pertinent matters there is a debate about question
words going on, so I have to add eh, and question to the vocab
promptly. 
1246 we'll start with question and then do eh
btw got to move the russian translation now that I completed it
1259 question
suʾāl Arabic. pātai Maori. wèntí Mandarin. swali Swahili. soru
Turkish. shitsumon Japanese. rogatio Latin. pergunta Spanish. 
vopros russian. kwestSun English. pertanian Indonesian. 
pṛkskā PIE.
okay so definitely s and a t, possibly a p initial, a vowel
psat  os swat, I guess the p for PIE. though the w is in
sino-tibetan, niger-congo and germanic. so lets go with swat.
p is Austric, and PIE, 
1310 okay now eh
na Arabic. em Russian, ha Finnish, Dutch, Icelandic. que
Spanish.  so velar fricative a nasal are most common.
since it is usually rising tone, maybe we can make it shi
it is shi ma in Mandarin.
1317 maybe I can allow affricate nasals, like cmi
though can simply make it  cyi like english ey
1319 though I guess questions are common enough it should be
okay to give it a two letter word. past tense isn't represented
in Mandarin yet it has a two letter word. 
1320 I was using bread as example so should include that in the
extended vocab.
bharsjom in PIE. ti? Afroasiatic. pen Proto-IE bread-food,
Bhereg Proto-IE ritual-bread. roti Malay. paraora Maori. xubz
Arabic. mianbao Mandarin. panis Latin. xleb Russian.
definitely p and n, vowel a, can double the p for X
panp
unless we figure out a technological use for bread,
then it can be in the core vocab, maybe bread boards kinda
thing. hmmm nah w/e panp is okay for now.
1327 I'm thinking can also change the from ksa to ca
1340 okay lets extract and translate
1356 need a word for enjoy
1405 okay gotta translate store also, or rather shop
also enjoy
1445 first shop
dukkan Arabic. parduotuvė Lithuanian. kedai Malay.
shāngdiàn Mandarin.  mise Japanese. dukan Hindi. duka Swahili.
taberna Latin. Laden German. dukkan Turkish. magazine Russian.
looks like tuk with maybe an n or an m of the maga
tumk maybe, or tsuk 
1647 may as well make a word for store also
shop can be sell-place, and store can be hold-place,
sklad Russian/Czech, lager Swedish, varasto Finnish.
2149 meh anyways lets finish what was decided on.
2202 thinking of just calling it tunk instead of tsuk
since that n is lots of plases also. 
eh, tunk kinda sounds like thunk,
tsuk sounds kinda shiny.
2212 I just realized even with two vowels, it's not obvious
where to split it, since a word can initiate with two
consonants. and end with wone, so kyatsuy is it kyat suy or kya
tsuy? thus would have to split it with a glottal stop also
kyat.suy or kya.tsuy  only four consonants in a row would be
possible to have together, tunktsi always becomes tunk tsi
tupsi is ambigious without a glottal stop.
so it may be best to keep the spaces. for now anyways
until we figure out a way around it. 
2218 might consider making the tenses three letter words later.
2219 oh right so enjoy, hmm no word for self
self
zìwǒ Mandarin. jiko Japanese. sam Russian. sarili Tagalog. 
sui idem Latin. Korean jasin. nafs Arabic. self English. HVNNV
Borean. kendi Turkish.
definitely s and n, possibly l, with an a
saln slan or san, maybe can appeal to slavs with sam, 
but hardly anyone uses it.
so enjoy could be psac since joy is pac. 
hmm pac is a weird choice for joy, since it doesn't have any
rperesentation from any modern used languages..
2235 lets edit joy then also
gaudium Latin. furaha Swahili. hars Hindi. radost Russian. haz
Turkish. huanxie Mandarin. orom Hungarian. inpam  Tamil. suk
Thai. gladje Swedish. alegria spanish. 
okay so definitiely k, vowel a, maybe m  or l and t or s
kam is begin, mak is word. 
klat like glad.  hmmm also it's probaly pay or something frot he
Borean BVJV, 
could also do klas like russian cool, maybe pas would integrate
a bunch of them. w/e lets keep pac.  and thus psac 
hmmm actually I guess it's get joy, not necessaril self joy,
which would be being happy with oneself
2252 okay so get is kat, so pack joy get
shop is a sell place. 
sell
parduoti Lithuanian. ba Arabic. mai Mandarin. uru Japanese. 
vender Spanish. menjual Malay. prodat Russian. palda Korean.
satmak Turkish.  sell English.
okay so p, a, t, l or m
palt like korean or plam maybe pamt or plat like russian pay
2303 how to say pay?
sumoketi Lithuanian. zhifu Mandarin. yadfau Arabic. platit
Russian. bezahlen German. pagar Spanish. odemek Turkish. jibul
Korean. solvo Latin. toleer Tuvan. membayar Indonesian. 
s, p, u, m or l 
sump sulp 
sulp
2313 I'm wondering if this that yonder should be root words
instead of grammar particles.. dono
2316 buy
yastari Arabic, pirkti Lithuanian. emo Latin. kaupa Old Norse. 
erosi Basque. comprar Portuguese, Spanish. gnel Armenian. 
mai Chinese.  pokupat Russian. kobe Danish. ostaa Finnish. 
membeli Indonesian. satin almak Turkish. 
k, p, u, m, t
2321 hmmm since it's supposed to be a language of business,
maybe buy sell trade pay should all be three letter words.
2326 sell put,  pay sup, buy kup
kup sup put
2332 trade
perdagangan Malay. maoyi Mandarin. prekyba Lithuanian. Handel
German. comercio Spanish. hudaldaa Mongolian. paanit Thai.
gyoyeok Korean. vartakamu Telugu. vyapar Hindi. sakhar Hebrew.
tijara Arabic. 
m or n, c, maybe k, commerical, commerce, 
kum cum
2338 I should also add Finnish, Hebrew, and Thai to the
available languages. 
2345
buy, sell, trade, kup put cum
or kut put kum
hmmm. kut is small
kup put kum
I like last variant best
} 12 Feb 2015
0008 anyways gotta go to sleep,
it's translating the new languages,
can add the grammar tommorrow. 
0619 added grammar
0652 I guess we can add the question sentences to roadmap
1247 hmmm I guess I could add topic fronting.
or rather wh fronting. 
1249 but that is more of a conjugation layer thing
1251 okay so moved javascript to be after quotes
1253 wh fronting is relevant to the current discussions though
1300 implementing wh fronting algorithm
1405 time to test it
1423 okay have debugged it :-) will add to roadmap
} 13 Feb 2015
0847 okay so wh fronting is done, can probably git and push.
also can probably make a tarball release.
on the mailing list the topic of topicalization has come up,
so may end up implementing that next. 
1240 okay so we can add in topic fronting, it's kind of a mix of
both of, and wh fronting algorithms, In that it can either take
a phrase or a type as it's argument. which will allow for
the double-subjects found in topic-prominent languages. 
1400 anyways I should look into topicalization
1446 gotta add some more vocab words, like topic
1447 wi and wa are currently taken
but before it was wa in japanese, it was fa, so we can use that.
originally it was pa, but that is currently taken by "that".
semantically it came from the word for water-wave. 
1454 okay so word for topic
mawdu Arabic. zhuti (juti) Mandarin. tema Spanish, Russian,
Hungarian, Japanese, Italian, ~German, ~Irish. 
topic English, Malay, ~Portuguese 
definitely tem or rather tam
2229 maybe
rubama Arabic. tabun Japanese. yexu Mandarin. yau honang
Cantonese.  naski Basque.  mungkin Malay. fortasse Latin. 
sayad Persian. aseyigi Cherokee. iindog Ojibwe. magadguj
Mongolian. amado Korean. peut-etre French. barangkali
Indonesian. kong ja Thai. moZet bit Russian. belki Turkish.
quiza Turkish. talvez Portuguese. 
Okay quite a bit of different ones there. 
probably n, k , t or p with u for that low sound
punk or tunk
probably punk
2242 oh, but if it is used for dubitative mood then..
pyu or tyu unlikely kyu, pyu
2240 can make the other one for possibly then instead of maybe
lots of m initials in maybe so maybe mya, it has that maybe feel
to it like meh-yeah m'ya 
} 14 Feb 2014
1209 started working on business plan, is available in doc/
folder.
will need to break it down so it just has 2-4 top level
sections. 
0 the playing field
1 the problem
2 the solution
3 the projections
2023 I'm thinking of putting it together with a story that links
it all together. the story will be of a prototypical customer in
the current market. 
2032 cool so apparently there are industry classification
systems, so may be able to pinpoint which industry it is, that
uses the constructed natural languages. 
in the
ISIC  (International Standard Industrial Classification)
7490 Other professional, scientific and technical activities
n.e.c
6201 Computer programming and related activities
8219 photocopying, document preparation
8549 Other Education n.e.c. -- language instruction
doesn't quite fit into either of those very well.
NAICS  (North American Industry Classification System)
611420 Computer Training: programming schools.
541930 Translation and Interpretation services.
541511 Custom Computer Programming Services.
561410 Document Preparation Services
2126 The best niche is probably 611420
since we'd be training people that could then provide
custom computer programming, document preparation and
translation.
} 15 Feb 2015
0313 had a dream Linus's wife offered me a year free room and
board if I at least attempted to latch the Linux kernel. When
asking how It could get in. she said that she is his wife, can
go around the usual channels.
0318 also had another dream where I was part of some prophecy,
somehow related to a young RMS like figure, but in the prophecy
Claus was saying it ws about making an unlimited quantity of
him, without the side-effects. 
in the same dream I had to jump into a pool, and do some deep
diving, ended up diving through solids and walking through
walls,
	could swim through the air, and peep out of walls. 
0321 anyways only patch I can imagine for the linux kernel
would either be of documentation, or of allowing compiling down
or from the C in which it is written. 
} 16 Feb 2015
0601 had a dream there was a conference or event showcasing
sexist and offensive terms in technology. 
Anyways, it's a good idea to remove them. 
such as abort, kill, man(ual)
can be replaced with stop and help
anyways this will be for the shell/OS level
0609 in terms of supportin g the linux kernel, and other similar
projects, the easiest would be as localization software. 
such as gettext.
most likely would simply complement gettext,
by translating the gettext files for other locales.
cool so there is even gettext for javascript and nodejs.
0620 oh right, so I also figured earlier that can implement
topic by adding the capacity of all phrases to compound,
cuz for reason,  time at now, that kinda stuff.
0627 so main thing to change is parsing and the phrase class 
} 17 Feb 2015
0412 got SystemC working, but still no luck with headless openCL
1305 thinking of making a startup called LibreChips,
which produces ASIC Chips based on OpenCores.
it would be a fabless company, that contracts out.
non-profit open business. 
First chip will fit the ATMega8 form factor 28P3,
and is meant to be drop in compatible with relevant arduino
boards. 
It will use OpenRISC instruction set though, so software wont be
compatible, but it's also a good point of diversity,
one reason we'll have to charge more than for ATMega's
All cores and data will be relicensed as GPL-3 if possible.
May have to rename it from OpenRISC to LibreRISC.
or LibreCPU OR with version number.
international non-profit open-business.
can write the business plan and docs in SPEL.
1631 to take advantage of extraordinarity bias,
can have a new picture on the chip for every press.
1658 okay so not sure how many charcters can fit,
lets assume maybe 8 or 16.
can use some emoji to liven it up, such as date of manufacture.
If it was released today it would be
🐸 🚪 LCCOR100🐎 ♒ 
frog being the manufacturer emoji
door meaning it's a gate ASIC,
LCC0R100 meaning LibreChip CPU OpenRISC 1.0.0
horse meaning it is year of horse, and aquarius for the
approximate month of manufacture.
Emoji characters take up two character widths it seems like.
In terms of the different ASIC types
Gate Array 	🚪	door 
Structured ASIC	🚧	construction-sign
Standard Cell	🌻	flower
Full Custom  	👚	clothing
FPGA		🚀	rocket
CPU		🏠	house
GPU		🏫	school
SoC		🏡	house with garden

🐸 🚪 LC🏠 OR10🐎 ♒
1735 to be honest it is kinda silly.
LC is a good acronym though.
Also only leaves 256 version numbers, assuming hexadecimal.
🐸 🚪 LC🏠 OR10🐎 ♒
in chinese:
蛤门LC居0R10馬♒
I guess emoji is more international.
🗽  statue of liberty could be libre chips
1808 anyways so I'll email OpenCores about my idea.
} 18 Feb 2015
0729 evidence
zhengu Mandarin. prueba Spanish. dokazatelstvo Russian. 
bukti Indonesian. evidencia Portuguese. preuve French. 
shoko Japanese. bisonyitek Hungarian. Saksya Sanskrit.
kor pisoot Thai.
0731 I have an idea, I can make a translation thing that just
translates a single word, so I'll be able to see what it looks
like in all the supported languages... Though for that would
also need it to translate from other scripts to IPA.
0735 proof
zhengu Mandarin. prueba Spanish. dokazatelstvo Russian. 
bukti Indonesian. prova Portuguese. preuve French. 
shoko Japanese. bisonyitek Hungarian. Saksya Sanskrit.
beweis German.  kor pisoot Thai.
definitely p, likely f or w, maybe k or t final, u vowel
pfuk 😲  or pfut
maybe pwuk, or pwut
evidentiality can be pwu or pfu 
or since there is the r can be pyuf and pyu
ya, pyuf sounds like proof
0823 it and this has been giving me lots of trouble in
translation, I'm thinking of perhaps removing one, 
replacing ka with that, and then pa will be free for topic.
1637 anyways should get topicalization done before the end of
the week. Also should order the odroid VU.
so we'll start the parser with postpositional mwak,
and then work on the prepositional version ya
} 19 Feb 2015
0506 there is one more thing I wanted to add,
which is wild cards for phrases, allowing new kinds of phrase
cases to be formed. maybe can make it wu.
oh may as well add in namely. 
0531 name
name English. ism Arabic. nomen Latin. nama Malay. vardas
Lithuanian. izen Basque. peyar Tamil. isim Turkish. /imja/
Russian. namae Japanese. ireum Korean. ming Mandarin. 
maybe nim or nism, nim
0544 so namely will be ni
0636 okay coded it for postpositional style.
0722 so debugged it also. now have to get the class to
incorporate it as head. 
1612 working on equivalences between Javascript, SystemC and
OpenCl, so can use the same paradigm for programming them all.
SystemC		OpenCl		Javascript
MODULE				
METHOD				worker	
sensitive	events?		worker.onMessage
THREADC				thread or clockEvent Worker	
1620 the datatypes are
void		void		undefined
bool		bool		true/false
uint		cl_uint		unsigned
int		cl_int		signed
		float		float
				double
1632 can check out SYCL also, it is the C++ version of OpenCl
1645 OpenKODE also looks interesting, it is a portability layer.
1852 hmmm looking into SYCL it seems very fascinating.
anyways lets see if I can finish the phrase class stuff.
1901 okay close, but have to resolve prepositional words
different from noun compound words for best results.
can do same for verb compound words while we are at it.
0656 can signal what kind of word it is via the highlighting
interface ya
0757 okay cool it is working.  I spent unduly long debugging it
while it was working because I thought the test case was
different than it was.
0802 okay now we simply need the prepositional parse and class
0821 okay coded for clause final prepositionals. gotta test
0958 cool so it is working. now just have to add topic fronting.
I'm thinking vocative fronting, then wh fronting, then topic
fronting. 
1000 for now topic fronting, can base it on whFronting
1011 so I was reading typing speed is necessary for programmer
productivity, so can make 40wpm a qualifier for people that want
stable part-time work. 
1021 okay topic fronting works, now vocative fronting.
1026 great it works :-D. only thing might be for hebrew, 
they have topics at the end instead of the begining.
guess can have variable of topicInitial in wordOrder
} 21 Feb 2015
0713 actually I'm not so sure about the hebrew stuff,
it might be just for the subject, and I don't wnat to go
througha bunch of hassle for an exception. 
they can always add it in later if they like.
0734 hmmm seems to be an input bug for word order
0737 guess I have to notify type if it is a noun or verb
it then has to notify word
0810 so can use from-source it seems what people like,
and also it is compatible with open source, linking to sources.
source
madSdar Arabic. gensen Japanese. chulcheo Korean. genyuan
Mandarin. saltinis Lithuanian. sumber Malay. source French.
origem Portuguese. istochnik Russian. bron Dutch. kalla swedish.
s, c, k, p?, m? n? u
ksup, psuk,  psun
0839 weird li error when trying to do vocabUpdate
1037 okay fixed it
1324 tree
TVNV  Borean. dhwanwos PIE.
sajar Arabic. shu Mandarin. 
1352 hmm I think wh fronting is lower priority than topic
1353 also if it is a subject-prominent language it should
subject-front.
1500 so I have to fix up word compound inputs, then can make
release. meanwhile need to translate the word have.
1505 have idea for MISC, 4 bit opcodes, 4 bit registers.
not sure how immediates or memory access would work though.
VSDO opV,rS,rD,rO  fits in 2  bytes. 
but maybe best to be like RISCV 4 byte opcodes, 32bit.
stop reinventing the wheel for the CPU, just the FPGA assembly.
I dono if there is an FPGA assembly. there is microcode, which
is similar, but it's not cross processor, so that would have to
be fixed up.  I like how RISCV is little endian :-D.
1511 have
eiko PIE. KVTV Borean take/get. 
malaka Arabic. ada Malay. Old English habban. Old French avoir.
Old Portuguese teer. izan Basque. imetʲ Russian. yongyou
Mandarin. tener spanish. sahip Turkish. motsu Japanese.
kam hold,grasp Afroasiatic. hebben Low German. 
t,s,a  m, k 
maybe sak.. kap is head, kam is begin, kan is know. 
tak is thank. I can make begin something else.
k I deleted begin will have to propogate changes. 
20 added begin and finish based on mkaw vocab
} 22 Feb 2015
0644 so gotta add those compound input things.
0934 passed partOfSpeech information to type from phrase
yand from type to word yand rewrote algorithm for word ya
1536 talked to Inna about hebrew, she mentioned that hebrew
places the topics at the back of the sentence. so will have to
implement that. 
1837 been tuning the pseudo code to be like the future spel
code.
declaring input and output "ports" in the definition sentence.
} 23 Feb 2015
0704 okay, rewrote word, now to test
0724 debugging
0745 finished debugging :-D
1648 okay can post and then fix up the hebrew style topics.
1652 hmmm checking web version, having trouble with types that
have no body. 
1740 fixed
} 24 Feb 2014
0306 okay so gotta fix hebrew topics, subject prominence.
then can start working on quotes. 
also want to ask risc-v about a microcontroller version.
0322 also had minor topic issue where the topic word grabs the
contents of the phrase, have to restrict that to only if it is a
case. 
0332 added topic final and subject prominent
and fixed the topic grabbing stuff, will now test
0347 weird error where if simple topic phrase followed by
another phrase the contents of the simple topic phrase is lost.
0401 subject prominent fronting works. 
0420 the weird error seems limited to prepositional parsing
0426 okay fixed it I think.
0428 hmmmm now have to fix so the performance grammar doesn't
get in the way of postpositional topics
0438 okay seems pretty smooth, but clause-tail isn't marking
with the fronted cases. doesn't take into account the various
arrays and such.
0512 okay it seems to be working smoothly, will just check the
web version and then mark git release
0524 okay sleepy time
1254 okay so I'll slim down the roadmap to reduce scope bloat,
want to get to javascript translation ASAP.
1257 okay just three more things before javascript,
multi word quotes, multi sentence quotes,
and number quote endianness. 
1304 okay so it seems quote end-quote are what is usable
quote.logan. be happy .logan.end-quote
also Japanese comes to the rescue, with って (tte)
1310 it is used very similarly to that, being a postposition.
1326 okay so for literal quotes we'll use quote end-quote,
in the lojban zoi style. 
1330 and we'll do block quotes as per usual
be begin ob quote ya followed by be end ob quote ya
1331 I think block quotes are currently more important,
but multi word quotes are probably easier to implement,
can start with the parsing, then the quoteExtract would also
extract those. 
for block quotes would be a little more complicated, as a text
would have sub-texts. 
1333 number quote endianness is the easiest to implement.
maybe we can start with that. 
1432 little endian dozenal seems to be the best direction and
number base for mwak. we can symbolize any rational number with
the 12 consonants 0x0-0xB, 
m k y p w n s t l h f c
0 1 2 3 4 5 6 7 8 9 A B
decimal marker a 0xC, 
vinculum u 0xD, 
and negative i, 0xE
possible ., 0xF to show irrationality, or start/stop
.lkap or pi
hmm this kind of shows how big endian can be good,
since can more easily continue calculating pi with higher
precision, whereas with little endian have to pick a precision
and then count up.
I guess, addition, and multiplication are best done in little
endian, not sure about subtraction and division. 
1559 can use IEEE or similar style floating point numbers,
that way don't need a point. simply an exponent 
1945 superior highly composite fixed-point numbers
base 12 for  	4bit
base 120 for 	8bit
base 55440 for 	16bit
base 367567200 for 32bit
2251 I want to write a quick script, see how close I can
approximate, for instance pi by using these bases. 
} 25 Feb 2015
// fraction portion, Superior Highly Composite Numbers SHCN:          
//      base            bits    remainder or waste               
// base 6 for           3bit    2       1/4     25%              
// base 12 for          4bit    4       1/4     25%              
// base 60 for          6bit    4       1/6     6%  best         
// base 120 for         7bit    8       1/6     6%               
// base 360 for         9bit    152     19/64   30%              
// base 2520 for        12bit   1576    197/512 38%              
// base 5040 for        13bit   38%                              
// base 55440 for       16bit  10096 631/4096   15%              
// base 720720 for      20bit   31%                              
// base 1441440         21bit   31%                              
// base 4324320         23bit   48%                              
// base 21621600        25bit   35%                              
// base 367567200       29bit   31%                              
// base 6983776800      33bit   18%                              
// base 13967553600     34bit   18%                              
// base 321253732800    39bit   41%                              
// base 2248776129600   42bit   48%    
// so base 60 fractions are best,                                
//                                                               
// lets compare to IEEE floating points,                         
// binary16 has 5 bits exponent, 1 sign bit, 11 bits precision   
//                                                               
// the fraction portion can either be appended on, or can be     
// incorporated..  6 bits fraction, 10 bits precision.           
// or 6 bits precision, 3 bits exponent and 1 bit sign..         
// kinda looses the simplicity if we have an exponent            
// but we can have much larger numbers than 100                  
// we can have the exponents be of 60                            
// so 2046 would be (6/60+34)*60                                 
// 65536 would be (12/60+18)*60^2 or 65520                       
//                                                               
// okay now I want to write a basic program to approximate       
// fractions for real numbers like pi, e and phi.                
// see if even with the waste it makes sense to go with larger   
// composite numbers.           
//
e
0.7182818284590452
0.6666666666666666 0.05161516179237857 4/6
0.75 0.0317181715409548 9/12
0.7166666666666667 0.0016151617923785277 43/60
0.7166666666666667 0.0016151617923785277 86/120
0.7152777777777778 0.0030040506812674117 103/144
0.7194444444444444 0.0011626159853992402 259/360
0.7182539682539683 0.000027860205076946087 1810/2520
0.7183333333333334 0.000051504874288177405 2586/3600
0.7182539682539683 0.000027860205076946087 3620/5040
0.7182900432900433 0.000008214830998110045 39822/55440
0.7182817182817183 1.1017732692852888e-7 3106080/4324320
0.7182817901234568 3.83355883704084e-8 9308932/12960000
0.7182818107818107 1.7677234454005486e-8 15530402/21621600

0118 based on these results among others, it is clear that even
though there may be some "waste", the higher SHCN numbers give
higher precision, and thus are worth using for fractional
representation.
they also neatly divide into each other so are easily
tranformed. for instance 55440 is 924 times larger than 60.
and 21621600 is 360360 times larger.
0131 also interesting to note is that their precision tends to
be equal to their length, so it is well worth while, binary
can't possibly give better precision, especially considering it
can't even render 1/3 or 1/5 succinctly.
so yeah, I guess if the base and exponent reflects the base used
in the fraction, then can have comprable range to IEEE floats.
0133 yeah, the range is comparable 60^3 is more than 2^14,
but 60^-3 is less than 2^-24
0139 infinity can be 63, NaN can be 60, 
0725 can make a program to test the completeness of the
representation in integerspace
0956 checked musical limits, 3,5,7,11,15
they are represented perfectly by SHCN,
3-limit by 6 and above		(SHCN8)
5-limit by 60 and above		(SHCN16)
7-limit by 2520 and above   	(SHCN32)
11-limit by 55440 and above	(SHCN64)
15-limit by 60 and above 	(SHCN16)
1101 Tonality Diamonds, a band on Mercury, or perhaps Venus.
More likely Venus, as they have good amount of atmosphere,
and enough stability to be enjoying the arts aplenty. 
1135 thinking of a simple emulator that can implement,
using three or four shorts.  1 short for fraction, 2 shorts for
precision, 1 short for exponents and signs.
1138 okay before I go ranting and raving about this,
should make an algorithm to test the thoroughness of
representation throughout it's range, for instance there may be
some holes that aren't represented after exponentiation. 
for SHCN64 though can have 25bit SHCN for fraction and precision. 
1221 25bit SHCN can represent 13-limit perfectly, 
so can play "The Fruit of Life".
1238 okay I should make a document or something, like an article
that I could publish about it. but anyways I wanted to make a
pizza analogy of large and small infinities.
say you have 2 people, and 1 pizza, 
each slice is 1/2 of the pizza,
pizza divided in half 1/(1/2) so there are 2 slices in total. 
now say we have 3 people and 1 pizza,
each slice is 1/3 of the pizza
pizza is split in (1/1/3) and there are 3 slices in total.
now say we have an infinite number of people,
each slice is 1/infinity or nothing of the pizza,
1/(1/infinity) = 1/0  = infinity. 
so there is a large infinity number of slices.
1251 the above numbers can all be represnted in  SHCN8
1252 something that definitely have to do, is figure out how to
do the floating point operations. 
if it is in the same base it is pretty easy.
lets figure out how to represent it in written form
0S 0E 0P 0F = 0
S sign, E exponent, P precision, F fraction
pi in SHCN8
0S 0E 3P 1F = 3.1666.. 	doz 3.2
golden in SHCN8
0S 0E 1P 4F = 1.66666 	doz 1.8
9 in SHCNB
0S 1E 4P 1F = 0.61666	doz 0.
1305 hmmm it seems confusing having both a precision and
fraction portion, maybe we can just have the fraction..
1306 so how about we try it with a 6bit fraction in SHCN8
1314 okay so can make it like in music theory,
i.e. the top fraction is increment over 1. 
hmmm having some trouble getting it to work in javascript,
it seems to be rounding to integer instead of using float.
1328 hmmm nope, seems best to keep precision and fraction
seperate.  so what's the algorithm for that?
can get something that fits in base for precision,
then put the rest into fraction. 
1650 business plan ideas:
Name			Timeline	Products
- Learn	with SPEL	1+ years	MOOC certificates
- Manage with SPEL	3+ years	translingual collaboration 
- Archival Press	4+ years	archival quality reprint
- LibreChips 		7+ years 	(MC, SHCNFP, VLIW, FPGA)
- LibreBots		11+ years	GI-OS, libre robots
- LibreCommunity	18+ years	civilization seeds
- LibrePlanets		27+ years	interplanetary seeds
1957 current SHCN algorithm is On possibly O^n, donno,
anywas I want to make one that is O(log(n)) or something...
basically start half way through base, compare to fraction,
if difference i negative go up spliting remaining base in half,
if positive go other way, until there is no gain in precision.
} 26 Feb 2015
0645 so can have SHCN fixed and floats, the fixed are easier to
compute with, and are better for precise calculation like for
finance.  whereas the floats could be good for representing very
large or very small values.  
anyways I've got to get back to more perinent stuff. 
0656 I'll just notify the libfixmath people as it is more their
domain.
} 28 Feb 2015
1013 so I'm thinking website localization seems to be the most
viable business for SPEL. The software would be free, but
translating the current content out of Natural into SPEL variant
is where the money would be. Could also offer certification for
people to become official translators.
} 01 March 2015 
0143 after lots of encouraging from Justin and Igor, I've
decided to make some concept diagrams for SPEL. While UML is
currently the industry standard, I'm much more impressed by ISO
STEP and EXPRESS. Since it allows modeling without silly GUI's.
Well and it is an International Standard, which can also be used
for making products, including CAD, absolutely awesome stuff.
I don't know why it's not more famous. maybe ISO is charging
people to have access to the standard.. Dono, read it was
open-standard, but not sure. 
1248 EXPRESS has minimal support, and STEP is proprietary.
So I'll use Petri Nets, since they are mathematically
validatable.
} 02 Mar 2015
0610 anyways enough with all this foolishness. time to finish
adding quotes so can make this into a real programming language. 
0715 okay wrote multiWordQuoteParse now to test.
0744 debugging multi qord quote parse
0747 okay it works :-) ya now for adding it to quote extract
yand type class ya
0800 updating quotesExtract
0822 had to make firstMultiWordQuoteParse also. have to test it.
0834 debugging.
0844 having some trouble since index shifts at every slice.
need to find total address somehow.
0949 okay fixed,
0950 all that is left is adding it to type.js 
1151 working on the readme some more
} 03 March 2015
0710 so I need  type to recognize that it is a multi word quote,
and then process it as such, perhaps sending it to a quote
class. word order is preserved for the quoted portion.
0735 okay added
0744 now to test
0805 okay words for Type with mwak, needs some tuning for
english.
0808 okay works for type initial now also :-)
0809 does not work for Phrase will need to fix
1554 may be issue with quotesExtract
} 04 Mar 2015
0705 debugged quotesExtract, now to test with Phrase
0708 excellent it is working, now will test in web version.
0711 awesome it is working, I can put it on roadmap
0736 so I can probably make an illustration of the syntax tree,
and then post to mailing list about it.
} 05 Mar 2015
0645 I'll make the syntax tree for the readme and then send it
in for review to the mailin list.
} 06 Mar 2015
1200 finalized first version of info/readme.tex
} 07  Mar 2015
0155 trying to process request to translate to conjugated
English, not sure why it doesn't seem to be conjugating, will
have to check sources.
0209 it's because Text doesn't pass it on.
0240 need word for but (except)
mō PIE. chule yiwai Mandarin. kecuali Malay. siwan Arabic. tapi
Indonesian. igai Japanese. krome Russian. csak Hungarian. salvo
Spanish, Portuguese. 
so probably a klac
0252 not
me PIE. ney Indo-European.
nyi
} 08 Mar 2015
0906 after adding multi sentence quotes and number direction
inversion can add a continuous deployment pipeline, with a
battery of standardized tests to check before commit ya
1441 thinking we need at least someone in each continental
region to have a global business. can probably approximate to
the leyline nodes for most interesting results. 
we need someone for sure in China, Tansania/Africa, Russia, 
Latin America, Middle-East, India, Oceania, Europe, Japan, Korea
Anyways, k lets pick just one per continent first
what are the continents?  Europe, Asia, Africa, Americas,
Australia/Oceania. 
subcontinents? India 
okay leyline for 
EUROPE
hexagon node: Vietka, Belarussia or Gomel Belarussia.
diamond node: ullapool, or Glasgow, Scotland.
ASIA
star node: southern Japan.
hexagon node: Irkutsk, Russia
south diamond node: Chengdu, China
west diamond node: Tobolsk or Tyumen, Russia
east diamond node: magadan or khabarovsk, Russia

South-east Asia:
hexagon node: Thma sa or Krong Preah, Cambodia
diamond node: Palu, Indonesia
Austronesia:
star node: suva, Fiji or kolovai, Tonga
star node: honolulu, Hawaii
star node: easter island
hexagon node: martial islands
hexagon node: nhulunbuy, Australia or Daru, Papua New Guinea
diamond node: port augusta, Australia
Middle East:
star node: Johi, Dadu or Nawabashah, Karachi, Pakistan.
Africa:
star node: tinduf, Algeria, or Agadir, Morocco
star node: manzini, Swaziland.
hexagon node: talodi or kaduqli, Sudan. 
diamond node: Cairo, Egypt.
diamond node: makokou or okandja of Gabon. 
AMERICAS:
North:
negative node: freeport, grand bahama
hexagon node: bashaw, wetaskiwin or red deer, Alberta, Canada
hexagon node: st. john, Newfoundland, Canda

Central:
hexagon Node: Lazaro Cardenas, Mexico
diamond node: Sonoyta, Mexico or Lukeville USA.
South:
negative node: Rio de Janero, Brazil
hexagon node: oyon, Peru, or Huacho Peru. ~Lima
hexagon node: punta arenas, Chile.
diamond node: boa vista, Brazil
diamond node: illapel, valparaiso, la serena, santiago, Chile
diamond node: puerto villamil, galapagos, Ecuador
Atlantic:
positive node: St. Helena
Antarctic:
negative node: McMurdo, Antarctica (research facility).
	Puerto williams, Chile. Ushuaia, Argentina.
Arctic:
star node: longyearbyen, svalbard, Norway,
ellesmere island, 
diamond node: ~iqaluit, nunavut, Canada
diamond node: homer, alaska, USA
diamond node: buldir island (uninhabited), shemya, alaska, USA
1638 okay well that's all well and good. part of me thinks
perhaps we should focus on cities over 1 million, but on the
other hand I don't really see why that would make any
difference, the important part is that they have internet
access, and are willing to work for our wages. 
1644 on the other hand considering this is mostly for
translation it is best to select places with high demand for
either programming or translation. 
1647 okay most diverse lingusitically places: 
http://mapmaker.education.nationalgeographic.com/?lg=5&b=1&f=491&bbox=119.30559%2C-31.42866%2C57.78215%2C77.89726&ar_a=1&ls=000000040000&t=1
AMERICAS
North-America:
Canada
Central-America:
Guatemala
South-America:
Suriname
Bolivia
Trinidad and Tobago
MIDDLE-EAST
Iran
ASIA
India
Bhutan
Indonesia
OCEANIA
New Caledonia 
Vanuati
Solomon Islands
Phillipines
Papua New Guinea
AFRICA
most states south of sahara.
1838 can see which intersect with technology centers
ASIA
star: IT Media City, Karachi
star: Hsinchu, Taiwan
or Shanghai, China, or Yokkaichi, Mie, Japan or Naha, Japan.
hexagon: Tianfu Software Park, Chengdu, China 
hexagon: Software Park Thailand, Bangkok, Thailand
or Kulim, Malaysia or Singapore
diamond: chennai, tamil-nadu, India
diamond: davao, Philipines
Pardis, Iran 
AUSTRALIA
Star: Technology Park, Bentley, Western Australia
Diamond: Digital Harbour, Melbourne or Adelaide
AFRICA
Star: Casablanca Technopark, Casablanca, Morocco
OR Technopole of Algiers, Algeria 
Star: Johannesburg, South Africa
OR Maputo, Mozambique OR  Richard's Bay, South Africa
Hexagon: Addis Abeba, Ethiopia
or Malakal, South Sudan, OR El Obeid, Sudan, 
Diamond: Smart Village Egypt, Greater Cairo, Egypt
Diamond: Lagos, Nigeria 
or Pointe Noire, Congo or Libreville, Gabon 
Diamond: Mombasa, somalia or Mogadishu, Somalia
AMERICAS
North: 
Star: Miami, Florida
Diamond: Silicon Valley, San Jose, California
or Chandler, Arizona
Diamond: Inukjuak, Quebec, Canada
Central:
guatemala, guatemala.
South:
star: São Paulo, Brazil
diamond: Paramaribo, Suriname
Hexagon: Lima, Peru or Cochabamba, Bolivia
Europe
diamond: Greenock, Scotland
} 09 Mar 2015
1153 anyways have to write multi sentence quotes, or subordinate
text. first I guess we start with the parser, then add it to
quote extract, (if verb word, then get it, if start/end then get
the subordinate text), then we'll add it to Text class.
2128 wrote algorithm
} 10 Mar 2015
1009 okay so multiple languages is very important for SPEL,
so Africa is one of the main places for that.
Middle-East:
Pardis, Tehran, Iran
AFRICA
East-Africa: Addis Abeba, Ethiopia
West Africa: Lagos, Nigeria
South Africa: Johannesburg
OCEANIA:
Shanghai, China or Hsinchu, Taiwan
Singopore, Singopore or Ho Chi Minh, Vietnam
University of Technology, Lae, Papua New Guinea
Chennai, India
Davao, Philipines
AMERICAS
Central: Guatemala, guatemala
South:
western: Bolivia
northern: Suriname
eastern: sao paulo
southern: chile/argentia
EUROPE
Brussels, Belgium (Seat of EU)
Krakow, Poland
1111 okay anyways I should do some coding ya
} 11 March 2015
0547 wrote algorithm and code
0550 I'll get it to parse, then I'll take a nap.
0554 okay it compiles, I take nap
1306 time to test and debug
1338 debuging, will have to do subject matching later also,
or genitive matching... guess subject since it's easier,
we still have to fix genitives.. eventually
1342 added it to roadmap as 0.6.6
1401 okay debugged current version,
still have to add subject matching.
1442 hmmm thinking it might actually be easier than I thought to
add the genitive version, can simply grab the whole be phrase,
which will contain the of or genitive, then can match against
it instead of end word and seperately other stuff.
it allows for "anonymous subtexts", wheras the subject would
make them named subtexts
1510 installing project libre, maybe will help with project
management ya had to adjust my theme to make it more menu
friendly, before it was black on black, hard to read ya
1514 dono, tried it, didn't like it. scary, it has menus.
and tasks and stuff, I don't need that, I have a roadmap.
1515 anyways got to code the new revisions,
i'll start with just making the named version support,
and then I'll add in support for the anonymous version.
okay put it on the roadmap. 
} 12 Mar 2015
0715 bah, I'm so upset with myself, spent all morning replying
to an email instead of writing code.
0740 wrote surroundingSentenceIndexParse
1459 okay time to rewrite the whole algorithm,
for the parsing instead of hacking away at it. 
1511 now looking at the new algorithm, I'm wondering if perhaps
it would make more sense to do subText parsing at the Text
level, since we actually would find it easier with the sentences
already well formed. 
some of these features would be good for the DB API, like the
phrase finding. 
1515 okay lets check out where it would be best to insert this
text extraction, I'm guessing after most of the rest is done, it
would be a higher level reorganization.
1522 have to write text algorithm for what is already taking
place
2306 okay so there is a sentences array, now what. 
I guess we can find the subordinate texts and splice them out.
replacing it with their Text object.
The hardest part here would be nested subordinate text objects. 
either we'd have to do deep recursion, or rely on the Texts to
check themselves upon instantiation. 
also if the first sentence is a start sentence, and has a
subject, then we can set the text title.
}  13 Mar 2015
0700 wrote code for setting title of Text from first sentence ya
0702 now to test
0711 okay that works
0715 how can we be faster than assembly? FPGA's ;-).
0753 wrote subordinateTextSplice
0754 now have to write subordinateTextIndexExtract
0803 rewriting the algorithm with available Text API
0808 rewrote algorithm ya
0825 hmmm in order to use Text stuff, I'd have to either make a
text, or  make functions which can access sentences directly.
0835 okay made a rawSentenceFindGet
0914 okay coded it, now debugging ya
1104 hmmm how are we going to do the vocab stuff,
I'm thinking if we do some small number per day, can reach a
sufficent number overall.  perhaps like 16 or 12 a day. 
there are 158 words at present, we need something like 4,096
in order to have enough for a working vocabulary. 
12glyph has room for roughly a thousand, and 16glyph core for
two thousand,  so can do the framenet vocab in there,
and then add in remaining oxford 3000 to extended 16 bit.
if we do 20 words a day, can get to two thousand in 3 months.
1143 okay in my vocab core I see ~900 words.
can translate by random sample, by shuffeling the words that I
will be doing, then taking top few out to do.  reshuffeling the
next day, translating next batch, and so on.
1513 if I do one word per 5 minutes, I can do 16 words in an
hour and 20 minutes.
anyways should finish testing the subordinate texts
1531 there is some infinite loop somewhere
1533 okay solved that but there is some other issues now.
i'll bike for some shopping and then fix it after.
2137 thinking of just doing programming and debuging in morning,
and after noon doing vocab work. kinda didn't realize how  much
is missing. also vocab work doesn't require much skill. anyways.
2141 while (conjunction)
dang Mandarin. bayanamaa Arabic. dum Latin. poka Russian. ken
Turkish. aida-ni Japanese. sementara Indonesia.
2146 hmmm, it would be more structured if I chose one from each
of the big families. and had them in order of those families.
PIE, Sino-Tibetan, Afro-asiatic, Niger-Congo, Austric, Altaic,
Turkic, Uralic
okay so lets try again
dum Latin. poka Russian. dang Mandarin. bayanamaa Arabic. wakati Swahili,
 sementara Indonesia.  aida ni Japanese. ken Turkish. mig
hungarian.
2202 okay so obviously it is taking too long, can make some
scripts which use google translate, and then translate to IPA,
perhaps using espeak, or a basic glyph to IPA thing.
hmmm mandarin would need espeak.
2208 also we need a good sample of Proto-Indo-European. Guess
can use the most common langs for it. English, Spanish, Hindi,
Russian. 
2213 I'm almost tempted to pull a lojban and just do it for the
top eight languages or so.. but then I'd be excluding
niger-congo. okay looking at list of PIE branches.
from earliest to newest
Greek, Hindi, Russian, English, Spanish, Irish
okay if we strip the low used ones,
Hindi, Russian, English, Spanish to represent PIE.
(Europe/America)
Mandarin for sino-tibetan, Japanese for Altaic (far East)
Arabic for afro-asiatic (middle-east)
Swahili for niger-congo (Africa)
Indonesian for Austric (oceania or south-east asia)
Turkish for Turkic (central-asia)
and uralic is too minor
2233 so how many is that? 10, guess that's a good number
okay lets set up a simple translate script for it.
} Mar 14 2015
0720 okay works, just need to work on the script to IPA thing,
have been having some trouble with espeak. but ya anyways back
to debugging.
0726 okay seems to be working, would test it more but not sure
how. okay so lets just call it done then.
0736 okay next is number quote endianness. or lets fix the
espeak for the evening ya
0817 prett much works, just need arabic espeak files, and to
redirect stderr from translate-bin so that it doesn't clutter 
the screen.
0827 so need japanese and arabic
1128 actually looking into it more, seems like Turkish should be
enough to represent Altaic, it is the oldest member of that
language family. Also Korean and Japonic are isolates, so are
divergent, wheras turkic has been in central asia a long time,
so is more likely to be true to it's roots. 
1132 means I only need to add support for arabic.
1216 okay it works :-D
 /wˈaɪl/ while en. 
 /ˈərɜ/ 而 zh. 
 /mjˈɛntɾas/ mientras es. 
 /fj ħjn/ في حين ar. 
 /ɟˈʌbkˌɪ/ जबकि hi. 
 /f tˈo vrʲˈemʲʌ kˈɑk/ в то время как ru. 
 /səməntˈara/ sementara id. 
 /wakˈati/ wakati sw. 
 /syɾˈɛ/ süre tr. 
1217 cool so now can probably put those IPA's together to form a
frequency analysis at the bottom.
oh w/e  loop
 /lˈuːp/ loop :en. 
 /xˈuaɜn/ 环 :zh. 
 /bˈukle/ bucle :es. 
 /أnʃwtˤة/ أنشوطة :ar. 
 /pˈaːʃ/ पाश :hi. 
 /pʲˈetɭʌ/ петля :ru. 
 /putˈaran/ putaran :id. 
 /kitˈanzi/ kitanzi :sw. 
 /dœnɡˈø/ döngü :tr. 
punt
1231
 /tˈɛkst/ text :en. 
 /wˈuəɜn pˈə2n/ 文本 :zh. 
 /tˈeksto/ texto :es. 
 /nsˤ/ نص :ar. 
 /ʈˈeːksʈ/ टेक्स्ट :hi. 
 /tʲˈekst/ текст :ru. 
 /tˈɛks/ teks :id. 
 /nakˈala/ Nakala :sw. 
 /metˈɪn/ metin :tr. 
tink
1238 swa for while
1240 during for the noun version
1243 tuwn for during. cool seems like at this speed can meet the
roadmap for vocab. 
1252 liyt for literature
1638 imagine mack
1705 awake yank
1714 express ksap
1723 deserve tsil
1729 taste tsaf
2220 want to add art, best is sant, but may need to redefine
sentence
 /sˈɛntəns/ sentence :en. 
 /tɕˈy5 tsi̪1/ 句子 :zh. 
 /ˌɔɾaθjˈɔŋ/ oración :es. 
 /sˈʌɟaː/ सजा :hi. 
 /alʒmlh / الجملة :ar. 
 /kalˈimat/ kalimat :id. 
 /prʲidɭʌʒˈɛnijɪ/ предложение :ru. 
 /hukˈumu/ hukumu :sw. 
 /dʒˈømlɛ/ cümle :tr. 
cuml
hmmm cuml isn't valid clum
2302 mast hostile, pyit baby.
2305 pyuc project. 
2314 twis true.  milt ally.
2320 lank color.
} 15 Mar 2015
0900 tin see, tap touch, 
1506 adding words, and definitions.
1513 hmmm rhotic sounds are so common, I'm thinking of changing
l to r. but maybe it is too late for that.. few languages have
the same kind of rhotic sounds, and it's a weak sound. few
people can pronounce a true rolling r if they weren't born into
a trill r language. 
1546 can check which words don't have definitions
2148 guess I can include hungarian for uralic, it's easy to do,
and the total land area does cover nearly as much as
austronesian languages. 
2217 the way I grok it, a tradition is a state machine.
} 16 Mar 2015
0637 so lets see what else is on the roadmap
0638 number quote endianness and continuous deployment tests.
0639 so can do endianness in type probably, need both input and
output ya eventually would be best to split it out into
subclasses or something ya
0729 okay coded it.  now have to test ya
0828 okay it is fully working, will now git update
0839 first there is weird bug with sub texts when trying to do
vocab update.
1139 fixed the one releated to yi's, but still one with li's
1148 okay seems fully fixed now
1217 testing translation
1517 okay finally is working smoothly, it was issue that there
was an empty definition.
1522 hmmm yand and while is the same thing it seems like.
1534 replaced yand kwi with while swi :-)
1603 okay reduced some duplicates by taking out some synonyms
will try adding some new words now.
1627 added become and force
} 17 Mar 2015
0726 so I looked up block chains, and it turns out it's just a
distributed database. then I looked up magnet links, and it
turns out they work with distributed hash tables. 
0728 force is mass * distance/time^2 or maybe push amount
0733 hmmm become sounds like an aspect, a little bit farther
along than inchoative. so probably should make it into a grammar
word. It can only be used as a verb anyways.
0742 anyways I should set up the deployment test since it's
morning, and leave the vocab work for the evening.
0743 in terms of the distributed databases and hash tables, can
keep in mind making something like that with SPEL/mwak, that way
can make a SPEL network. encryption would be optional.
optimization would be for scalability, speed, and redundancy.
0744 proof of work seems to be a major waste of time,
however it uses tests to verify something hard to make,
so it might be possible to use it for SPEL development,
the hardest part would be generating the deployment tests,
to check if the new program meets the requirements. 
0748 okay so how are we going to accomplish these deployment
tests. I'm thinking I can research how deployment tests are
done. test automation.
0751 so there can be the names in the entries of the hosts,
these hosts could have records, such as for stability and
bandwidth, they would hold and maintain the manifests of the
files. I guess they would be bittorrent trackers, but for whole
websites. 
so for instance someone requests a website, via the WYN proxy,
depending on settings, it can prioritize getting it from the
original site, or get a WYN archive copy. for sites stored
completely in the WYN archive it would be just from there. 
so simple case is getting it normally from http server,
and then storing a copy in the proxy with a time-to-live,
notifying the network of it's availability at this source.
if someone later wishes to use the network to get it
0822 people would get paid in cryptocoin for hosting sites,
there can be soem kind of stats for which sites are most often
requested from the network, i.e. too slow from the original
source, these would be prioritized for loading into network, as
people could get paid for them. 
1321 have to translate part of genesis 11:6 for an email
YLT 11:6
 and Jehovah saith, `Lo, the people [is] one, and one 
pronunciation [is] to them all, and this it hath dreamed 
of doing; and now, nothing is restrained from them of that 
which they have purposed to do.'
NASB 11:6
The Lord said, “Behold, they are one people, and they all have 
[a]the same language. And this is what they began to do, 
and now nothing which they purpose to do will 
be [b]impossible for them.
SPEL B 11:6
look su the people ob one while su one language to them all ya
and about this su it be hold ob dream to make  
while now  su null be hold from them about tha su them be hold ob
purpose to make ya
1338 so we need dream, keep, hold, purpose
1339 btw I've decided to remove have in favour of hold ya
some langauges don't hold a word for have ya and some languages
use have as a grammatical structure for tense and aspect.
1341 guess we'll start with the others for now
hmm keep and hold is the same word in most languages. 
1551 be capable might be best as kip
} 18 Mar 2015
0750  I'm thinking of using Tape as a testing framework. 
0753 one issue i'm having with translating is the about clause
isn't closing properly
1148 okay I'm making the tests, have made for word, and now
working on for types. guess I should do compound words also
actually.
1203 hmmm need to debug foreign quote it seems.
1207 okay fixed
1223 great all the type tests work, now for the phrase tests ya
1240 issue with verb order input from english, will have to fix
that.
1323 okay fixed it :-)
} 19 Mar 2015
0525 I might need a deep compare function for sentences/phrases
etc. I have isLike, but that's not isEqual ya
I guess it is equal if it is both a subset and a superset ya
0543 anyways can implement that a bit later, right now I need to
work out the kinks from that babel translation ya
0556 it seems to be cropping last word from top clause input ya
i'll take a nap for now.
1314 k so I guess it's vocab time. can check to see what kind of
vocab need to translate for the javadoc and prioritize that.
1359 so lets try translating first clause of Utils.java
Class provides centralized access to configuration property 
file and few general utility methods, can play role of 
application context.

su class be provide ob main access 
to configuration property file and few general utility method 
while be capable ob tha be application context ya
2118 so I was thinking how can make cryptocurrency or librecoin
based on a joule, a unit of energy, 2^16 joules is about 15
nutritional calories, about the size of a small sushi, or about
0.18 cents of electricity if it is at 10 cents per kilowatt.
can also calculate how much ram/disk space that is used by an
algorithm, is worth, based on the life-expectancy of the
ram or disk and cost of it, the cost would be converted to
joules via the price per kilowatt.
} 29 Mar 2015
0712 will definitely need to have conjugation which modifies
noun for the verb phrase ya
0821 added phoneme counter to word translate
} 21 Mar 2015
0235 so still have a few kinks to work out, mostly with top
clauses it seems. 
0237 also not sure if utility should be in the top few thousand
words.  but I guess it's common enough for computing and
economics that it would be good to have.
0752 trying to work out the kinks, main ones being lack of
subclause term for about tha, and the odd dropping of last word
of topClause
0805 okay fixed the subordinate clause thing
0814 can't seem to identify where the other issue is, it might
be something that passes to parsing of clause
} 22 Mar 2015 
0715 okay I narrowed it down, seems to be the mood word isn't
being properly accounted for. 
0742 okay I fixed it, issue was an inaccurate slice.
0743 I'd also like to only allocate topics/vocatives if they
don't have a clause when clause-final, since otherwise 
it would be best to put them at back to avoid the nasty
clause-tail word. or we could make it less nasty, though I think
for topic it's not so important. especially in English anyways
1239 I think that might be just making more work for myself at
the moment, have to focus on getting it to work at an acceptable
level, not necessarily at an ideal level.
2225 hmmm the mood doesn't work if input from clause, will have
to fix.
2251 can replace ti with kwa and make ti it, then ka can be as
2256 or maybe I should use which instead of that.
tli for unquote, tyi for quote
} 23 Mar 2015
0713 attempting to fix the mood thing for clause initial
sentences ya
0719 okay fixed
0724 okay now we have too many clauseTerms
0733 hmmm newline between topClause's may be beneficial
0743 fixed the topic if it contains clause
0749 okay seems fully operational
0751 just need to update vocab and adjust grammar
0759 oh yea, and adjust/check web version
0805 on isn't in enough languages will have to remove it
0807 guess we'll keep na as numeral then
1104 drafting email of the updates
1321 have issue with junctions, probably not being processed
properly in performance grammar
1406 okay had to extract the topClause and append it.
1411 now main issue is that some of the longer phrases seem to
be outputting as verb when they are nouns.
1448 it seems to be issue when it is inputing for first time
2301 added a bunch of words, now sleepy time
0641 should finish debugging that junction stuff
0706 okay got the input working, now just need the output
working also.
afterwards I'll set up a test to make sure this stays working ya
0711 okay it works. now to set up the test
0720 hmmm there is mild inconsistency in the test results, so
I'll see if I can fix that.
0721 also if I could somehow change the english default to be
based on noun rather than verb, that would be ideal.
0733 okay seems to work that way now :-)
I'd like to also check the verb version, since it was showing
some inconsistencies.
0749 there is also a weird double space at end of verb junction,
but w/e will leave that for later. meanwhile managed to
reduplicate that verb word order issue.
0753 okay fixed that also :-D. now can write that email.
0758 even managed to track down that rogue space ya
2135 the dictionary function on the web version doesn't work.
2209 was thinking about sailing on venus.
wins pi psit tya tyup ka lasp .i myin ya
} 25 Mar 2015
0524 unfortunately it seems that at is too ambigious in most
languages, so it is easier to use in, same in reference to on. 
by ambigious I mean that it collides with other words in various
languages. 
0541 hmmm of doesn't seem to be working right, I'll make it as
noun part of speech.
0557 anywas so next lets do the javascript stuff
0559 appear may be better than arrive ya
0603 there is problem with internet connection, a sign I should
get focused on the javascript translation, hmmm.
0604 simple sentences to javascript. 
so we'll start with phrases perhaps. 
they become objects, like hello world ya, 
becomes {"sla":"munt"};  k lets try to do it.
or perhaps can even start with words, munt becomes "munt"
so we need to have a javascript langauge code, maybe javs,
or node.. I could check online maybe. hmmm I don't see anything,
so probably have to go with javs.
hmmm actually js doens't seem taken. neither does mw, so maybe
can make mwak mw. w/e I went with javs, cause I dono maybe there
is some rogue code floating around somewhere. 
0623 okay made a noun conjugate function in the javs.js file
0644 partially working, okay pretty much working, will sleep on
it.
1814 Arimatego, a hybrid of Arimma, Stratego, Shogi and Go.
main game example can be stratego board, but can be varied. 
the idea is that the no-mans-land, is arimaa style traps,
each player starts with an empty board,
each player gets 4 moves per turn.
in first turn they must put down the flag.
putting down a piece is worth two moves,
shifting a piece is worth one move,
pushing or pulling a piece is worth two moves,
removing an own piece (other than flag) takes two moves,
removing a piece can only be done from players half of board,
and then only if it is not arrested.
when a piece falls into a trap it has a 50% chance of joining
the enemy arsenal, can flip a coin to find out.
when a piece tries to push or pull a piece of the same rank, it
has a 50% chance of success, can flip a coin to find out.
1908 thinking of the chessboard version which has perfect
knowledge.  instead of "traps", can have the rooks as courts. 
taking the enemy king to your court wins the game. 
the courts have to be on the players half of the board, and can
not be moved afterwards.  this is equivalent to the bombs of the
stratego, and king being the flag. 
when pushing or pulling a piece arrests another, so it can't
move any further. 
when you have two pieces of equal rank, there is a 50% chance of
the arrest being a success, and a failed arrest still takes 2
turns, just as a successful pull would. only way to get
unarrested is if a friendly piece successfully arrests the
initial piece. 
after being taken to court a piece has a 50% chance of joining
the other side (one heads up), or going to prison (out of game).
in terms of placing new pieces on the board,
for maximum realism, it can be adjacent to current unarrested
pieces.
bishops can have a 1 in four chance of converting an adjacent 
piece (two heads up). attempting conversion can take 2 turn,
courts and kings can not be converted. 
technically can have the black side having imams, and islamic
names for the pieces *shrugs* but that may raise tensions.
or people can name the bishops based on the leaders of their own
faiths,  chiefs, priests, or w/e. in mwak there would be just
one term for it likely anyways.
rankins (for arrests) would be, court ∞, queen 4, bishop 3, 
knight 2, pawn 1, king 0. 
to make it really interesting can make it so that a piece has 
a chance of fighting back. so a pawn could have a 1:4 chance of
arresting a queen, and 1:3 chance of arresting a bishop,
or can double those odds to make it easier to coin flip for it.
so 1:8 queen (4 head up), 1:6 bishop (3 head up), 1:4 knight (2
head up), 1:2 pawn, (1 head up). knight's chances, 
2 head up for bishop, 3 head up for queen. bishops chance, 
2 head up for queen.
can call it spirit court. 
pawns can be worshipers, or officers. 
special powers:
a queen (secretary COO) can arrest two pieces.
a bishop (treasurer CFO) has a chance to convert others.
a knight (helicopter CTO) can skip over piece(s) during a move.
a pawn (officer) is the base class.
a king (president CEO) can't be converted.
in this case can all it Officer's Court.
2014 anyways can do more vocab work.
} Mar 26 2015
0600 so now can try adding javascript translation at the phrase 
level, and the sentence level ya Can do XML also. though might
be easiest once done the javascript ya
0614 okay working for phrases, now for sentence level
0726 hmm multi word quote not rendering properly
0939 it is fine at the type and phrase level, but stops working
at the sentence level
0940 I'll have to update test to check it at sentence level
0949 okay fixed, it was type copying issue.
1004 I should probably also do some disambiguating, and put my
foot down on at least supporting the basic PIE cases. anyways
that is afternoon stuff. for now lets see how good we can make
this javascript translation, need mwq conjugation
1031 okay now need to pass down conjugation level
1033 maybe should make a meta object, that can have type: and
conjugationLevel
or we can make it a part of format. nah, format is passed from
user wheras meta is for internal use., meh easiest would simply
be to use undefined at this time anyways.
1059 awesome is now fully operational :-D
eng : be say, "hello world". 
javs : say( "hello world" );
mwak : ksa fyas hello world fyas tsi .a yan .i ya
1212 anyways time to do some disambiguating
1214 what are the basic PIE cases?
(nominative, accusative, genitive, dative, instrumental, ablative, locative, vocative, and possibly a directive or allative)
su, ob, of, to, by, from, in(at), hello, (towards?/till)
1302 disambiguated everything up to thai
2217 great so now every language is free of duplicates.
2325 managed to set up dative declensions for Russian, doesn't
quite work with type junctions, and phrase junctions seem to be
broken, but otherwise is a big step in the right direction. can
do subject and object declensions tommorrow. 
} 27 Mar 2015
0539 so the main things to get full conjugation support, is
phrase aspect, and to debug phrase junctions. can probably
remove type junctions, as we they serve the same function but
are more confusing and thus harder to code for.
0548 hmmm we have a rather tight javascript roadmap though.
I guess we can consider the support of phrase junction
debugging.
0550 hmmm maybe we should support type junctions, for the long
lists of things, yada, bada, wada, and lada kinda stuff.
0551 okay so to support it, we'll have to pass the case
information to the junction's types.
0600 fixed phrase junctions, but now the while clause
disappeared. seems like it's skipping the while word.
may be issue with sentence parsing.
0605 could also be issue with parsing.
0621 want to improve the French so can talk to my French
LibreWare friend, then Arabic for Ali the blind programmer. 
0623 first it is best to finish Russian.
0624 oh and to make a test for that parsing issue
0629 k made a test for it.
0657 integrated all of Russian, except for exceptions.
0719 okay also debugged it a bit
} Mar 28 2015
0156 thinking about how venus would be great for making aerogel,
and they could have wind power converters for energy. at first
was thinking wind turbines, but there may be other ways such as
piezo electrics or something, waving grass style wind power
converters, fewer places for dust to get in.
0204 oh I found something that may be better than hydrogen
lengths, atomic units.  seems like planck units would be best.
0223 only issue with that I see is that the theories of physics
it's based on may change..
0225 guess we can call them quantum units
0330 adding math words
tak 	add
yut	subtract
payt	multiply
kuft	divide
mult 	modulo
kisp	exponent
lumk	logarithm
niyt	nth-root
1241 I should make a verbBack or something, to put the verb at
the end for SOV languages like mwak.
1315
mast matter
syat solid
clut supercritical-fluid
liyk liquid 
kaws air-gas
plam plasma
milt melt
pyul boil
nyus ionize
salm sublimate
tlun triple-point
kuyt critical-point
tyis transition
2350 added a bunch of matter phases.  
so venus does have an ocean, it's simply made of supercritical
carbon-dioxide fluid.
can even have submarines, and possibly "surface" sailboats,
since the density of liquid carbon dioxide is 770kg/m^3,
assuming that the super-fluid is the same so only
need about a quarter more bouyancy than in h2o water.
} 29 Mar 2015
0729 need to do some disambiguating
mi.u psal.i clutpi syanna ya
0828 need to make wordTranslate24.sh to help translate atom
names into 24glyph namespace
1035 so density at surface is only 67kg/m^3 can't really do
concrete boats in that.
} Mar 19 2015
0837 so I should put the aspect on the roadmap,
I'm just not sure how aspect can relate to javascript.
1117 so how do we do nominal sentences? if a sentence doesn't
have a verb, than can send it over the nominalConjugte.
1119 or more simply, can see if it hasCopula. 
1120 also can add in text header, and possibly footer,
that way can output javascript files.
1156 thinking should call the node javasc either nojs or jsno
1213 awesome so I now have it compiling to javascript,
and the file is executable. good stuff
1800 put aspect and plurals on the roadmap in the 0.7 chain
will probably need to do verb agreement, and move the functions
from accepting preconjugated output to simply the objects
themselves. such as how quote function does it now. it will
require a bigger overhaul, but will allow for much better
fidelity, and easier scripting, less duplicate or useless work.
1802 anyways since it is evening time to do more vocabulary
work. lets see if we can add farsi/persian also.
1841 okay so it's translating, already have 327 words defined.
can add some more
2358 need to do some rearrangement for length height width, and
green
} Mar 31 2015
0641 
lin length
tup depth
sik height
yac width
kis high
til low
pas fast
lat slow
0719 anyways lets try and do some programming
0721 first up lets add nominative sentences
0738 okay will have to convert the subject and object phrases to
accept language and phrase object
0756 gonna need some serious debugging
1104 nominal sentences work :-)
1305 seems aspect will be needed sooner rather than later
I'll make it the next point on the roadmap
1050 updated sentence to have a head instead of endWords
1439 anyways so can do some more word translations
1850 maybe should do more of that feasibility analysis stuff.
though that might make more sense after at least a preliminary
working version. 
it would be nice if could send the translated summary. though I
guess that would be besides the point. 
2108 having reviewed the linguistic universals for
postpositional languages it seems the majority have suffixing
for aspect/number/gender 
I'm thinking of parsing it out by word form, so CV and CCV words
would be considered part of the limb of the phrase.
what I can do is have a variable that indicates if the limb is
at head or tail, this may vary for English, since limb is always
initial, both in verbs and nouns. don't know about other
languages. but perhaps we can just have a limbFinal variable,
and otherwise consider that it is initial. can translate the
phrase body and parse out the grammar words, they will be added
to limb, and the remainder will be the word body.
then the limb can be used for conjugation purposes.
2114 meanwhile lets see if we can do a next step in business
plan. from-source Preparing Effective Business Plans
2116 one page 500 words  including
* description of product or service
* intended target market
* benefits of the product or service
* description of how product or service will be positioned
  relative to competitors
* brief description of the companie's management team
main headings:
Product
Target Market
Position
Management
2237 started writing concept test, bumped into the fact there is
interlignua machine translation, a fairly similar concept to
SPEL. and that many translation softwares already translate most
stuff, and then just ask about what it has trouble with.
so we really need the translate to computer programming
languages as a differentiating factor. 
} 01 Apr 2015
0555 i'll add programming keywords which have good overlap for
now.
0642 added a few, not sure how deep to go since don't know are
we supporting all paradigms :-O= or just the best, FPGA
VHDL compatible ones ++ (functional dataflow). 
0643 anyways lets see if we can add aspect
it would be under phrase
0704 okay coded it in phrase, now need to code the parsing
hmmm also wondering if perhaps it should actually be in type
rather than phrase.. since it's the few dogs, rathern that few
the dogs. 
yes definitely in type.
hmmm actually it is more difficult in type..
maybe in word? no that's too fine..
I have an idea, the limb can be the type head.
simply need better type head parsing, to include potentially
multiple words.
0739
tak add
yun subtract
pis multiply
cif divide
mul modulo
1423 okay so in any case probably best thing to work on for that
would be the parser of grammar words. anyways it's back to vocab
time for now, need to do the numbers 0 through 11.
as a reminder single character numbers are
m k y p w n s t l h f c r b g d z j
0 1 2 3 4 5 6 7 8 9 a b c d e f g h
nuls	zero
kiyn 	one
tful	two
tyin 	three
pyit 	four
fwap	five
tsik	six
syim	seven
kcat	eight
nist 	nine
tiyk	ten
layt	eleven
1450 okay after I'm done adding those will make the 24 version 
1525 okay made it
dwuf 	twelve
trin	thirteen
srat	fourteen
pest	fifteen
tsen	sixteen
2230 added all the numbers
} 02 Apr 2015
0652 so thinking can copy some of wordPhonotactics to help with
phoneme recognition, since we need to identify if a word is CV
or CCV  to identify it as a grammar word
0716 okay wrote the tozenize wordGlyphClassGet, now to test
0720 so I was thinking of paying people less for overtime, to
discourage overtime. if people work more than 4-6 hours, then
their performance decreases, so it makes sense that they would
get less monetary compensation for their lower quality output.
0724 great getting glyph class works, now to get grammar words
0729 cool got isGrammarWord working.
0734 now I guess can use it in parser to make typeHeadGet
0800 okay now to test it
0808 great it works :-)
0811 next will have to integrate it with typt
1440 joseph is "add" so tak, though maybe best to transliterate.
1611 it's okay I like the meaningful names, keeps things lively.
though the transliteration is the more natural way to go.
place names hmm. 
1709 I sent in a story to science fiction daily.
1716 will need to fix up subject prominence, 
added 24glyph words to vocab listing. will be able to add the
atoms and such.
2321 colors
lank color
saw black
pit white
kun red
pul blue
ciy green
yilk yellow
syan cyan
mant magenta
} 03 Apr 2015
0652 so should finish that type level aspect stuff
0711 not sure how to modify junction tokens
0733 okay seems to be working.
0734 but have to update vocab
0735 there are a bunch of duplicates to remove
} 04 Apr 2015
2031 thinking about alphabet
m k i a y p  w u n s t l h f c 
e o r b g d z j 
v q 6 1 x  7 _

kyims pwanf tculh  brez djog v27q x1_4
2204 seriously considering simply moving all the text over to
IPA instead of ascii.. but dono. maybe a premature move still.
especially considering the keyboards and http limitations. 
though for typographically, or conjugated output, I think it
would be the ideal.
hmm, meh, guess it's best to work within confines of https for
now, and then can have the nice IPA output later. I have
difficulty typing IPA into this ssh forwarded gvim.
2238 hmmm, seems like even normal gvim doesn't have support for
it. 
2242 seems like it's a gvim bug, doesn't have ibus support, or
disables it somehow. or vim gnome has support.
} 05 Apr 2015
0616 anyways time to attempt to do some plural conjugation for
English.
nam number
sya singular
twu dual
cla plural
slin single
pyaw couple
kyup group
0642 added PIE level number to vocab.
0645 added to the grammar
0647 need to get vocabUpdate to work
0703 I may have to set upper limit on length of multi word quote
to ease debugging.
0739 there are over 430 words now :-)
0740 still have at least 700 more to go though
anyways lets test plurality.
0747 typeHeadIndex might have forgotten to do the translation
1507 might have to do the translation in type. as typicall
grammar parse doesn't have access to language.
1533 okay fixed. now lets get conjugating
1559 will need a verbTypeConjugate and nounTypeConjugate for
english ideally.
1625 seems like translate isn't working in type properly.
1626 okay fixed seems like
2102
"Welcome to the Peace Council" Soft-Integral smiled.      
                                                         
"Higher spirits want bodies for new learning expeirences"
"The AGI Robots wish to study biology for inspiration." 
"The Grey Hybrids need humans for reproduction."       
"The Draconian Reptilians wish to eat them."          
"The Nordic Mammalians wish to rule them."           
"The humans wish to rule themselves."               
                                                   
"How do we make everyone happy?"                  
                                                 
"Diverse polity eco-system for the humans."     
"Trade relations and polities for the Nordics."
"Vat meat and VR video-games for the Reptilians."       
"Fertility cult, anasthesiologists for the Greys." 
"research centers and copious parkland for the Robots."
"new medium colonization with tech bodies for higher spirits."
2119 so in the next week I'll smooth out English, French and
Russian conjugation in that order. 
} 06 Apr 2015
0703 so I'm thinking of using the 32 glyph alphabet,
no point really of the 24 glyph one, since it takes 5 bits to
represent anyways. well actually 24 is near average which is
22+-3  the 32 range is moderately large.. oh actually that's for
consonants, so at 23 consonants it is in the average range with
32 glyphs total. so we are clear for take-off :-D.
just got to edit the wordPhonotactics to be more IPA compliant
by having the tones after the vowel.
0755 there is a bug that it is allowing ununique phonemes if
there is a tone..
} 07 Apr 2015
0708 okay so the plan is to make a reply to THOMAS in English
and French, via mwak translation. then to do so for Igor.
once French and Russian are working, can set it up a script
which allows me to (optionally) post translations of changelog
updates to twitter. or if I manage to get it working, then a
gnusocial like loadaverage.
0717 vocabUpdate hangs.
0727 seems to be quoteExtract, hangs on na, which gets repeated
forever.
1300 fixed that bug, it was a na which was supposed to be nya
1423 hmmm it seems to be having some difficulty with loading C32
1527 anyways I guess it is pretty huge.. can stick to the simple
stuff for now, the C16 and X16, until we have the basic stuff
implemented down pat.
hopefully will be able to recode it in mwak, which will have
opencl or at least parallel support so that it can happen
faster. it seems to be CPU bound. 
2203 after reviewing gnu social and related services on the
ostatus federated network. I've come to some conclusions of what
I want out of a federated network.
I want one ID, which I can use to login to all services,
and I don't mean something as ineffeable and hard to use as
OpenID. I mean something simple like a public encryption key.
I also want to be able to quickly and easily both invite and add
contacts. Most of the networks I've joined like gnusocial and
pump.io don't even seem to have an add contacts feature. wheras
in friendica it's difficult to find and is rather confusing.
I guess since talking about ideals here, of course email and IRC
integration would be nice. 
honestly like I don't understand OAuth at all, maybe it's good I
dono.
anyways I'm sure freenet and some others have unique user
identifiers which are similar.
to make them easier to remember, can use the sha1sum of the key,
and to make that easier can use base 55440 if 32 glyph vocab,
 or base 2520 if 16 glyph vocab.
okay if it is based 4095 they have to remember 14 words.
which is easier than remember 29 random ASCII glyphs of base64.
2230 anyways that was a bunch of useless discussion, I'm no
security expert. main thing I wanted was to be able to add
users, like it doesn't seem like such a hard thing, but perhaps
it is.
2239 awesome someone helped me figure it out :-D
2327 hmmm mwak should front top clauses in SOV.
2337 have to make more a grammar word.
guess have to do all the compartives
tsi most
pyu more
kci less
sli least
} 08 Apr 2015
0014 okay finally, anyways sleepy time.
0657 having some issues with the aspect parsing or something, it
seems to parse it correctly, but later on it doesn't know what
it's doing.
0702 weird it definitely parses correctly.
0709 oh nm it works fine, I was just confused.
though it does mean that now more comes after the noun,
which is the confusing part.. since it's kind of an adjective.
0750 hmmm, comparatives are a bit confusing in this regard,
typically locatives are used for them.
more easy is easier in that sense it is a suffix.
okay well otherwise it's like an adjective *Shrugs*
lets try reworking them as root words then.
1000 but for now it's still programming time, conjugation stuff.
1014 okay English is at acceptable level, now working on
French.
1059 adding in past tense for english.
1132 anyways need to fix the glaring more/most stuff
1155 okay so have to fix nominals, it is a nominal if it lacks a
verb, or if the verb phrase has no body.
1236 okay next is verb conjugation of french for future and past
also present. can start with regular verbs and then add the
irregular ones.
2101 so have idea about a simple statement and it's translation.
thinking can make twitter worthy conjugation, by making topics
into hashtags. 
about SPEL su it in early phase of growth ya
eng: it is in early phase of growth #SPEL .
javs: var SPEL = {"about":"SPEL"}; var it = SPEL;
it.in = "early phase of growth";
2144 anyways time to fix up those correlatives and superlatives.
2333 posted hello world in the twitter languages on my twitter, 
and in the gnusocial languages in my gnu social.
} 09 Apr 2015
0745 weird conjugation level isn't passing properly to sentence
from clause.
0749 okay fixed. now sentence level conjugation.
0802 okay it works :-D.
0812 hmm I think I have to make it so the phraseOrder is
preserved and then the various topic fronting and performance
grammar can go around that core.
1045 okay now javascript translation is working fairly well.
1141 attempting to get subPhrase to work.
1154 should make sentence.of = "nominal" if it is a nominal
sentence, that way onl have to check at creation time.
1225 javascript is noun initial, can compose words with .
1243 probably going to have to change the glottal-stop from a
period to an underscore so that it is easier to pack into
variable_names. also wont need to escape it for regular
expressions.
1954 for hydrogen
dominant hue  is Aqua, 172 degrees, RGB 3AE4CE 
secondary hue is Red, 0  degrees B91617  RGB
tertiary hue is Electric-Indigo, 273 degrees 6614a7  RGB
it's combined hue is Shocking-Pink, 317, RGB D757B2. 
2023 Dodger blue seems to be the dominant color of Oxygen,
though it's a mixed bag really.
2038 testing ttyrec and shelr. shelr complains about the screen
size, but seems better adapted for livestreaming, or at least
even not live streaming. ttyrec doesn't compalin though.
} 19 Apr 2015
0553 so managed to get typreccast which does livestreaming of
content. thus eventually I'll be able to livestream when I'm
coding. 
0606 fixing up javascript conjugation.
0608 hmmm objectMake may have to work with sentences in order
to fix it up, or find out whether it is nominal. though I guess
it could find out based on the phrase, 
0618 oh right have to finish replacing the dots with underscores
0656 translationUpdate working, updating test.js
0730 okay fixed up for most of tests, just have two more
junction tests to pass.
0734 it might be a problem with the quote recognition.
0754 bah seems like the type or junction is not even using the
proper parsing function, will have to fix it.
0830 finally is fixed.
0832 can include tests for duplicates in the test.sh
would motivate to keep it up to date.
2149 anywas time for more vocab work
yalt early 
tiym late
pyat prompt
} 11 Apr 2015
0545
cyun run 
wulk walk 
kyal crawl
flay fly
syin swim
pays ride
tiyf drive
tyaf traffic
0601
nuyt north
sunt south
yusk east
wist west
tyic direction
0616
plum problem
sulc solution
pwas answer
tsum study
tsan student
tyuc teacher
cyin learn
nusp forget
myit remember
syic research
fint find
pyuf proof
kyul rule
yat read
yis write
pas pass
tyip again
0704
myun employ
myunhu employer
myunha employee
myunhi employment
yasp work
task task
0716 k for now
pist permit
liwk legal
niy need
kyus fun
kyim game
1338 an issue I've come across is that some words are nouns and
others are verbs, instead of having all of each kind, perhaps it
would be good to somehow indicate whether it is a noun or verb,
or stick to just one case.. i.e. accusative, and then conjugate
all others out of it. though what would be the accusative of
"go"?  hard to say, so I guess we're left with having to specify
if it is a noun or verb for conjugation purposes. or else have
different definitions for each, which would be burdensome.
1341 for instance I'm not sure should actually split student and
study, perhaps will get rid of student, since it can be tsumhu
the one who studies. 
1356 so maybe it will be easier to simply add in for instan
tsumhu, I simply have to update the vocabUpdate script, to add
the new entry if it doesn't already exist.
on the otherhand, tsumhu is more of a definition.
1359 for instance oxford-3000 has both student and study, grow
and growth, but not grower.
1405 hmmm but there is only room for ~2000 words in core.
so we should really be looging at special english with it's
~1600 word vocab. and it doesn't have growth. 
} 12 Apr 2015
0538 added nominal flag to sentence if it detects that it is a
nominal.
0641 next main thing is verb conjugation, or verb agreement, can
pass it a whole sentence, but only expect a verb phrase in
return.
0650 okay added preliminary catch for it, but now sleepy time.
1103 have an extra semicolon in my javascript output, and part
of my verbs seems to be disappearing.
1747 okay french works for future tense, adding present tense.
} 13 Apr 2015
0439 woke up today with an interest in supporting runic
alphabet. similarly it would be nice to translate mwak to IPA.
0451 anyways so I'll probably just do IPA for now, for instance
if the conjugation is greater than 5
0616 it's so frustrating, for the last horu it seems I've been
trying to get the function to include in the mwak conjugation
grammar but it simply refuses to do so.
0636 excellent it is working now :-D
1114 I'm thinking that the IPA can be a format triggered thing.
script could be the variable.
1155 considering chaging _u _i _a to something else, 
with some kind of easy to pronounce consonants.
glottal stops really break up the language too much.
maybe I'll use h's instead of glottal stops,
and use glottal stops for compounds?
h is more common than glottal stops.
so it would be hi ha hu
1201 okay well I recently changes it to underscores, 
so can certainly change it to h's, it does make the language
sound a lot better. k I'll do it.
1221 awesome, it's really nice now.
1227 I'd like it to be verb backing though.
1250 some kind of weird error cropped up when I changed around
how subject fronting happens to do with TopClauses, not sure
why.
1300 cool fixed, next will add verb backing.
2114 so I want to make the base eight cases 2 letter words,
which are easy to distinguish from each other. 
hu su subject nominative
ha pa object accusative
hi yi verb
ta dative
su from ablative
ni in locative
wu by instrumental	
la hey vocative 
pi of genitive
fa about
pya on
tsa until lative 
tla for
2215 what is plu?
2247 okay it's all updated now :-D
2251 I want to add stress marks to mwak also.
} 15 Apr 2015
0151 added stress to mwak for conjugation level  12 and over
0333 finished adding past tense to French.
0342 next will be spanish conjugation, then Russian.
for now, sleep.
1421 okay added spanish conjugation. now smoothing out the
spanish vocabulary.
1459 okay now I just need to make javascript accept multiple
dictionaries, or rather alternative dictionaries to the english
one.
2127 adding implicit nominal verbAgreement;
1921 thinking I can use X24 for proper nouns and such.
2349 found a place in phrase where it seems the junctions aren't
working properly. they work in subPhrase however.
} 17 Apr 2015
0037 fixed
1100 added some vocab
1115 gotta add plural conjugation for eng fra spa
1200 added
} 16 Apr 2015
0605 can have a serverside script, that generates a new wallet
for each bug/issue
0609 we could have something like TM (translation memory), but
instead of between languages, it would be between a natural
source and it's analytic/SPEL-accessible. variant.
0613 in terms of ABI, I was thinking can have an index-like jump
table, which points to for instance a list of words that have
the same initial letter. The words would be Mwak words, so
fairly short. The system could then find what function it needs
by finding the appropriate word.
0618 I think the hardest part will be effectively coordinating
mass collaboration. Obviously that means the remove bottlenecks,
but also to detect bottleanecks. 
1024 adding possessive pronouns.
} 20 Apr 2015
0844 so I'm thinking should get back to completing Igor's
project. the more revenue we have the better, can put the money
into a pot for the currency shares, to pay developers and such.
0845 otherwise next is probably conditionals 
0748 I also have that whole genitives attach to type thing...
I dono, I guess they do..  *shrugs* ummm so ya, gotta do that
soonish, cause I already have a bunch of subphrase stuff going
on. it's gonna need some major rewrites.. 
1228 Uralic languages are SOV, so I'll change hungarian and
finnish to the SOV branch. also probably german... though they
use prepositions, so otherwise SVO,  same for dutch,  since they
use SOV in their subclasues, I guess any subclause SOV, I'll
move over to SOV, best keep with the motherlang afterall ya
1449 added articilization to French, now is more natural.
1451 I need subclause backing for clause final and subclause
fronting for clause initial
1511 will do that later, for now added gender recognition to
Russian.  and improved text formating of output.
1513 also need to make french recognize "an", or one, and put
that in, instead of a le when appropriate. 
1514 also I'd like to add adjective declensions to Russian as
soon as possible.
} 21 Apr 2015
0122 can have optional adjective and adverb ending words, mostly
for high noise scenarios, but also to free up word order.
similarly to Russian. though ya, it is very low priority at the
moment.  more pertinent is getting Russian adjectives
conjugation for output.
0242 I also need something that can switch word classes for me,
so I don't need to define an adjective and noun etc for each.
like describe and descrpition, or possible, possibly,
and possibility,
0248 it would require a somewhat more complex dictionary.
0257 guess I'll sleep on it.
0323 can use those adjective, noun, verb markers I was talking
about earlier. then translate toMwak can simply have all of them
as inputs, wheras translate from mwak will be subdivided into
the word classes.
0812 I just found out that adjective following noun is more
common than preceding, so we'll have to move mwak around to do
that. can probably rename the corresponding variables also.
can call it adjectiveFinal and adverbFinal.
0815 okay should be a simple enough fix, just gotta double check
the adverb bit.
0948 hmmm it seems that clauseFinal, and adjective final is the
most common. as well as mood initial. yet postpositions and
genitive initial. it seems rather confusing to me. 
if mwak is made clause final, then it will be right branching,
and thus will lean towards SVO. 
0950 while languages may have started out as SOV, the general
pattern seems to be to move into SVO, and possibly into VSO, but
some VSO languages move back into SVO, wheras no SVO languages
naturally move into SOV, only through influence of many SOV
neighbours.  thus it seems that SVO, maybe the most "natural" or
universal word-order, since it has a high rate of "sticking"
factor. 
0957 just because SOV was the original word order, doesn't mean
it's the best one. 
1007 well and obviously programming languages are all SVO or
VSO.  I'm not aware of any SOV programming languages other than
current incarnation of mwak. 
1011 anyways we can keep it all as is, since it is the closest
to the proto-human language. can always later on make some kind
of SVO relative of it.  but for now, this is best.
1022 sumerian is SOV, inflected, with adjectiveFinal and
clauseFinal. hmmm
1104 they were however a mix of cultures, semitic, samara and
arabians.  
1124 it seems chinese may be one of the oldest scripts. 
1132 it makes sense to stick with chinese/hindu style since they
are the most likely to support machine intelligence due to their
beliefs in reincarnation or rebirth, and animist leanings. 
1134 it seems the "pure" SOV languages in the china, north asia
and India area, all have adjective-noun, genitive-initial,
clause-initial.  Wheras the noun-adjectives SOV languages are
mostly in the america's which are influenced by a variety of VO
languages. also the relative clause and noun sample on wals
doesn't seem to include most of north asia and uralic languages.
1159 so mwak seems best suited for haplogroup M people of SOV.
1200 the strong pioneers though are haplogroup N, of the SVO. 
1200 thus I'm thinking of making a second version of mwak,
call it something else.. perhaps share vocabulary, but be SVO
style. leaning towards haplogroup N.
Naomi is the hypothetical mother of Haplo N, so maybe can call
it nawm. or nwam.  it is also for l1 and and l2 which are SVO,
so perhaps nlam which isn't actually legal in mwak .. hmm
lamn name in hittite, also other langs are in the extended
section, so this one could be also..  and N 
1242 hmmm but N also seeded the Urals, and yet they are SOV.
in fact N seeded most of northern Asia, which is mostly SOV.
only Europe (IJK) and Oceania (F) of the N has changed to SVO.
also some of the ones that went over to the Americas of course..
but the ones in the N homeland, north-central-asia, are all SOV. 
so it was certainly SOV when M and N diverged. 170-70kya
2230 Sandawee and KhoiKhoi also are SOV and the are the oldest
L0 branch, so more SOV points. also Sandawee has stems which are
common and simply modified for adjective, verb or noun, so we'll
do likewise.  so need a word for adjective
2233
twif adjective	kfat	kfa
niym noun  	tsun	tsu
wiyp verb 	pyif	pyi
} 22 Apr 2015
1235 gotta fix up the numerals to be compliant with the single
glyph number system. 
m k y p w n s t l h f c
kiyn kiym one
tful twuk two
tyin tsiy three
1323 okay so I have the affixes for now
kfa pyi tsu, covers adjective verb, noun, just like in wordnet.
guess we'll try it with describe description for now. 
describe can be the default or verb, description is noun, and
descriptive is adjective. 
descriptive kfa ki description tsu ki describe pyi ha
1328 okay before we implement this lets get everything updated
and saved. 
1337 so how do we implement this exactly? 
I guess the first stage will be the dictionary has to support
it, so we can try making the modifications in for instance
eng.txt or even smaller sample file. 
then will need to update the translator, so that it would
translate each word, and output it appropriately.
our dictionary will have a toMwak, which will contain all the
words as source words, so it will be fairly easy to go to mwak.
the fromMwak, will have sub-tables for noun, adjective, and
verb. and perhaps grammar words, or it could have a root or misc
section that has grammar words and default words, if for
instance the noun/adjective doesn't contian anything. 
guess we can call it main. 
1348 updated roadmap to reflect what is happening.
2112 
#MitochondrialEve spoke an SOV language during the depth of the 2nd last glacial period 130,000 years ago. #EarthDay #ProtoHumanLanguage

#MitochondrialEve (Meve) possible #Biography: She lived during the depth of second last glaciation, in the African Great Lakes area. There was a major famine and many didn't have enough food to reach fertility. Meve was a matriarch, much as in a pack of wolves, was the first to eat, and was not shy to have her fill, thus reached fertility. If a human female is on the cusp of having enough food for fertility they are more likely to have daughters. To increase likelihood of daughters further, her primary mate was probably an elder, or one of the oldest members of the group, the older a man is, the lower the likelihood of having a male offspring, due to the fragility of the Y-chromosome.
After having successfully had 6 or more children, her reputation likely soared, and her daughters then became the group leaders of neighboring groups, where they followed the same successful strategies. To this day, Meve's female descendants prefer older men, and Demand food when pregnant or lactating.
2130
#CO2 for the golden age of bio mass on earth, 300million to 66 million years ago, levels have been 1-2% currently they are 0.4%. #Earthday
2133 Y-Chromosonal (Yadam) likely had a completely different
strategy from Meve. He most likely lived in the depths of the 
3rd last glaciation, around 250 thousand years ago. 
his strategy likely involved forming raiding parties for
acquiring food from other hominids. During the raid all or most
of the reproductive age males would be eliminated, and the 
females would be impregnated. Likely there was some
stock-selection, to make sure that the offspring would breed
true. so for groups which were too hairy, or whose foreheads
weren't high enough even the women and babies were killed, 
being judged as animals.  burning of their shelters is quite
possible also, which would both disinfect the area, and lower
the chances of retaliation, while increasing the likelyhood of
warming. rape, pillage and burn (RPB) basically. 
This kind of selection can explain why so little interbreeding
occured with other hominid species. shortly after the bottleneck
the weather started to warm up pretty fast, so the raiding
parties expanded. 
It is quite possible, even likely, that these were food
gathering raids, and that they had their own tribe of women
somewhere, which they would return to after a raid to get food.
The RPB strategy minimized potential for retaliation, and later
on the young of the raided could be recruited, assuming they
looked sufficiently like Yadam. 
When Yadam got older, into his fortiesTanganyikatrong and mean to women or children due to their dull wits.
 which motivates Yadam to rile fellow small-brow, high foreheads
 to commit mass genocide.
0819 for the cover photo can have a thinnish health-weight
pregnant african women in traditional garb standing in front of Tanganyika
1131 Lyra could have been the pole star while Mave was alive
1308 as a child perhaps Paydam witnessed the brutish raids of
the homo heid, which had large brows and low foreheads, they
were likely stronger and bulkeir, so Paydam's families usual 
strategy was that of the Chetah, to outrun them. When the food
and water got scarce, it promoted everyone to move into the
river valleys, such as the Omo river valley.  There they were
forced into confrontation with the Heid, which they had to
exterminate in order to get their food and water. since they had
larger brains, and higher ground and speed, 
they managed to do it. 
perhaps by distracting them and then burning their villages,
afterwhich they could pick them off. 
Paydam didn't have to do it much, he just had to start the
pattern, which his sons would follow.
perhasp they could have been called, high brow, where high was
also big, like tall.  thus it was the high brows (homo 
heidelbergensis) vs the low brows (homo sapiens)
2257 I think it'll just be easier to use description for now,
nouns are easier to use, and make into verbs.
2300 otherwise considering using old english conjugation for
words, though I'm guessing that wont be necessary, can simply
just use a single word form. 
2301 instead next I'll do sub-clause forwarding, or backing as
the case may be. subclause realignment I guess.
2314 old-english (simplified) 
- adjectives are stem form
-a singular noun
-an plural noun
+-s genitive  addition
-e present tense
-de past tense
-sye future tense (from PIE)
+-n subjunctive addition
-ath imperative
} 24 Apr 2015
0737 subjective is used for random grammatical stuff in
grammatical languages, so guess we wont use it, just like we
have to mostly avoid le articles, due to their overuse in
french.
0749 thus can stick to the simple mood system we have thus far.
0752 anyways meanwhile can add adjectives for the rest of the
russian cases. 
so accusative, dative, nominative, instrumental
0757 also need to identify if it is plural.
0830 adding paucal and multal
1341 added english verb conjugation, based on modern english.
though used accusative case from old english.
1341 need to add verbAgreement conjugation to Russian.
1354 okay so we need to get the stem, 
1443 basically or almost have first class of russian words
1529 so I just figured out that "some" is plural in English.
hmmm it's not quite the same.
1531 seems like it may be best to put words in a "to verb"
fashion, as it is more likely to generate an infinitive which is
easier to conjugate in other languages.
} Apr 25 2015
1000 discovered "evidence based" programming language, called
Quorum, it is based on studies of what makes programming easier.
1012 currently the array-selection version of of, is really
part-of, wheras if we were to do templating it would be
composed-of. for instance
early phase part-of growth
growth[phase.early];
array composed-of integer
Array<Integer>;
though in javascript array of integer would be nonesense,
since all arrays are composed of references. 
1016 Quorum uses repeat instead of loop, we can also.
1025 though there are typed arrays in javascript,
ary composed-of Integer could become Int32Array.
1225 so based on conversations with my wife, one of the best
ways of explaining programming is via method of the abacus. 
so I've come up with a binary abacus, that can be used by anyone
with all their fingers, to represent a byte, thumb binary. 
it can be made into a keyer glove, but is also useful for some
simple calculations.
2250 reversible half-adder
A ha B ta half adder hi ya
C hu 0 ha ya
A ki B wu C1 ta C ha toffoli hi ya
A wu B1 ta B ha cnot hi ya
S hu B1 ha ya
S ki C1 ki A ha out hi ya
2254 reversible full-adder
C wu S ta A ki B ha full adder hi de
A ki B wu C1 ta 0 ha toffoli hi ya
A wu B1 ta B ha cnot hi ya
C ki B1 wu C2 ta C1 ha toffoli hi ya
C wu B2 ta B1 ha cnot hi ya
S hu B2 ha ya
S ki C2 ki A ha out hi ya
} Apr 26 2016
0000 thinking of making so as cu, if I use it for output
setting.
0644 another option is to have a word for subject that is being
defined, as opposed to agent doing the action. 
otherwise since none of them are being used twice, and all of
them continue to exist, it is actually optional to differentiate
the signal names. though for static-single-assignment it would
be easier.
0652 I guess tripartite would make it easiest. 
0710 actually can make destination in dative, 
and then the one that gets modified is object,
and by what it is modified is instrumental.
1455 weird it is double translating on input it seems.
1513 so still thinking about inflecting it, can't really call it
old english, since old english was just so different,
but perhaps we can borrow some stuff for modern english..
or at least spel computer english.
it seems we might just be able to keep it in infinite -an,
much like the romance languages. 
1519 om is used in proto-indo-european, 
so we could actually be somewhat esperanto-like,
and use -a for adjectives, -and -o for nouns,
-om or -on for accusative case. 
anyways lets try it with -an's  via ang for now.
} 28 Apr 2015
0041 added noun and adjective conjugation for English, it
already works for Russian. also added mood conjugation for
English, still have to do for russian. and also have to add
participle conjugation for all languges.
0946 so after English can do French,
participles end with -ant, and adverbs with -ent
0950 anyways what's left for English is participles.
0959 hmmm there is overlap between old english imperative and
old english plural, so looking for a difference earlier on.
1005 might be able to use an o, or something like that -oth
perhaps instead of -ath.  anyways so participles.
1046 okay so finished participles, great so english is pretty
good now.
1242 so I should probably make that conjugation dictionary also,
that converts opinon to opinion and describon to description,
for all the various exceptions which a langauge may have.
can have it for conjugation levels higher than 7 or something.
0416 right so a few more plural cases for Russian
0443 okay need future tense also.
0551 okay added, seems to all work now.
2023 hmmm in my Chinese the object isn't following the verb,
weird.
2042 maybe it's some clauseInitial stuff or something.
2053 seems it's not matching the caseWords properly.
2059 I untranslated the casewords to make it work, but not sure
why they were translated in the first place, I think they were
being used for something, not sure what though.
2103 now it thinks everything is a nominal.
2212 okay I fixed it up.
} 04 May 2015
0707 m k y p w n
} 04 May 2015
1112 can't understand participles, thought they were adverbs,
but apparently they are more vague, not a true part of speech,
so will change Englisho to reflect this. 
Also thinking that it seems the subject or nominative case is
most likely to retain the case ending, so can figure out an
appropriate case ending that distinguishes subject from
"oblique". either all the others will be an's as in the current
nominative or something else. 
0744 looked at poetry for function layout.
1120 may be able to set up performance testing to find what
parts of algorithm need to be optimized so can use larger
dictionaries.
1409 anyways so conditionals. 
2211 cool getting close
just got some extra close brackets somewhere.
} 06 May 2015
0703 so have to make final bracket and comparative tests.
0718 made final bracket, fixing up spanish output,
then will fix up chinese output.
0742 seems like if then statements are like in english,
and thus the reverse of their subordinate clauses.
1414 hmmm so an issue is comparatives, they are different in
different languages, and equals/identity is usually done through
nominals, yet comparatives are done in a variety of ways, such
as locatives, particles, conjoined and exceed comparatives.
} 07 May 2015
0650 so thinking of using ablative Locative for comparison, but
will give the mailing list a few days to respond. 
0652 have to fix chinese output anyways, also have to add more
vocabulary.  hmmm I'm guessing we can probably shift them over
to  TopClauseInitial, currently it is wrapped up with
clauseInitial, so will need to seperate those two.
} 08 May 2015
0604 can tune up mwak for better IPA output.
} 11 May 2015
0628 so comparatives
1343 there are at least two ways of implementing them. 
one is that can have special conjugation classes for them,
the other is can have API for them, which is preferable. 
so for instance:
su this be same from that ya
this.same({"from":(that)});

function same(args){
base = args.from;
if (base === this)
return true;
else return false; }

1849 while that may work for most cases, seems it would be best
to stuff it in the conjugator for performance reasons,
considering how common comparisons are in programming, forcing
them all to jump to another function would be a serious
performance loss.
} 12 May 2015
0446 implemented comparatives as compounds words, same big, same
small.  don't yet have support for junctions in a verb phrase.
0452 gotta fix up french translation.
0456 okay fixed, now nap time.
} 13 May 2015
0613 so now I guess it is comparative junctions.
the easiest are the phrase level junctions,
su this be same from that1 or that2 ya
su this and this2 be same from that ya
su this be small or big from that ya
wheras higher level junctions would be tougher,
can do some with yaor and while, but don't know how to put ones
in brackets.
for assembly level we already have enough complexity.
} 14 May 2015
0358 had a dream for a "Beer song" four liner. 
at first dreamed about an assembly version with a goto:
su number of bottle ob num 99 ya
su beer song be label ya
be say ob number of bottle and 
quote word bottles of beer on the wall word unquote ya
if number of bottle be big from 0 then be go to beer song ya
0407 then dreamed about the go to uproar and changed it to a
simple loop
su number of bottle ob num 99 ya
su beer song be start of repeat ya
be say ob number of bottle and 
quote word bottles of beer on the wall word unquote ya
if number of bottle be small from 0 then be stop ob repeat ya
su beer song be end of repeat ya
0436 okay so I'd like to try coding something in asm.js, ideally
I'd improve performance of SPEL, but to do that, would need to
know where performance can be improved, so would need some kind
of functioning performance analysis tool.
0450 hmmm maybe will have to just do some sample program or
something. one of the most obvious issues for the web-app
anyways is that it has to load a 4MB file, which is pretty
ridiculous, so will have to trim that down significantly. likely
by making the loading of the dictionaries through XHR request.
0546 anyways haven't actually made any asm js code thus far,
haven't been able to get any profilers working either. 
can just output something like a standard loop.

var bottle[number] = 99;//su number of bottle ob num 99 ya
while(true){//su beer song be start of repeat ya
console.log(bottle[number]+//be say ob number of bottle and 
//quote word bottles of beer on the wall word unquote ya
" bottles of beer on the wall ");
//if su number of bottle be small from 1 then be stop ob repeat ya
if (bottle[number] <1) break;
// else be decrement ob number of bottle ya
bottle[number]--
}//su beer song be end of repeat ya
0553 personally I think the goto makes more sense to novices,
though would have to ask on the mailing list I guess.
however goto has big trouble in terms of support,
so many people got so scared of it,
that many lost support for it.
0603 anyways got to catch hopefully at least 15min nap before
the baby wakes up.
0959 best to try to implement the minimum for now and then work
our way up, so probably loops before functions. usually
implemented with repeat hmm. 

su number of bottle ob num 99 ya

su chorus be start ya
be say ob number of bottle and
quote word bottles of beer on the wall, word unquote and
number of bottle and 
quote word bottles of beer. word unquote ya
be decrement ob number of bottle ya
be say ob
quote word take one down and pass it around, word unquote 
and number of bottle and 
quote word bottles of beer on the wall. word unquote ya
su chorus be end ya

be repeat ob chorus if number of bottle be big from 0 ya

1344 this would be equivalent to javascript of

var bottle = new Object();
var number = "number";
bottle["number"]=99;

function chorus(){
console.log(bottle[number]
+ " bottles of beer on the wall.");
console.log(bottle[number]
+" bottles of beer");
bottle["number"]--;
console.log("Take one down and pass it around, "
+bottle["number"]+" bottles of beer on the wall.");
}


while (bottle["number"]>0){
chorus();
}

1408 testing
1447 okay that layout seems good, the repeat turns into a while
statement. how about a for statement, how do we do that?
like 10 times, guess need to do some more research. on that.
meanwhile can ask mailing list about Early Modern English
conjugation. 
2134 anyways so how do we do for loops using repeat?
2159 was reading about benchmarks game, seems like we'll have to
make our own tests for that. 
2201 another option is to contribute to rosetta code, which has
many different tasks which are done in various languages. 
2212 they have over 700 tasks, but looping structures is one of
the basic ones. 
so there are for loops, and for-each loops,
there is also the parallel programming stuff map, reduce,
which are in some ways quite similar. 
for-loop:
be repeat for iterator from 99 til 0 ya
for-each:
be repeat for bottle list ya
map:
be repeat ob chorus for bottle list to out list ya
2247 oh right, so there is also else, not sure we have a word
for it in mwak, and else-if or elif
cya is else for now anyways.
sli is else-if.
2305 so reduce is best thought of as fold
be fold ob list by function to result ya
} 15 May 2015
0657 okay so functions are basically the same as the chorus,
except that they can have parameters, so for instance if chorus
took bottle as parameter.
su chorus be start ob bottle ya
su chorus be end ya
that would translate to:
function chorus(bottle){
}
A more sophisticated example would be for instance addition. 
I'm thinking maybe it is best to make with the instrumental, as
by can also be near. though I guess by translates to po in
russian, which is a purely instrumental thing, and there is the
word near or nearby in case we need to express something is 
near something else.  though generally tools are expressed with
with, rather than by.
anyways so addition
be add ob augend by addend to sum ya
be subtract ob minuend by subtrahend to difference ya
be multiply ob multiplicand by multiplier to product ya
be divide ob dividend by divisor to quotient ya
be modulo ob dividend by divisor to remainder ya
be nth-root ob radicand by degree to root ya
be exponent ob base by exponent to power ya
be logarithm ob antilogarithm by base to exponent ya
0744 now I'm thinking about the to part, since it could return a
value, or if there is no to then it can modify the object, this
would be consistent with how it works in assembly languages.
}16 May 2015
0459 that-which contents can be evaluated and is replaced by
it's result.
so 
be multiply ob num 4 by that-which be add ob 2 by 3 ya
becomes:
be multiply ob num 4 by num 5 ya
or more simply in the virtual machine assembly
where edx is to, and ebx is bo, and ecx is by
mov ecx,3
mov ebx,2
add ebx,ecx ; add it to bo
mov ecx,ebx ; move it to by
mov ebx,4;
add ebx,ecx;
} 16 May 2015
1644 I like the Sam command language, or at least the structured
regular expressions, especially because they are so composable.
will use it as a base for the SPEL text editor, which takes SPEL
commands as input for modifying files. that way can edit files
through speach. 
would need to have a way of expressing all the same things
regular expressions express, but through words instead of arcane
symbols. 
} 17 May 2015
0700 got to edit the Spanish conjugation a bit perhaps.
0716 thinking of making head stress mandatory, can lead to some
antibacchius poetry, but I guess it's okay.
0730 okay fixed it up, thus the mwak rhythms which are possible
are, trochee, antibachius, double trochee, ditrochee, dactyl,
and rarely primus paeon, that is for words themselves.
} 18 May 2015
1251 okay so next should be functions, blank functions like that
beer song file.  I can put the beer song into the spel test, so
can see how it parses for now.
2106 thinking about how to include toffoli, cnot and fredkin in
as natural a way as possible. 
not:
be flip ob abacus ya
cnot:
be flip ob abacus if condition ya
toffoli:
be flip ob abacus if condition and if other condition ya
fredkin:
be switch ob abacus by other abacus if condition ya
2116 fredkin OR-gate:
su other be num 1 ya
be switch to r ob y by other if x ya
fredkin AND gate:
su result be num 0 ya
be switch to r ob result by y if x ya
toffoli AND gate:
su result be num 0 ya
be flip to r ob result if x and if y ya
NAND gate:
su result be num 0 ya
be flip to r ob that-which be flip ob result if x and if y ya
2138 hmmm I might need a case-level if for these. 
 I could use when I guess.  either that or if's would have to be
subordinatable. which would be somewhat harder.   
XOR gate:
su result be 0 ya
su other be 1 ya
be switch ob result by other when x ya
be switch ob result by other when y ya
2211 okay so set up the beer song in spel-test, will have to
debug it and such. also have to add some more vocab words.
} 19 May 2015
0417 okay so gotta add a few more vocab words at least.
0434 hmmm seems flip and switch are rare words.  can use trade
instead of switch. can use turn instead of flip.
turn is also good analogy for qubits,
somewhat like Pauli-X gate, which rotates by pi around the x
axis.
0453 so toffoli:
be turn ob x when a and when b ya
fredkin:
be trade ob x by a when b ya
0500 okay anyways time to start implementing the song.
reverse is turn around. 
0527 guess I need a conjugation.text kind of thing.
0552 have an idea of what participles are for.  its the
difference between sentences.pop and sentences.pop(), the second
being the participle form.  so if a  verb is used in a noun
phrase, it can be in participle form.
0601 okay cool got basic subText to function conversion.
next can convert the non comparative and's into plus signs.
0702 updated it.  next will need to get those sub phrases as sub
types, and number types.
1001 thinking about vowels and such. 
based on formants it's better to use /ɛ/ instead of /e/ and /ɔ/
instead of /o/.
also thinking about English vowels:
i /ɨ/
ie /I/
ai /e/
e /ɛ/
ae /æ/
a /a/
au /ɑ/
ou /o/
o /ɔ/
1014 oh w/e no one really cares about what I think about English
much anyways. so lets do some vocab work. or perhaps figure out
the subPhrases or numbers. 
1040 it is hanging up on quotes extract for numerals.
1055 debugged :-)
1058 next has to recognize numeral type, and conjugation will
return the contents of it. afterwards will work on fixing the
subPhrase to a subType. also possibly cleaning up the Type
identification loop, exporting as much as possible to external
modules or functions. 
1307 anyways vocabulary time :-). nice and easy stuff.
1903 adjusting numbers twuf for two
m k y p w n s t l f c
0 1 2 3 4 5 6 7 8 9 A
0 nuls 1 kiyn  2 twuf 3 tyin 
4 pyit 5 fwap 6 silk 7 syim 
8 kcat 9 nift A tiyk
0 1 2 3 4 5 6 7 8 9 A
n k w y p f l m c s t
1925 okay, so that will be the new glyph number sequence
0 1 2 3 4 5 6 7 8 9 A B 
n k w y p f l m c s t h
alphabet can be:
kyimf pha.ant swulc
2300 wrote a fictional autobiography introduction,
will translate it to SPEL and then post it in various languages.
} 20 May 2015
0703 so continue to debug I'm guessing.
0712 okay so numeral is now working. 
0717 next can add in the while loop, or fix the sub Types.
0718 I'm not 100% certain of the best syntax for while loops
yet, so I should work on sub types.. should do a git release
before I work on it though, since it can be messy. 
2326 so after the initial implementation and promotion of SPEL
programming language.  going to make the first real world
implementation a hybrid of a website an MOO, where people can do
language learning and socializing. 
2338 can probably play various "safe" games, to get points or
levels if that is indeed useful. 
can also get people to do actual useful stuff in game,
such as come up with definitions, create programs, etc.
could even get paid real money for some stuff,
or points which could be converted to money.
one of the main differences from traditional muds,
is that all content should be web accessible, so can play via
web-browser using standard pages.
potentially can do a thing where a user can create their own
world in their browser memory, and then connect it to the server
world, people would be able to visit their part if they allow
it, and such.  they could also download their world to save it,
or pay with points to have it hosted on the server. 
In terms of layout, I was thinking of the fruit of life,
and then subdivided into various education departments.
In terms of races that people could choose, it would be the
races we can expect to interact with, human, greys (dwarves),
nordics(elves), reptilians(orcs) and robots.
stats could include stuff like health, IQ,
EQ, communication, wealth, adaptability, and strength.
The tutorials could help teach the various skills.
reptilians could abduct cows for meat,
greys would have to make food gels,
and use humans to gain health.
greys, nordics, reptilians are telepathic,
humans and robots use electronic means.
nordics are vegetarian/vegan.
humans omnivores. 
robots need spare parts and electricity. 
don't know if we can really include that in the game though,
it may be possible to have the player owners script their
characters to fullfill their needs.
2359 sleepy time
} 21 May 2015
0651 can check rosetta code for while loops, pipes and
concurrency. 
0736 so it seems that there are several control structures.
conditional structures (if then), 
exceptions (throw try catch finally),
flow-control (return, break, continue),
parallel calculations  (webworkers),
short-circuit evaluation (&& ||),
language extension (define),
0746 so we have conditional structures, (if then)
and are working on flow-control, (while, for)
so we need something for short-circuit evaluation 
perhaps (also &&, otherwise ||)
instead of throw try catch finally 
Quorum uses alert check detect always
I'm thinking it's really kind of a protest,
just not sure how to react to a protest. 
oh apparently that is mostly canadian usage, object or disagree
is more international.
or complain.
1001 there are also events, which maybe best through when.
have to study up more on dataflow programming, there is some
implicit parallelization there which could make things easier.
1050 so I'll have to dedicate a week to two to doing some
SystemC and OpenCl programming.
1331 can localize the beersong by having either native multi
word quotes or having variable resolution for the number of
bottles, the second option is probably better as it would
probably be easier to read.  that way beer song would be output
in all supported languages. though having the native multi word
quote would be more compatible with get-text.
1333 can use fail try rescue but/yet instead of throw try catch
always. 
1813 before I do that, should do the next debugging stask, which
is the subtypes instead of subphrases, to avoid procrastination.
so I'll start work on next programming opportunity.
2010 thinking to minimize disruption can keep the current
phrasal of stuff, can simply call it phrase-of, or something,
and change it to some low-priority extended word like pki or
kpi. 
} 22 May 2014
0418 so lets get to it. 
0434 first off, got to update the parsing methods.
0438 seems okay for now, as i'm not trying to put subordinators
in it.. yet anyways.
0440 so should update the type itself.
0530 making subType.js based on phrase.js
0605 okay seems only issue now is with localeString output.
0620 okay unconjugated works fine, rest is in locale files will
fix up laters, sleep for now.
1106 should updated the englisho to early modern english where
possible, will take some coding. considering adding old-english
dative and genitive, but propebably shouldn't
1118 have to open topic on libreplanet-discuss about
shared-commercial, where percentage of retail cost goes to
upstream developers, likely depending on percentage of code
contributed if there are multiple upstream companies.
1408 so I've been thinking of having a MUD or perhaps a
Multi-User-Learning-Environment MULE, where people could create
their portion of the MULE in their browser, such as their home
and such, it could be stored in the html5 local-storage, people
could also download it for safekeeping, or for a fee upload it
to the main servers.  Otherwise it would only be online when
they are, could have a "member-hall" with portals to member
worlds. a user could visit read-only, or perhaps have the option
to leave a gift or a note in a secure sandbox area.
the items would be descriptions in mwak, of what the item is,
and how it works. potentially could use SVG or webGL to render
them.
1415 anyways lets do some vocab work.
also should be like and, (ki)
and otherwise should be lik or (wa)
} 23 May 2014
0427 limb subType works for mwak
0555 works for javascript
0558 works for English, got to fix the vocab
0559 fixing it up for french and such after should be easy
enough, now that figured out English.
0601 there are probably other bugs lurking about, but need
sleep.
} 25 May 2015
0523 anyways so should write an OpenCl hello world, 
a SystemC hello world, and try to merge them.
0547 OpenCl seems fairly complicated, the host code is rather
difficult.  hopefully it is simply a template or something, and
most can be handed off to the kernels. 
anyways it would be good to get that monitor to enable my GPU,
so wierd how it refuses to work without a monitor.
either that or could get an OpenCl compatible FPGA.
0606 I set up some OpenCl checks for now, 
seems I might have to do a bunch more research in relation to
getting it to work. anyways napy time
1012 anyways really we only need it to be compatible with
OpenCl, which means purish functions, where the input and output
are input arguments, there are no side-effects, and no functions
which are not inlinable, i.e. no recursion which lacks proper
tail calls. also SystemC can run ontop of OpenCl, so we can just
work on SystemC.
1219 right so should add the shared commercial clause in the
AGPL license.  also best if I found or made SystemC beer song,
and OpenCl beersong for comparison.
1233 guess will start with SystemC since it is easier.
oh but also I wanted to try my hand at reversible logic in
SystemC. 
1236 found a tutorial that implements an alternative xor gate,
so I could use it as an example to implement CNOT, Toffoli, and
Fredkin gates.
1241 so for programming model, I'm thinking of something similar
to Haskell, the main one, or monads have side-effects, and the
pure functions can run in parallel, and such.
1506 seems like shared-commercial is not compatible with the
AGPL. so will have to think of something else, or draft our own
license in SPEL.
1539 anyways lets continue on the roadmap for now.
oh, it's vocabulary time I believe, eventually there will be
enough to have a conversation with.
1541 gotta do some debugging.
1553 there are a bunch of empty types, which is rather
disconcerting. 
1554 anyways better to do vocab now, will figure it out in
morning.  I think perhaps will continue developing this in a
more organic and less constrained fashion.  We can always
support OpenCl and SystemC later on, it's best to start with
something that simply works, doesn't have to be perfect. 
} 26 May 2015
0507 thinking that after 4 hours of play/work, the program/game
can ask the user about work-life balance, and help 'em fulfill
personal goals. likely based on maslow's hierarchy.
we would like to help thee to have a fullfilling life within and
outside the game. which of the following life skills would you
like to improve?
health or safety or belonging or esteem or self-actualization eh?

for health can make sure they are getting enough food and 
nutrients, as well as getting enough exercize.
for safety can make sure they are have a secure location, source
of finances, and back-up plans or insurance. 
for belonging can help with family relations, intimate
relations, and friendships, through social skills development.
for esteem can check how they view themselves, if through others
eyes, then encourage to seek out the others actual opinion,
rather than an imagined one, if self-opinion, then encourage to
have realistic and achievable short-term goals, that may build
towards longer term goals.
for self-actualization or self-transcendence, can make sure they
are contributing to goals bigger than themselves, perhaps in
line with the long-term roadmap of SPEL, or otherwise.
0655 debugged english conjugation errors.
0657 now working on javascript
0700 cool debugged that to, next seems to be while loops.
but I'm gonna snatch a nap.
1533 so I'm thinking should be at least slightly more practical
with this vocab development. perhaps can translate my fictional
autobiography, or a license agreement into SPEL.
License agreement might be more professional, but some original 
fiction could be more intriguing.
1558 best of all though would probably be a SPEL introduction in
SPEL, then can say, and this introduction is written in SPEL.
some may be unimpressed, but well, it's something, will improve
with time. 
} 27 May 2015
1052 fixed up phrase order error was having before,
had to remove a few lines.  was doing premature translation.
1053 can try to squeeze in some more vocab work.
} 28 May 2015
0730 made englisha and and analytic english conjugatey tableas
0749 okay so lets continue with making the program
0955 issue with subType recognition.
1004 seems to be when there is number information.
1022 okay fixed
1025 thinking if someone loses to a bug, then instead of taking
of exp and transporting to home base, the user can bribe the
bug, that way the reward for solving it will be bigger. 
solving a bug also happens in various stages, and people can
hang out in a different stage of bug processing, for instance
bug classification, is it really a bug, 
1040 hmmm there is some other bug now. for plurals. not properly
rendering when there is a subType.
1053 okay fixed
1202 debugging can be more highly valued than coding, since
debugging is generally harder. 
1410 I found a revolutionary new paper on scriptable debugging
"A dataflow language for scriptable debugging"
by G. Marceau et al, from Brown University.
1839 anyways lets get some more vocab work done. I started with
just ~800 core vocab words to do, I've added over 600, but I
still have 500 left, bah.
} 29 May 2015
0613 so while loop, we'll use while
0640 I guess first thing is to detect a repeat verb,
and then the while clause of it. 
otherwise we can extract while, and use it as the loop.
0648 wondering if perhaps it might be easier with a simple
conditional, but perhaps can do a repeatConjugate, that may be
best. it would be at sentence level.
0657 identified repeat
0725 may be having issue with comparative conjugate.
0950 fixed comparative partially. 
there may be issue with the subType.
1003 yep so issue is that it is operating at phrase level and
not subject level, but anyways lets try it out as is, did a mild
workaround by making subject resolve at phrase level.
1005 so managed to implement while loops pretty much otherwise.
still a bunch of debugging required before the song will work
properly.
} 31 May 2015
0717 one of the things I learned playing Wesnoth, was that I
shouldn't get too far ahead of those that can support me. It is
safest with a crowd, a lone warrior is at most a nuisance. 
It's also good to rest and recuperate after a hard battle.
0723 to be quite honest, few if anyone seems much interested in
SPEL. though it could be that I keep saying it's an alpha
prototype, so perhaps it will help once it's more complete.
0726 also I've got to become the first user of it, so the two
main ways that is, is by blogging in it, and programming in it.
obviously the blogging in it is easiest.  I'll probably have to
make a final conjugator for English, since it seems people have
difficulty understanding the regularized form of it.
} 01 June 2015
0618 not sure what to do, I guess debugging of the song code. 
0719 good so it is mostly done, just needs decrease, object
declaration and some fine tuning with the subtypes. 
0727 anyways I'd like to do some more vocab work for now.
0728 later I'll look for some more places to submit my natural
english science fiction. if I raise my profile somewhat, then it
could help here also.
0803 I was thinking a hypothetical reptilian language, would
sound different, since their lips tend to be minimal, like
aligator, so no labials, a likely tendancy towards sibilants.
since they are carnivores, their tounges are probably thinner 
so no laterals, and more towards open consonants.  though I dono
maybe the non snake reptiles have bigger tounges not sure. well
a lot of them have forked tounges. 
we could remove plosives altogether, keep it just sibilants,
trills, and glides, with non-labial nasals. 
admitedly cats can make labial nasals, but they are mammals.
} 2 Jun 2015
0723 doing some sci-fi writing. wrote a bit about Venus, now
doing some calculations for Ouranos, 
so the ratio for temperature to height seems fairly constant.
about 7.6^x*temp/depth = 53
so need to do for pressure now.
0.59 for pressure.
anyways, I'm not competent enough in math/physics to do it. 
} 3 Jun 2015
1112 added some more to story
1617 finally got my Odroid VU monitor today, OpenCL finally
works :-D.  well that an I have a bigger monitor, 
will have to move my boxes around. not sure what I'll do with
holden. hmmm. guess I'll just have to sell it or something
*shrugs*. or keep it as a backup.
1633 so thinking there can be hundreds of kilometers width on
Mercury, from the boreal to the tropics,  there would be various
stations, with low pressure, or unpressurized hallways in
between.   Main hominid character in story could use a bicycle
to get around, with a skintight spacesuit.   The near vacuum in
the halls could mean extremely efficient cycling, since there
is no wind-resistance, also the roads could be very smooth due
to the very stable underground tempertures.  so it could be a
roadie,  doesn't even have to be a recumbent roadie, though that
could be more comfortable. Could sweat through the suit, there
could be some recapture, or perhaps it would simply condense on
the walls.  or as humidity.  I guess Ideally the halls would be
air-tight, but it's simply not necessarily the case, so long as
there are bountiful sources of carbon, oxygen, and water, as is
the case in most of the universe. 
1705 the best populations for inhabiting Mercury, Moon, Mars,
etc are high altitude people of Earth, so from Ethiopian
Highlands, the Andes and Tibet. This is because it is simply
more economical and even safer to have lower pressure relative
to vacuum. 
Aymarans seems best of the Andeans. 
Tibetans are fairly well adapted, with some Densionian genes.
Ethiopians are likely the best adapted due to long time.
Amhara Ethiopian and Tibetan hybrid might be best.
} 09 Jun 2015
0656 spent some time writing a short story and doing
colonization research.
0707 added decrease translation for javascript.
0708 need some type debugging and then I think the water song
will be complete.
0711 okay seems pretty much done, only thing left might be
object declaration, we can try it and see.
0715 yep it works, with a minimum number of tweaks.
} 10 Jun 2015
0814 anyways I'm taking a vacation. 
} 12 Jun 2015
0827 my story "Venusian Investment" got rejected from
lightspeed, do I'll edit it, I think Carla was too "grabby",
I'll have to reduce it to some much finer motions. 
Also I'm thinking of putting in references after the end, since
it does seem somewhat "out of this world", so perhaps references
will help, I'll submit it to Strange Horizons next most likely. 
} 19 Jun 2015
0832 working on rewriting mini fictional autobiography into
mwak.
} 23 Jun 2015
2055 bah, well it would be good to get something done.
} 24 Jun 2015
0748 anyways I've gotta decide how this is going to work. 
I'm interested in writing science fiction, but I'm also
interested in doing the computer programming. I guess a good
medium right now would be to translate my stories into mwak.
0757 though ideally I would also bring about the programming
part of SPEL/mwak to a state of completion, so I can make some
kind of beta, or more finalized release. I'm close, right now,
it's mostly just a lot of bugs that have to be dealt with, and a
few features, afterwhich it is documentation and promotion.
0802 hmmm it seems here is says write a story for SPEL is after
the promotion begins. perhaps I'll move a bunch of the other
stuff that I was planning on doing before documentation into
some later section.
} 25 Jun 2015
1120 okay so I reviewed some of the most popular games,
like candy crush which is a little like puzzle pirates but
simpler.
there is angry birds which is similar but without even a map,
and it is based on two dimensional cannon.
The main ones are actually game of war, and clash of clans,
which at least right now are the most popular. 
Both are like farmville for boys, where the user becomes a
mayor of some warring town, then attacks neighbouring towns.
Clash of Clans is generally more popular, likely because it has
a less cluttered user interface, and more pleasant graphics. 
Strong point of Game of War is the inter-lingual chat,
which uses google translate along with translation memory,
whcih is filled in by users for points.
1220 So I'm thinking the premise for the WYN game could be 
having either AI child, or AI village, of various races.
there can be several kinds of currency, for instance in-game
joules, which would be based on their real-world counter-part,
on how many joules various resources cost for their AI's,
for instance memory/processing threads. They could do various
tasks to get more joules.  It would also be possible to redeem
joules for WYN Coin, an alt-coin probably based on NXT,
 which could be traded via the ripple network. 
} 26 Jun 2015
0837 hmmm so what I really want, and what is actually a much
more viable short-term income is to become an author. though I
know it is ridiculously hard, it is still easier than attempting
something that's never been done before, i.e. multiplayer
multi-lingual rpg translation/programming game. 
0839 so I need to find another publisher
1901 sent a story to Orson Scott Card's Intergalactic Medicine
Show.
1903 I have a backlog of stories I want to write, so I'll have
to get to it,  aiming for 500-3000 words. 
2030 okay so stories I have in mind to write out:
mercury colonies,
asteroid jumping realtors, 
seastead mer people; sea cow farmers,
deep ocean miners,
orcan archivers,
mountain plataeu avian people,
desert reptilians, 
Ouranos Ice Giant dwellers,
Neptonian wind harvesters,
} 26 Jun 2015
2248 I wonder if I could write a simple day-trading altcoin bot,
that would be nice, it would sell when a coin is some percentage
higher, and buy when it is some percentage lower. can drive up
the price by making the lower percentage smaller. 
} 01 Jul 2015
1053 I'm thinking of writing a story about life in a future
degrowth society. Where conspicious consumption is looked down
upon, and frugality and minimalizim is honourable. 
there could be child quotas, 
each person born of one can have one, or a part of one,
depending on the overall population quotas at the time. 
though they could choose to give or sell theirs to someone else.
After reaching equilibrium population, and if a calamity takes
place then there could be bonus child quotas available,  which
could be distributed to the affected communities, where they
would either be given out by lottery or vote, some couples apply
to recieve them, and those couples which get the most votes
would recieve them.  This also insures that their social network
is fairly strong, and the child has some fans. 
This could be a post basic income society, or even post
distributist. 
Based on some foot print calculations as a whole people and
developed countries in particular may need to decrease
consumption by as much as 94%
https://theconversation.com/our-sustainability-crisis-didnt-start-and-doesnt-stop-at-climate-change-17471
Okay maybe I should start a file that has all of this stuff.
like transportation bicycles, with maybe electrical assist,
ammonia liquid fuels and that kind of stuff. 
could then later have a video game that incroporates this kind
of future living.   can call it sustainable living, where the
challenge is to live within your means
} 02 Jul 2015
0542 had a dream, that friends wanted houses and mansions,
and I just wanted nature, after we reviewed the points, they
conceded that nature is great.  
0943 I was thinking that what I am best at is enjoying life.
so thinking about making the Joyful Lifestyle Co-operative,
can be an organization to help people have a joyful lifestyle,
in particular focusing on retired people, though inclusive of
all.
Components:
Physical:
organic bulk foods,
reverse osmosis water systems,
Safety:
financial and nutritional consultation.
Love and belonging:
community bike rides, swims, hikes and other events.
Esteem:
lower; arts, performance, theatre plays
higher: meditation, virtues, 
self-actualization:
working for greater good,
charity, council involvement,
promoting green space and sustainable practices. 
1055 just like belts in martial arts, can have bracelets for
joyful life co-operative, progressing in the colors of the
rainbow. 
black/grey - associate member
red - physical foods and nutrition member
orange - outdoor activities member
yellow - consultation member
green - goals and virtues member
cyan - art performance member
indigo - meditation member
violet - self-actualization member
white - full member
associate member can be free, 
with other ones increasing linearly,
the main feature would be voting rights for that portion, 
with possible rebates and payment for contribution,
also likely discounts for services at or below that level.
associate members can participate in any of the events,
though they would have to pay full price if there is any.
There can be daily events,  physical exercise of at least half
an hour a day is a goal. can alternate between biking, hiking,
walking and running,  with swiming and maybe boating in summer,
and snow-shoeing and skiing in the winter. 
there has to be a limit on core-members depending on the size of
the club-house, but also an absolute limit of 54-60 (57) due to iron
limit,  with possibly 11 to 18 (12, 16) carbon/oxygen best for 
club-house regulars, and 1-4 hydrogen/helium for club-house 
residents. outings to far places can be in groups of 20-22 (neon).
1706 of the core 16, half 8 can be male and half female.  so if
have 8 male, then can't get more core-members unless they are
female.   full-members can be the 16,  the core-members could
perhaps simply have some more priviliges and be voting/board
level. 
} 08 Jul 2015
0420 I guess I'll do some meditation.
0648 okay so have to do some programming. 
0732 fixing it up so all the tests get passed,
issue seems mainly to do with spaces at the moment.
} 11 Jul 2015
0541 mmorpg based on inter-linguistic programming language.
1256 so how will I make it? ideally I'm thinking of having it
something like a fruit of life layout. 
people would recieve text messages with little puzzles to solve.
} 14 Jul 2015
0156 Project Scenic Skies, for seeing the stars, and helping
people sleep at night, promotes LPS lights in residential
areas, and full cut-off light-fixtures. cost savings due to
energy efficiency of LPS, and lower wattage requirements to
reduce ground reflected light.  2800K warm-white can be used in
commerical district.  Possibly can also make money by fining for
bright blue containing lights at night. 
0208 Project Food Forest, growing a food forest in the abandoned
industrial park. 
0209 Project Owen Sound LEEDs, making owen sound into LEED
platinum neighbourhood and transition town. 
0904 I might be able to get into city hall via a volunteer
position. 
} 19 Jul 2015
1348 so now thinking about bylaw management software, 
or more generically law managment software. 
constituents could vote on either whole bills, 
or could vote on seperate paragraphs of a bill,
they could also make amendments paragraphs, insert or delete.
One "new" thing would be to encourage that each pargagraph have
references explaining "why" it is here, and possibly "how" it is
supposed to work. 
Can have vote delegation similar to that found in pirate party
software.  I should check how that is doing, if it is open
source can probably simply adopt theirs. 
} 20 Jul 2015
0727 okay so idea is to have different colored borders when
reading a bylaw,  if it is a green border then it is voted up,
if it is a red border then it is voted down, if it is a yellow
border then it has amendments,  if it has a blue border then it
is currently up for review.  if it has a black border or white
background then it is the current law. 
0857 I'll have to try to install and use liquidfeedback,  but
most likely we'll have to make a simplified alternative.  
while there are many features floating in my head I think what's
necessary is to minimize the number of features to a bare
minimum.  
} 22 Jul 2015
1011 CSA (community sponsored agriculture) style website idea,
people can pre-order or get shares for some kind of product,
for instance organic amaranth, in certain number of kg,
or a certain percentage of the field, perhaps golden ratio style
shares.  for instance someone could say they want approximately
so many kg, this will transfer to a percentage of the plot, and
they will be given the share.  some fixed costs like processing
and packing would be on top of that.  but otherwise may be able
to get the food for cheaper,  and at same time give more
financial security to farmers. 
Can also scale these shares, for instance if someone wants more
amaranth than a single farmer can provide,  then the next
nearest available amaranth grower would be included, or some of
their shares will be given to the consumer. 
} 29 Jul 2015
0353 so bad form has made it difficult to maintian the current
codebase.  and the bugs about the spaces are so unruly that
there must be a better way of doing it.  
I'm very inspired by NASA's coding guidelines, 
indeed I think it makes sense to implement if at all possible.
We could have code-checkers, that make sure function length is
reasonable. and implement as many warnings as practical. 
Also for parallel programming I'd like to implement a fastMap,
so can finally abandon for and while loops. 
0357 Ideally we would be coding in SystemC, and then compiling
to javaScript, but I don't thihnk it's viable at the moment.
Also SystemC smells a bit too proprietary for my taste.  
WebCl can be wrapped in the parallel functions like map and
expand. Ideally map and expand would be asm.js level functions,
since they have to be super fast. 
0424 found JSLint, can try using that to help,
but likely will also have to make our own code checkers. 
0446 okay so install jslint,  now I'll start with a new program.
since obviously my old coding style isn't anywhere close to
passing. 
what shall we call the community bylaw management system? 
0500 based on searches, it seems to be called policy managment
software. 
it's also called document management software. 
0511 most of them don't seem to do what I intend. I know liquid
democracy is more of a forum type experience. I'm now checking
online party's new website PACT, they have some kind of hubris
name unfortunately.  lol PMS (policy managment system). 
ummm so what's in a name eh? 
well there is liquid democracy, maybe we should call it liquid
law? I dono that sounds kinda wishy washy. 
it's voted bylaws. or community votes on bylaws cvob
or community votes on law cvol 
1150 made basic layout, and got the images to update on click. 
2142 so can store the policies in localStorage or indexDB
it would have to be by paragraph or something. 
bill, article, section, paragraph, or however it is usually
organized. may have to check out how it is done in Owen Sound
bylaws some more to get a better grip of it. 
each voter could have a uniqueID, and the votes would be a list
of uniqueID's,  similarly the amendment would have an authorship
place. 
} 30 Jul 2015
1238 okay so I'm thinking there is also the "energy internet",
that is mostly up to governments, however there is a the "food
internet" that is something we might be able to work on. 
it could interconnect people that grow in their yards, as well
as those who grow crops. 
however for that to really take place it would be best to have a
"logitistics" internet, similar to uber. though I have heard
there were some issues with people offering to transport stuff,
since it requires insurance or something. 
okay so from what I've read so far it seems moving insurance
isn't not mandatory, simply everything has to be in writing,
especially if cost of move is over $50. 
1307 while Uber and other ride shares are getting quite popular
in America and Europe, I haven't found a local Ontario or Canada
version as of yet.  Also none of the ones I've seen are for bulk
foods or anything like that.  Also none of them offer
eco-friendly transportation, such as bicycle or sailboat. 
So there is certainly an untapped market in Ontario logistics.
though it may be quite some competition.  
} 15 Aug 2015
2258 I think it may be time to craft another hypnotic story for
my spouse to help her overcome some blockages.  such as being
motivated into action by fear, not being willing to learn for a
positive outcome, and not willing to play against a stronger
opponent who has handicaps to balance the playing field. 
those are three elements, so can have three stories. 
being motivated by fear seems the deepest, 
followed learning for positive outcome,
and playing game is shallowest. 
I can also see if I can find some articles or anything about it. 
} 11 Aug 2015
2326 added a bunch of words to dictionary
} 01 Nov 2015
0740 Starting work on Lank the virtual machine. 
It will be written in C with all the checking tools I can find
or make.  It will compile to javascript via emscripten. 
I'm using the creative a VM in C tutorial from wikibooks
https://en.wikibooks.org/wiki/Creating_a_Virtual_Machine/Register_VM_in_C
1 loadi r0 #100
2 loadi r1 #200
3 add r2 r0 r1
4 halt
in suftlank:
100 na ha
200 na ta
tamh hi ya
cwah hi ya
the encoding:
"m","k","i","a","y","u","p","w","n","s","t","l","h","f",".","c"
 0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F
83C3 naha
83A3 nata
A30C tamh
C243 hiya
F73C cwah
C243 hiya

0064 83C3
00C8 83A3
A30C C243
F73C C243 

so either we need a base 12 number system, or a number quote. 
I guess a base 12 number system would be more secure,
since it would be possible to imitate an end quote in a number.
though if the number quote said how long the number is, then it
shouldn't be an issue. 

I could try to think of a simple algorithm for making dozenal. 
I guess I often get stuck on this part.. 
if we take a whole bit that's 8, and too much overhead if have
to filter out a few numbers and add them together.

pfi for binary-value followed by a nibble for an exponent of
bytes that follow. 

6D20 pfim pfi0 is one byte
1306
full code:
6D20 0064 83C3 pfim mmpy naha
6D20 00C8 83A3 pfim mmhn nata
A30C C243 tamh hiya
F73C C243 cwah hiya
1308 coincidentally pfim also mean profession. 
we could use a dot initiated word.  or simply have three dots
infront ...m mmpy naha
then for instance a two byte thing would be 
...k mmpy mmhn naha
otherwise would have to give a full word for the number. 
6D2C 85B9 0064 83C3 pfih nuls mmpy naha
6D2C 85B9 00C8 83A3 pfih nuls mmhn nata
A30C C243 tamh hiya
F73C C243 cwah hiya
1313 I guess it should be fairly reasonable to parse 2bytes at a
time. not the most compact, but that is not the goal. the goal
is to make a human speakable virtual machine language. 
1324 it might make sense to make a mwak to hex converter. 
1330 maybe that is a distraction though, lets try just doing
things for now. 
2307 think I figured out pointed today, which is good. 
need to figure out assert statements also. 
} 02 Nov 2015
0038 made a numToLankGlyphs function
0042 might consider making zero the glottal stop.
} 03 Nov 2015
0718 emscripten doesn't seem to work on ARMv7, or at least clang
doesn't produce llvm output, so can't use it. 
may have to write in javascript direct to implement the VM.
1212 great managed to get emscripten working, needed to compile
LLVMgold, and apply an lli_force-alternative patch in order to
do so but it works and that's what counts :-).
} 04 Nov 2015
0428 adding asserts to all functions
0443 okay added, now should make a barebones VM work.
will then figure out how to interoperate it with current
codebase. 
0503 seems like will need forth tutorial to figure out how to
make the command queue a data thing rather than hard-coded.
or at least to minimize the hard-coded stuff.
0520 posted up jonesforth on sourceforge since it seems to be
mostly absent from internet. 
0532 I'm wondering if it might be more productive to package up
my previous SPEL work, and upload it.  I think it might be. so
I'll take a rest for now and focus on that tommorrow. 
I can always come back to the VM later.
0635 wow, 23 tests are currently failing in SPEL, gotta fix that
up. 
0736 bah it's really hard after all that only one more test
passes.  mostly it's because of extra spaces and such.  I'm
going to try another tack of jslinting everything. 
it at least is easier. and hopefully will make it easier to
debug later :-).
} 05 Nov 2015
0743 great quote.js now passes JSHint and JSLint :-)
0828 started jslinting word.js 58% done.
} 06 Nov 2015
0614 great I jslinted word.js now to test again.
0616 weird an error at completely different place.
to do with not being able to find eng.txt..
0633 had to revert to old version of word.js
guess I'll have to test while updating. 
1643 near a thousand years ago, when I was a vaeringjar on the
Volga I heard of a mountain people that learned to become gods.
I wished to learn from them, the tantric buddhists. 
From the Caspian sea, through the deserts 
and over onto the mountains.
Divine I am, is the teaching.
so mote it be. 
1928 
(Carl): Zrobin you can't go, we need you on the rivers
Zrobin: You will stay, die in battle and go to valhalla,
I will cross the desert, climb the mountains and become a god!
When I climbed the mountains, in the rags that were left of my
clothes, hauling my long sword, with my interpreter beside me. 
'These little dwarf mountain people, what have they to teach me?'
I thought.
I came to a village of some buildings, many people and guardsmen
were before me, barring entrance. I had enough, I threw off my
rags, raised my sword and bellowed "Who are these gods amongst
you, I will defeat them!". As I bellowed my sword in the sky, 
I was met with a hail of spears and arrows. blood gushing I
succumbed and fell. 
On hearing my last words from my interpreter, a monk/leader
said: "maybe he can challenge us again, in his next life, as a
worm" then he threw his head back and laughed. 
The left my body for the birds. 
1958 a fertile women sat in her wagon from beyond the line of
guards and watched the fearsome Zrobin fall. A fear struck her,
as she looked down at her pregnant belly, -- what if he becomes
one of my children?
a violent and raucus child was destined for the guard. 
"I challenge you, where are your gods?" the child yelled. 
The old monk/leader remembered a time not long ago, when that
question was asked. 
"Come little worm, I'll teach you."
"Are you the god?" the child yelled waving his stick.
his mother quite pale at his great offence to a master. 
"No little worm, but you may learn to become one."
Nov 13 2015
0545
I was brought to a Ngakpa householder.
"What's this?" he spoke, arms outstretched, exasperated.
"A new student for you." the leader man spoke. 
"I don't accept new students." the Ngakpa said firmly.
"Now you will. We bring alms." and with so saying he had his
men bring in bags of grain or buckwheat. "that should be enough 
for him for the winter. You deal with him." then almost as an
afterthought "make him a divine warrior"  and with that the
door was shut behind me. I tried running after them, but he told
me that the Ngakpa was my master now, and he would deal with me.
"remmember you wanted to meet our gods?"
I nodded. 
"He will show you the way to become one."
doubtfully I sauntered back to the shack, the Ngakpa's abode.
His children looked at me curiously, and his wife somewhat
scornfully. 
"what about clothes and water? Doesn't he know there is more to
a child than enough grain to feed him?"
"either this boy has a very big apetite, or they brought enough
grain for all of us." looking at the bags, the Ngakpa replied.
0650
At first I would get into fights with the siblings, 
but the Ngakpa quickly put a stop to that by starting my
training,  we would go up into the nearby mountains, chant and
meditate. 
"your soul is restless" he would say, "you need to calm it
down", "see the fog, feel it blanket you with it's cool
droplets, breathe." Sometimes he would leave me up in the
mountain to meditate, he would say "when you have calmed, then
you can return."
The leader-man would stop by and occasionally ask about his 
"divine warrior", seeing my frail husk, and the Ngankpa's stout
children he couldn't help but laugh.  Eating only breakfast, and
spending the rest of the days meditating and chanting 
in the mountain, only allowed to go home as the sun was setting, 
gave me an emaciated appearance. 
"Did I not give enough food?" asked the leader, he himself had a
round belly, and patted it as he asked ponderously.
"I promised his mother that he would be well cared for, 
she asks about him whenever she lays in my bed.
Do not make me into a liar!"
"He eats once everyday." The Ngakpa said defensively. 
"Then let him eat twice a day!" The leader said, signing
the men with sacks of grain to hold back.
"I have given food for him, and him alone, though I knew you
would take part. To deny him food is to steal from me. I ask no
tax of you, and I protect your home with my forces. Tending this
child is the least you could do to show your respect and
gratitude."
"I can double his portion size." The Ngakpa replied. 
"Triple it! I want to see muscles not bones in his thighs and
arms. My divine warrior must be strong!"
From that day forward I was given more food, triple maybe not. 
However the Ngakpa said that now I must also push a boulder and
carry a large rock up and down the mountain.  
After some years and more encouragement from the leader, 
the Ngakpa felt I was ready, and he showed me and told me of 
the tantric dieties, the god prototypes, I was to pick the one 
that I liked, and then I would
assimilate their qualities, becoming them. 
One day I had climbed to far or slipped, fell and hit my head, 
I awoke in the warmth of the Ngakpa's home, I could hear them
arguing. 
"Why didn't you just leave him there?" The wife was asking. 
"The leader said that if any calamity should befall him, then he
would burn our house down, with us inside."
I faded back into unconsciousness, when I came to, I awoke to
the wife smiling at me with tears in her eyes. she hugged me
"I'm so glad you're okay." I had a bandages on my head and hand,
and a splint for my leg. 
"I wanted to fly like the disciples of Padmasambhava" I told the
Ngakpa.
"I am not Padmasambhava, and our divinity is not of the body, it
is of the mind."
Over the next few weeks as I recovered, I had more time with the
family, and finally felt like I belonged. 
A few years later when I had come of age,  the leader finally
came to collect his divine warrior. Even though we had never
been very close, the family still seemed sad at my parting.
 I often front-lined in the charges at the nortern border 
conflicts, full of invincible notions,  though it was
only a few battles until I succumbed to the blades of the enemy.
As I lay there dieing, the leader found me. 
"Twice I have watched you die in my one life. 
You are a fool, for in your violent anger you throw your life
away. Or am I a fool for believing you could become something
more than the barbarian that you were. Don't come back, I don't
want to see you die again." With that he left me, and walked
away. I succumbed to death and reincarnated in enemy lines. 
I got the teachings I wanted, it wasn't what I expected, but 
it's affected all my lives since. I am grateful to the leader,
the Ngakpa and his family.
om ah hung benza guru péma siddhi hung
1134 though I remained on the plataeu for a few more lifetimes,
persuing my study as I was able,  I drifted west, back towards
what had been the domain of varingjar, and had by then become 
the Khanate. 
1153 based on my research it was probably the Guge kingdom of
western-tibet, and probably one of Yeshe-O's descendants 
was the leader. Though quite possibly it was some smaller place. 
} 16 nov 2015
0820 basically I have to finish that register machine version of
the vm (lank), and later on I can try to figure out how to make 
it compatible with forth if necessary. 
} 17 Nov 2015
0617 finished new version of fetch, which uses the initial index
in order to fetch things from the program. still have to get it
to skip over the index itself though. 
0626 excellent it does that now also. Next is decode.
0628 I would also like a function to print the whole
instruction, in order to ease testing. 
0657 okay printing the whole instruction now works, it indeed
did help me with debugging the instruction. Also I no longer
have to fill the rest of it with 0's since I return a length.
0743 I'm thinking now I can make the instruction width 32bit,
since I don't actually have any 16bit instructions, and they
seem to break up nicely in 32bit increments. 
also I'll use ksit (exit) 0x192A instead of cwah (byebye). 
since cwah is more of a grammar word,
kind of like a vocative. 
Also it would be somewhat faster on most modern processors,
which are typically at least 32bits wide. 
0750 considering that little endian makes more sense,
in case a smaller width is used. 
0830 I decided to split a 16bit vm and am working on the 32bit
one, it is at least slightly more complicated..
0835 issue with my calculation of remaining length and
comparison to current bit. 
1328 fixed :-) now I'm fairly confident can work on the decode
portion.
1357 first command to implement is exit. or ksithiya
1401 actually that seems to be part of eval, 
decode simply sets up registers based on phrases, 
so it decodes the phrases. 
18 Nov 2015
0333 so I've added run, and I can add eval.
decode maybe somewhat more complicated. 
0334 I'm also wondering if there may be more code analyzers for
C,  the jslint is actually somewhat more rigorous at least in
formating than the C version. 
0349 I tried valgrind but it doesn't really tell me anything
useful,  other than that there are no memory leaks possible.
0350 anyways on to eval
0436 okay eval has been implemented can now do decode. 
0506 excellent decode works :-)
0510 guess that's everything in terms of that tutorial
from-source:
https://en.wikibooks.org/wiki/Creating_a_Virtual_Machine/Register_VM_in_C#Execute
I can sleep and maybe come up with some ideas of what to do
next.
0802 okay so I figure I can either have a TREG or typeRegister,
or I could make registers a two dimensional array so can
preserve the type information. 
0803 the benefit is that registers could be loaded in parallel,
the drawback is that it requires more registers. 
0805 we could also have something similar to a "FLAGS" register, 
which would have a few bits per register to indicate the type,
for instance we have 8 registers, that gives us 4 bits per
register for type information. 
signed, unsigned, fixed, and floating point is just four,
not sure would need more, it would only require 2 bits per
register. though actually there could be glyphs and such, that
way can avoid type-collisions at the VM level. 
number (signed, unsigend, fixed point, floating) SHCN point
glyph (ASCII,UTF-8,UTF-16,UTF-32) L-glyph
boolean
binary
address
object ?
0820 I'll have to set phraseWord and typeWord in seperate
functions, since decode is getting too big.
} 19 Nov 2015
0657 okay so I now set the types in TREG, which is short int,
so no conversion is necessary, simply uses the typeWord. 
0701 I'm thinking reg should be signed, then can have negatives
as result. 
0712 thinking of adding subtract
0756 okay subtraction works. 
I think next I need to get it to read from file or stdin,
or find out how to communicate it through JS.
then I need to make a compiler, to compile lank to lankCode. 
0807 okay so it seems I can interact with it by exporting a
function such as run(*prog, progLength); 
I think it might make sense to make a run-time compiler. 
so that can use it as more of a terminal. 
0812 also considering how to copy or move things, 
can have a register or place type,  and put it in the to place,
could also do the same with an address or variable,
so it would copy to that address, or to that variable. 
} 22 Nov 2015
0544 I'm thinking external interaction is the most important
feature to add at this time. even if I can simply get it to run
the current version and return the results via my main spel
javascript site that would be good. 
0657 there seems to be a problem with conjunctions,
but only if they are after another sentence. 
0714 it's likely something I changed recently, either in word.js
or phrase.js or type.js, since it works on sourceforge just
fine.
} 23 Nov 2015
0519 going to work on the vm for now, want to make it high
quality, in terms of maintainability and scalability. This time
I will take it at a steady pace so I can keep true to the coding
guidelines. like for instance can make all input arguments which
aren't used for output const.  Also can make as many functions
OpenCl compatible as possible. And can add logical operators for
switch and flip. 
0630 so I think my run function should return the result of the
program. however the result is in the register, also I wanted to
be able to run some of it, then run some more.  so perhaps it
should return an array of it's memory, which it could also
accept initially. 
1402 added a bunch of flags from my earlier C++ attempt at spel.
} 24 Nov 2015
0524 okay so I'll be able to significantly reduce the number of
variable input arguments by making most things a part of memory. 
for instance I don't have to pass around a pc pointer, since I
have a PC constant which shows where in the memory the PC
register is. also the tregs array can be replaced by a subset of
the memory array, which can be identified by
TYPES+CASE_CONSTANT
0645 okay fixed it up, also been looking up how much memory in
OpenCl, or even just my GPU, it is kind of difficult. says 32Kb
per core,  but I don't know how many threads, also that is the
L2 cache... anyways I guess I'll just assume 512 bytes or
something. 
0722 now merging instruction into memory also, as phrase.
0733 great I did that, also lowered cache limit to 512Bytes
0754 named 12 case registers, and have 4 meta registers IMM, PC,
STACKP and DATAP.
0801 now I still have to get run or another similar function to
accept as input, the starting memory, the program, and a string
or some other memory for output. 
0804 it could be interesting to try to fit all variables into
the memory. can have a meta registers section, and one to hold
glyphs being generated for output.  though glyphs are generally
best kept as chars if ASCII, or short ints for UTF16,  though if
we go with emoji then UTF32 is probably best, so can keep ints. 
1242 okay now phraseLength is part of memory.
1300 there seems to be an issue with decrementing MAX_PHRASE_IDX
to 0xE, not sure what exactly, though it seems that the
maxLength isn't calculated properly.
1643 fixed it, issue was with currentBit calculations. 
} 25 Nov 2015
0538 so a goal now is to get it to work with javascript.
after we have it run from a single thread, we need it to work
with multiple threads, and ideally openCl. Though web workers
should suffice for now, on the JS front, since webCl isn't being
supported by any major browser I'm aware of. However there is a
plug-in for it in firefox, it's not an official component. 
0635 so it looks like I'll need to make a lank-worker.c file,
which uses the webWorkers API of emscripten.
Also may want a woker manager, but that can probably be done in
plain javascript...
Anyways first is the lank-worker.c or .cpp 
0645 so I'm thinking that there can be an interrupt or something
for sending output to stdout, this would the the equivalent of
sending a post-message. 
another alternative is that the memory which is passed to the
function can have an area for the message that will be returned.
and the postmessage can return the whole memory. 
0708 so the next time it is called can start from the same
state, or from a blank state. I guess it is also possible to
post multiple messages, if there is some kind of timer.
however generally I can't really see why this would be.
especially considering that the worker is to be called by
function.  We would have to have some global variables to
preserve state between calls, which could get messy.  Though
perhaps it is doable. when calling it initially can pass it the
memory along with the program, it could hold on to the memory,
or point to it with a global pointer. Then the program can
be called with the program code, which it can execute.
1209 so I guess we can have two version, one that is stateless,
which is called with memory and data, and it returns both, and
then exits. 
another is a stateful version, where the memory is initialized,
via a constructor. 
Then a different function processes code and returns output if
any.
A third function could ask it to dump memory. 
1220 I'm looking now, it seems that the calling function can
only give it a single block, and only recieve a single block.
hmmm i wonder what the register overhead is... 192 bytes or 0xCO
that doesn't include stack, since not everything needs a stack.
If there is a large stack it would certainly make sense to
initialize the memory first.
So when calling we'd give a block which had the program code.
Assuming there is enough space in the data area of the
memory, then can simply return an array that consists of a
pointer to that area with a length.
} 26 Nov 15
0843 so I created a worker, lank-worker.c,  it seems that it
wants to work only with emscripten.
so I'll either have to make a javascript worker,
or get it all to work with pure emscripten.
0922 I guess it would be best if it was all in C.  though having
it accessible from javascript certainly has it's own advantages.
} 27 Nov 2015
0717 so if we do do it all in C, then can try to make it flow
based programming style. not sure if emscripten allows for
scheduling. 
0734 so there is a setTimeout thing available via emscripten.h
0745 okay so lets figure out a basic untimed version first. 
of lank-manager perhaps. or lank-president :-). 
if we thinking about it as a president, or presiding officer,
then it's really much like a scheduler,  it gets requests, and
based on some algorithm allows them to be heard, or in this case
processed. 
I'm thinking the treasurer in this case would manage server
resources, to give statistics on what type of operations are
holding up the line -- may need optimizing or duplicating --
 and which ones are zooming ahead -- may need to be fleshed out
to be more CPU intensive. So it's somewhat like a profiler. 
The secretary would keep the history, both of input and output.
0749 the scheduler or president has to come first. So we may
imagine multiple users, where they make requests, and responses,
so their names are stored along with data they request. 
0803 thinking now the vm would be even better if we managed to
hook it into the llvm compiler, then we could do JITc.
0813 I'm thinking it would be good to have a process that
translates the VM code to native code, and the native code is
loaded into the processors that way it is somewhat faster..
Though understandably that wouldn't make much different in
javascript. 
} 28 Nov 2015
0527 well it tells me worker is not defined, not sure what I can
do to make it defined. 
0539 okay so it works I think, but only in browser
0609 I got opencl examples to work. however they are written in
cpp. 
0610 anyways so I guess next I'll make an openCl version. 
okay so next steps on the agenda are, 
getting some useful output or interaction via web workers.
making an llvm backend or compiler/interpreter for the vm.
getting it to work with openCl.  
translating text to bytecode. 
} 29 Nov 2015
0710 may have to rewrite vm in a 8bit version so that can have
memory of chars. unless can figure out a way to do the
conversions from char array to unsigned int array.
or can initialize the int array, and then only accept program
input. though would need conversion to output or input the whole
memory block. 
} 30 Nov 2015
0637 one other thin I could do is make an int to char and char
to int converter. 
0639 though I'm guessing now it would be best to simply accept
program as text, and have some alternative way of dumping
memory.
0914 so it seems that it would be best to have a string
compatible version, something that converts bytecode to string,
and also something that converts string to bytecode.  
This could also be used for converting memory to string and vice
versa. will use glottal stop for the zero. output in little
endian.
0915 I'm having trouble getting it to properly reload in firefox
even with a clear cache button installed.  it seems to always
use an old version of the code.  
0920 I think understandably it is very frustrating so I will
work on the console version as much as possible while keeping in
mind the constraints of getting it to work with the vm version.
0923 so next thing to do will be to make a glyphsToBytes 
and bytesToGlyphs functions, maybe a glyphsToBatches function.
0937 okay I fixed it, was a problem with build scripts,
can continue working on emscripten via web browser.
} 01 Dec 2015
0945 wrote lankGlyphToNibble. next gotta do one for a glyph
array to 8bit array, and probably int array.
afterwards can make one that makes batches,
can simply look for end of phrase keywords and flip bits
accordingly. rounding so that each batch has whole phrases,
maybe even whole sentences. if go the whole sentences route,
then can round based on the ya or sentence ender words. 
it may be easiest to do this using 8bit array, since the
sentence ender and phrase ender words generally fit in 8bit
sometimes 16bit.
though 16bit would allow one word per entry, which might
simplify things. 
1433 also I believe javascript chars are 16bits by default
anyhow.
1513 hmmm well it seems we may not be able to relly on it
crossing from emscripten to javascript. so may have to do it
8bit styles, though can still do 16bit spacing, and 16bit
indexing. 
1530 can try using wchar_t in C, and have builder convert those
references to char16_t in the C++ version. then can see if it
will work..
1537 okay so they don't work, since the emscripten signature is
char, so it doesn't accept wide chars, however I may still be
able to use it for internal things. 
1651 updated all unsigned ints to uint32_t where possible.
happy to have discovered the stdint.h file, finally can get it
to be the widths that I want.
1657 I'm thinking should make build files generate in seperate
directory 
} 03 Dec 2015
0633 edited a bunch with the uint char  and glyph conversion
next have to convert the old text, to the new version of
alphabet where glottal stop is 0. 
0657 need to make a tokenizer to make batches more easily. 
simplest tokenizer would recognize words and put them into 
int16_t tokens, each of which can hold a word. 
simplest to differentiate consonants and vowels if vowels are
kept at one end of the encoding,  perhaps 0xD-0xF
this would simplify the case of if we wished to use a base 
12 number system.
a number could be any uint16 which has no vowels and is > 0
assuming . is 0, and numbers start at 1 (m) 
it currently takes 32bits to indicate a number is coming,
this new base 12 system would make some stuff slower,
like converting numbers to binary,
but may take less space.
which would be good for a glyph input/output,
and it would also be more human friendly. 
so it seems that 12bit is better than 16bit+8bytes 
for expressions up to 77 bytes or 616 bits. 
considering that is more than current estimtes of
 atoms in the universe (10^82), it should be good enough.
however if it is only 4 bytes, then after 38 bytes or 304 bits
it becomes more efficient in binary.  which is more than 
the number of stars in the universe, but nowhere near atoms.
Actually I think it is 4 bytes current, pfih nuls. 
currently 128bit is the largest floats/ints supported,
so even if it went up to 256 we should be okay with dozenal.
the glottal-stop '.' can even represent the point for floating
points. 
in which case 'm' should be 0, and '.' should be 0xC
now just need an efficient conversion algorithm.
for each nibble in number string (uint16_t)
if place greater than 0
then multiply by 12 multiplied by place in number string.
0801 if only 2 bytes to indicate number and length,  
then dozenal is only more efficient up to 19 bytes,
or 152 bits.  though that it is still bigger than 128bit.
nowadays computers are more often memory bound than CPU bound,
so I guess it would be okay for there to be a bunch of CPU
operations, though still it might make more sense for the
bytecode to have binary numbers, then they are plug and play, no
conversions necessary.  however the glyphCode could certainly be
dozenal, would save space markedly. 
if a number starts or ends with a '.' we could consider it 
negative. ends with would make most sense, since could multiply
the whole number by -1, or not it, rather than holding onto that
information. though it would take a whole byte for floating and
sign information. 
so batchCode will be binary, with type information, such as
float64 or what not,  and the glyphCode can be more literate. 
0815 there are floats and fixed numbers, traditionally we use
fixed numbers in human math,  but in computers we use floating
numbers.  we could represent floating numbers just as easily as
fixed point numbers. fraction.exponent(sign)
though it would be best to convey that it is floating point
through the type information. 
for instance
741.0 float (tluh)
74.1 fixed (na..)
both are dozenal for 1.61 golden ratio
0825 so the parser will have to fill the blanks with '.'
0829 so I'm thinking it would be good to have a lank source code
file, lank batch file (uint32_t), and lank (char8) file. 
so .lc and .lb are available 
I guess we don't really need a char8 file.  
though .lt with uint16_t tokens would be good .lt is available.
I guess ideally it would be file acronyms that make sense in
lank..  though lank changes a lot.. so w/e can always do other
ones later. 
0836 so that's what I can do tommorrow, get it to read and write
these things from and to files.  then I can "compile" something,
and run batch code from file.
1041 there is another option that is easier to compute and that
is octal.
it will go all the way up to base 128bit or 16 byte before it
is same width as 4byte instruction relating it's length. 
} 04 Dec 2015
0337 seems like the vocab can use another overhaul,
can probably make it so only CV CCVH CVCH and CCVC are valid.
0342 anyways that will be cumbersome to do, it was hard enough
getting what I have now to fit, I'll need more algorithms to
make it easier. Anyways that's all aesthetic really, right now
what is more important is the more practical aspects of the VM.
Relating to that however, it is best to have version information
available in the files. 
0348 anyways so lets get started with what 'we' were discussing
yesterday. 
0350 first off reading file, one page at a time, and returning
output. 
0409 wondering if perhaps should make a new file lank-c.c or
lank-compiler.c which would compile glyphs into tokens and
bytecode... 
could also be lanktyifhi.c language translate
anyways for the next decades of working on this I think English
will still be the primary language, and considering the ongoing
development of the lank vocab, it may not even be called lank if
we decide to use "moderately complex syllable structure".
which makes up the majority of languages today. 
yea.. also the glide initials can be unwieldly for children,
or at least it was difficult for my son before he was two years
old. though I guess that shouldn't be as much of an issue
internationally as the syllable structure. 
0516 okay so I've made up the new syllables and sent it in for
peer review. I'll add words to it based on how lank words end up
being used. 
0550 anyways will start coding in lank-vm can extract it to
other files later on. 
0651 with 24 glyph alphabet it is possible to make a base 60 by
using consonant pairs.  with 16glyph alphabet can have base 30
with consonant pairs. though 30 isn't really better than 12,
since it's not even divisible by 4. 
octal is the next best thing to just barely reach up to 60.
though 12 can reach up to 120, which is even better than 60. 
0659 anyways need a word for fraction. 
A0 is 120, or 0A_l (little endian) ml (lank glyphs)
kfa is now for fraction type, along with kfas root. 
377/120 ~= pi 3.1416...
nty.ml kfah = 
three-hundred-seventy-seven over one-hundred-and-twenty
0729 I think I also need a lank number to glyph, and glyph to
number thing. 
lwlk.p nu =
/ləwələkəʔəpənu/
three point one four one five
3.1415
2236 okay so it seems that these are three month programs,  
and so that's about 12 weeks,  and since we're so "big" on
dozenal now, perhaps can have a 12 week session.  Though I think
I'll break that up into a month by month basis. 
i'll put the details in everyDayMeditation.txt
} 07 Dec 2015
0331 so today, reading input from a file, and writing to another
file.  possibly with tokenizing in between. 
0927 tokenization works
1500 I'm thinking now that if I take the uint16_t stuff and pass
it through again it might not work, or it might give the same
output.  but I'm thinking about stray glottal-stops would
certainly screw it up.  so numbers would have to have a number
of glyphs divisible by four in order to really work well. 
1502 ideally of course numbers would be free form,
though we don't live in an ideal world lol, or is it. 
anyways the code text at this point certainly would be generated
by something, since even I can't speak/write in lank without a
reference, since I don't remember all the vocabulary, and I'm
hesitant to learn it if it might change later. 
1504 one thing I should do, is give a good output saying where
and when an error has occured. I'll do that and move on to
parsing. 
2157 so even if it makes more sense to think about it in
int16_t, it might be best to record and retrieve in uint8_t, or
char since that is more platform independant, -- there are some
big endian platforms out there -- also can send it 
via worker messages that way. can add that to it.
In terms of the batch coding, while I was thinking about making
it uint16_t maybe uint8_t is better for the same reason. 
also it would allow for somewhat better compression. 
not having to convert frolm uint8_t to uint16_t or otherwise
would also mean less conversion delay. 
I could potentially have two indexes, one for words, and another
for phrases.  a 0 could be a single byte word, a 1 could be a
two byte word. though if I have more than two bytes then would
need to use the other kind of index, with a bit for each byte,
and flip for new word. though I think it would probably be more
of a waste of space than simply having an extra byte for short
words. hmmm well each phrase has at least one short word,
possibly two. so that is two bytes, though processing those
bytes also takes more effort than having aligned words. 
also some systems, javascript included are actually natively
char16_t so it shouldn't make much difference. converting to
uint16_t from the transfered chars might actually be worthwhile.
2209 so otherwise the first uint16_t in a batch will have the 
phrase index. each batch of 16 int16_t's would be 32 bytes 
or 256, 30 bytes or 240 bits of those would be operable.
15 words basically, can expect a density of 3 to 5 phrases per
batch.  
} 08 Dec 2015
0535 so saving and retrieving as uint8_t
then can message pass data in a flow based manner.
1233 okay the uint16_t to char works now. 
now I guess a char to uint16_t array.
1312 okay made it, guess can work on the parser tommorrow.
} 09 Dec 2015
0556 the sentence_size should actually reflect the batch size in
bytes, since batches are the end result anyhow. 
so that means 30 bytes. 
0601 60 is a nicer number though... so maybe batches should be
32bit..
0619 debugging tokenizer.
I think I'll have to remove whitespace in a seperate step to
simplify things. 
0623 it might also make sense to have some kind of buffer, where
can take more glyphs from, or can put glyphs which haven't been
used from previous batch. 
} 10 Dec 2015
0607 fixed a bug, thinking should have an intermediate step
where a white-space free version of text is made, before
tokenizing, since if there is white-space then can have
non-aligned words which creates all sorts of issues -- like
requiring a buffer. 
0609 I'll do some meditation
} 13 Dec 2015
2245 been sick, taking some time off, don't want suboptimal code
due to illness. but got idea that if verb final strict, then
there is no need for sentence ender.
} 14 Dec 2015
0727 so according to my intuition should do OpenCl and SystemC
integration, or perhaps SystemC and OpenCl and then everything
else should fall into place given the limitations therin. 
0752 so I'm compiling SystemC for ARM. I'll check on my OpenCl
test stuff for now. 
1356 so from my understanding each GPU thread can only write to
shared memory,  much like message passing, it has the input
message and the output message. each of the threads in a warp
has the same algorithm, which in this case will be the VM. 
I guess we should call it the GPU-VM, since it has to be so
small and succinct enough to fit into the shared memory. I'm not
sure how the code gets loaded, but it probably has to fit in
there also. 
the global process would then have to get these messages and put
the results into global memory where necessary. 
Can make the GPU-VM have a minimal amount of parts, thus making
it's object or executable file relatively smile, especially sans
the assert statements. 
1718 so blackboards and tuple-spaces seems to be the most common
AI decentralized schedulers. Basically like the output of one
becomes the input of another, is the other is constantly looking
for such input. 
1730 lets imagine a french input, that requires and
english output, a translation request. 
say we have a user fred who speaks french and they want to
translate bonjour to english, so they say:
"su bonjour etre tranduce a anglais ya"
this would get picked up as an input, 
and be deposited as a batch indicating it's source and
destination, which is presumably the same person. 
though I guess we don't need to know the source, just the
destination. 
"a-destination fred su bonjour etre tranduce a anglais ya"
so that would be the batch that would be put in the commons. 
perhaps with a tag somewhere saying what language it is in. 
ideally at the front. 
"en-langue francais a-destination fred etre tranduce ob bonjour
a anglais ya"
this would be the batch..
now it would be picked up by a french translating process, that
translates stuff to lank.  
1758 new word for language is klac /kläʃ/
1801 anyways so the translating process would make it into a
klac packet and change the language part
klacclahfredtcuhnlictasalhhatyifhi (char)
which would be picked up by the glyph-to-batch translator
0b100110011,fredtcuhnlicta..salhha..tyifhi.. (int16_t)
1835 I'm thinking for a message passing system like javascript,
the workers can't search through shared memory, but the main
thread can. So it comes across a language and then gives that
sentence to the worker, the call-back-function would put the
result in the former batch location. 
the cortex a7 has as little as 8kb cache, so we'll presume a
page size 0x1000B for the master node. so at 0x10 per batch 
we'd have 0x100 batches in it. 
though for initial glyph inputs I guess it's best to do 0x100
per string. which is the standard. giving us 0x10 batches per
page. we'd need 16-32 bytes for a batch that size, which seems
ridiculous.. 
1848 from-source
http://countwordsworth.com/blog/what-is-a-good-average-sentence-length/
says that good average is 15-20 words per sentence. so that
would be 32-64 bytes with klac if we do 16-32 as maximum. 
I think 16 is a reasonable maximum, so can make it 256bits,
that would allow a single 32bit register to access them all.
that would mean 128 batches per page. 
still there is the string problem... 
though I guess the strings could have multiple batches,
especially if an even number
to average 16 words, would need to have space for 32 words,
so 32bit index makes most sense, though we'll see with real
world stuff what is best. 
1918 another thing the callback function can do, is check if the
result batches verb is one of the output verbs, which master
thread has to process, anything such as put or get or say 
to console, global memory, or other streams, then it would have
to act on it itself. 
Another thing it could look for is error output,  though that
could be a say error or something. 
1934 using the destination operand could probably just use get
and put for most things that the master thread has to do. 
} 15 Dec 2015
1748 thinking that even with message passing the workers could
be the search agents, by requesting a list, or a single block of
 language identifiers, or verbs, 
} 20 Dec 2015
0705 ideally would make something generic enough, that any kind
of parallel ideology could be fit in it.  Also the interface
would be ideally something similar to giving orders to workers,
or soldiers, something that a leader might be used to doing. 
This is where the subject comes in, or the vocative. 
hey processor2 be perform ob function4 ya
hey processor3 su user1 be ...
0717 hmmm not even sure how to use it. 
I guess the subject is more for using objects. 
hey processor 4 su cabinet be open do
0726 so basically a multi layered blackboard system would do,
a mini eco-system for every GPU and CPU core,  with the main one
being at the main thread.  
0750 so creatures could be a higher order function, which
accepts a function, the time to live, and starvation speed. 
it could be instantiated on some processor. 
0811 so when coding, how do we make it easy to make creatures,
and for them to work together? especially at the bytecode level.
there would have to be something like examine, or examine self,
to see how many processors are available. and a simple way of
pushing off some functions to that processor.  I know typically
it is done with threads, but I think they are rather overly
abstract. 
abstraction is good for portability, though knowing specifically
what is going on is best for performance.  It is possible to
have both of course. 
Anyways we don't even have to implement multi-threading right
away. just have the idea of how to do so, so that the code is
forwards compatible. 
even a single threaded VM will be better than nothing. 
I think the confusing part now is how the main thread will
decide to delegate to other threads.  
The simplest case would probably where it delegates everything,
but there aren't infinite resources or processors available.
} 22 Dec 2015
2242 what I really want to do most is work on those word
generating scripts. So it would give a list of potentially
matching words which are still available. 
Ideally I would make a script that would do it from scratch,
adding the words based on frequency list. though It's hard to
have a frequency list since we haven't actually used the
language yet.
but whatever it's pretty obvious I'm fooling around with things
I've already done, it's like that information bias thing, I
already know about this, so I'm comfortable with it, and want to
continue fiddling. 
What I'm not comfortable with, what I'm confused about is, the
parallel programming. and how that is going to look, in a simple
and useable way. similar to that of a story.  
I guess first we would define the characters, they would be the
processes. Character is unfortunately a rather ambigious word,
maybe should use people or something. defining people. or
persons.. though that could get into some complicated territory. 
2253 a Persona, that is probably the best word for it. 
anyways then would define the story line, the protagonist would
be the main thread, or main persona that is acting on the
memory, but other personas would act on it as well..
so really there has to be a background persona for the
environment, which will notify the personas that there is some
data they may like to work on. 
the protagonist could then be responsbile for input and output.
so the persona blocks would describe what kind of input data
they like, they would do something with it and make some output
data.  
the protagonist block would also describe what kind of input
data it likes, and it would describe how it will output that
data to the user. 
the protagonist could also accept input from the user, and put
it into the ecosystem.
The ecosystem thread would simply pattern match to see if there
is a thread that would find the data interesting, if yes then it
would give it to that thread. 
Though certainly ideally the threads would look for stuff
themselves, once they are done processing the old stuff.. 
though that would require shared memory, which isn't available
for javascript. 
otherwise maybe can make something like the ecosystem thread
would only search if it has requests to fulfill,  the requests
would be matches and return addresses (function calls), so if 
a match is found, then it would call the function, and take it
off it's request queue. 
2310 anyways sleep for soon. will think about the syntax. 
su french translator be start ob persona ya
su me be know ob french language ya
su me be seek ob batch with quote glyph en-langue francais glyph
unquote at start as french batch then
su me be translate ob french batch to mwak as mwak batch then
su me be output ob mwak batch ya
su french translator be end ob persona ya
su main be start ob persona ya
su me be ask ob user for text in-language french as french text
then su me be put ob french text in community ya
su me be seek ob mwak batch then
su me be say ob mwak batch to user ya
2324 okay so hopefully that will work. can dream on it.
2326
su community be start ya
su me be birth ob french translator ya
su me be birth ob main ya
su community be end ya
2327 each persona can have default values for time to live and
hunger metrics. they can be overriden by setting up something
else in the persona description. 
su main be end ya
} 23 Dec 2015
1548 one of the most important things for such asynchronous
transactions is a collate function.  So there should be some
kind of way of indicating the order when there is a multi-batch
things.  Since the batches can be processed out of order, but
they have to be assembled into the proper order for output. 
There would have to be some kind of collating organism to do so.
it could for instance make a linked list of the batch indexes.
} 24 Dec 2015
0647 so start out with single thread,  can have the processes
going concurrently. If a persona asks to be reproduced then can
parallelize, as it has been around long enough to need it. 
} 28 Dec 2015
0750 okay so we basically have the idea with the VM,
there are a few kinks to work out, like collation. 
but I'd like to write a story in SPEL now. 
it is also easier to apply portion of SPEL. 
Okay so have to see if I have those file translating scripts
working. 
0802 am jslinting fileTranslate.js so it will be easier to
debug.
0900 seems that my google translate engine isn't working
anymore, so I might have to make scripts that work with hand
inputed translations. 
0920 got new translation script ./trans so will have to update
scripts accordingly. 
0921 also got idea about how the blackboard or ecosystem can
have rooms or areas, with locks, for security purposes.  and the
environment manager thread can identify if a process has a
proper key for that area. there can be a set of keys, some more
permananet others more temporary.  if there is a breach all keys
can be flushed and renegotiated based on legitimacy. 
0947 okay updated the ordinary wordTranslate.sh for it.
1004 need to update translationUpdate.js will have to jsHint and
jslint it most likely, as it is rather confusing. 
1402 so it seems to me that some of the project is in Beta,
or debugging rather than adding new features. 
the console version anyways.
wheras the web interface might still be in alpha.
2252 jslinted translationUpdate, will have to break up some of
it's larger functions.
} 29 Dec 2015
0731 seems that based on the Russia 2045 initiative, Russia will
have a single or just a handful of super powerful, likely
villanaous AI's.
http://qz.com/581664/the-eye-opening-things-that-made-us-smarter-in-2015/
1932 I have a vague idea for the 4KB (page) layout, 
also need idea for the 65KB (operating system level) layout. 
} 05 Jan 2016
0639 so still have to figure out translationUpdate
0821 I think I'm getting close to figureing it out. 
on a similar topic I think I might be able to parallelize the
translation,  as each file can be translated independantly. 
I simply have to get it to have a process for each file, rather
than doing the files in sequence. 
0831 great it is working, will try to figure out parallelizing
it next time. 
} 07 Jan 2016
2152 actually lets try using it first, there should be enough
vocab for a reasonably wide level of expression. 
2330 it seems that javs language has some serious sideffects
which ruins anything that gets translated afterwards.  very
unfortunate..
2336 oh whoopee I managed to fix it, was the format variable,
have to reset it after each languages plays around with it. 
} 08 Jan 2016
0651 seems all translationUpdate is now working well,
while I can't parallelize it with webWorkers, 
I may be able to parallelize it with bash,
in a pseudo web workers fashion. 
1729 okay made the bash script seems to work good.
} 11 Jan 2016
2240 working on a meditation log app
} 13 Jan 2016
2324 bare bones of meditation log app almost complete.
simply need calculation of day's total, and activity-total.
 then the stats screen and the meditation screen,
also the uploading screen, and finally the entry removal screen.
} 14 Jan 2016
0541 find previous function necessary, for elements of entries
} 18 Jan 2016
2226 been working on meditation app recently. 
Igor suggested Bootstrap for styling, it seems interesting. 
I'm thinking will implement it with Scrollspy menu,
as that is the most compatible with the current HTML layout.
another option would be to make menu buttons better. 
another thing I'll have to do is make a bootstrap form,
instead of the current "add entry" table. 
} 19 Jan 2016
0738 idea for webapp,
make an Entry object,  to store entries without formatting
information. 
that way can output them with the latest formatting information,
also makes it easier to access components of it. 
will have to make a function to harvest the old entries,
this can be the same function as for harvesting from upload. 
0741 afterwards will need sort by date,
something to remove entries, and edit entries. 
} 19 Jan 2015
2303 really need a view entries and edit entries ability. 
so probably the view entries would allow people to also edit and
remove entries, through the use of some buttons, probably in
place of where the record button used to be. 
2305 the upload entries will also be greatly beneficial, since
I'm planning on upgrading to Firefox OS 2.5 or 2.2, which will
probably clear the cached version of my app.
Another thing Is after record entries should go to the view
Stats screen. 
} 25 Jan 2016
1015 working on rootWordGen and pre-sort. 
should really have a minimum number of world languages,
which covers the majority of major language families. 
issue with having too many is they all need espeak support. 
2205 made the sort list portion of it. next is the getting
translations for all of them and storing them in some kind of
datatype. 
} 26 Jan 2016
2103 so lets think of the next stage. 
I need function that takes word, and language code,
then returns the resulting translation. 
can extract it from translationUpdate.  
2145 okay wrote thing to get translation from google translate
and save, them, currently waiting for it.  guess I'll find out
if it worked tommorrow. wanted to do a smaller trial run than
all the words, but it seems it's hard to cancel it because of
the try catch loop.
2150 while I wait I'll see what I can do about the weights. it
would be good to know what the populations of the language
families are. 
2158 well pie chart of world languages by percentage of
speakers. indicates IE 45%, Sino-Tibetan 22%, Altaic 6%,
Niger-Congo 6%, Afro-Asiatic 5%, Austronesian 5%, Dravidian 4%, 
so lets see how that goes with the languages we have available
https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/Languages.png/450px-Languages.png
Indo-European 45% 3,285 million {
//      ob English (IE, West Germanic) 840 and
//      ob Spanish (IE, Romance) 490 and
//      ob Hindi  (IE, Indo-Aryan) 380 and
//      ob Welsh (IE, Celtic) and
//      ob Greek (IE, Hellenic) ya
//      ob Russian (IE, Slavic) and
//      ob Swedish (IE, North Germanic) and
//      ob Farsi (IE, Indo-Iranian) and }
Sino-Tibetan 22% 1,606 million{ 
    //      ob Chinese (Sino-Tibetan) 1030 and }
Altaic 6%  438 million{ //      ob Turkish (Turkic) and }
Niger-Congo 6% 438 million {//  ob Swahili (Niger-Congo) and }
Austronesian 5%+ Tai-Kadai 1.5%, 365+110 million{
    //      ob Indonesian (Austronesian) and }
Afro-Asiatic 5% 365 million{ //      ob Arabic (Afro-Asiatic) }
Dravidian 5% 365 million{ //      ob Tamil (Dravidian) }
Uralic 0.4%, 28 million { //      ob Finnish (Uralic)  }
Kartvelian 0.07% 5 million { //      ob Georgian (Kartvelian)  }
2214 Okay lets look at some real numbers to corroborate things
Mandarin 1030 million
English 840 million
Arabic 490 million
Spanish 490 million
Hindi 380 million
Russian 170 million
Portuguese 200 million (Romance +Spanish)
Bengali 210 million (Indo-Aryan +Hindi)
French 220 million 
Malay/Indonesian 210 million
Urdu 160 million (Indo-Aryan, +Hindi)
Japanese 130 million (Altaic, +Turkish)
German 145 million
Javanese 84 million (Austronesian, +Indonesian)
Telugu 79 million (Dravidian, +Tamil)
Tamil 77 million 
Korean 77 million (Altaic, +Turkish)
Wu 77 million (Sino-Tibetan, +Cantonese/Mandarin)
Marathi 75 million (Indo-Aryan, +Hindi)
Turkish 71 million
Vietnamese 68 million 
Italian 64 million
Punjabi 63 million (Indo-Aryan, +Hindi)
Yue 62 million (Sino-Tibetan, ~+Mandarin)
Farsi 57 Million
Swahili 150 million Niger-Congo (600 million)
Tai-Kadai 100 million +Austronesian/Indonesian
2233 so I can probably allow most of the european languages that
have espeak variants represent themselves. that gives a final
list of:
Hindi (Indo-Aryan 1500)
Mandarin 1030 million
Yue 62+Wu 77 million (Sino-Tibetan, ~+Mandarin) [139]
English 840 million
German 145 million
Swedish (North Germanic, 9+6+5+.3+.1 = 20.4) 21
Swahili Niger-Congo [600 million]
Arabic 490 million
Malay/Indonesian (Austronesian 386 + 100 Tai Kadai) [486] 
Vietnamese 68 million (Astroasiatic 71 million)
Turkish (Turkic 170 million) 6 mongol + 77 korean + 130 jap= 383
Russian for Eastern Slavic Languages 325 million
Tamil for Dravidian 210 million
Farsi (200 mil Iranian Languages)
Spanish 490 million
French 220 million 
Portuguese 200 million 
Italian 64 million
Finnish, Uralic  28 million 
Greek, (hellenic 13)
Georgian, Kartvelian  5 million 
Welsh, (celtic 1.4) 2
Polish for Western Slavic 57 million
Serbian for South Slavic 32 million
Lithuanian for Baltic 5 million
2251 so I'll have to add an option to add the new languages
to the existing translation JSON. that way can have all the
languages.  Then I'll need to make the espeak level entries,
which will espeak translate from the google translations. 
And after that we'll do the weighing. 
} 27 Jan 2016
0953 so it seems that the initial translations are complete,
now I'll add the additional languages. 
1033 so I'm going to be splitting the rootWordGen, since
translation takes so long,  and part of it is finished I can
start working on the phoneme stuff. Though I guess I also need
to work on my class material for tommorrow. 
} 29 Jan 2016
0950 so finally added an arabicToIPA yesterday.
am working on thaiToIPA. but should also make my phoneme
harvesting. which I guess will be another file.  
rootWordPhon seems a good title for it, 
so maybe I'll move the old rootWordPhon to transWordPhon
1027 anyways need to figure out an algorithm.
we can load up genPhon.json and sortedWordList.edited.txt
we will be generating rootPhon.json the object will have
this.consonantArray
this.vowelArray
this.initialConsonatArray
this.middleConsonantArray
this.finalConsonantArray
They will be sorted based on the weights of the languages,
which will be internal to the algorithm that generates them.
1032 so at a later stage will have to downmix the consonants.
Or we can downmix right now,  and have each object have the
above, but one for this.SixteenGlyph and this.TwentyFourGlyph
or we can simply have two different objects of the same kind but
with different names. 
} 29 Jan 2016
2215 did some meditation, 
ideas to put up a flyer at bleeding carrot, and at post of
driveway about the laughing meditation. 
also to start practicing for the pame benza meditation that I
used to do on the slopes of tibet 900 years ago.  so I could
later perform it at the open mic. 
} 01 Feb 2016
2018 hmmm I wonder if with new phonotactics may not need word
alignement, so could use h or x for words. 
makcakhi
don't know if it is ma kcak or mak cak
hmakhcakhi
2130 so going to be using the 5bit version for full vocab,
and going to have 2 clicks for local or temporary words.
2153 due to highly regular layout of the words CCVC with h for
padding, can probably have a condensed representation. 
22 consonants does require 5 bits, though only 12 can be the
second consonant, and 16 can be final, which can both be
represented with 4 bits, leaving 3 bits to express the vowel
though that doesn't allow expression of tone.
unless we consider the voiced nature of initial consonant,
since that would change f to v and c to j, and s to z
which would lower it to 3 bits for second consonant,
leaving 4 bits for vowel.
2204 so layout can be 5+3+3+1+4 CSVTF
2207 we might need a slightly modified layout for short words
though,  which can be signaled by choosing one of the empty
consonats, since there are 22 consonants, but can express 32, 
2212 this can work for 2 letter words, but not three letter.
2219 well maybe it could if h can fit in first 3 bits.
for instance if h was 0, then simply avoid assigning, 8, 16, and
24, then will know that the next 5 bits will be start of small
word. otherwise consonant 30 or "." could signal it is one of
the 2 letter words.  so we are looking at:
5+3+3+1+4 CSVTF
3+5+3+1+4 HCVTF
3+5+3+1+2 .CSVT
2228  grammar word be if first 3 bits are 1's,
    so can't assign 31, 23, or 7 , in addition to 16, 18, 24
2234 I wonder what the vocabulary range is.
2258 with tones it is 10,100 words, without it is 6,700
2300 14 bits would be enough to list them all sequentially,
so the encoding is 2 bits inefficient. but is fairly
straightforward.  certainly cheaper than 5*5 for the longest
words with tone (25 bits). 
2303 but yeah with looser phonotactics can have much larger
vocabularies. 
2308 thinking perhaps the last two bits of grammar words could 
be a checksum for the phrase or sentence. 
2323 so it would seem that it should be enough, considering can
always have multiple syllable words. 
} 03 Feb 2016
0733 combined special english, oxford english, and wordnet, for
the full list which will be for the 24 glyph language. 
1010 made a 28 glyph lang
1317 if have 13 glyph version can have roots pronounceable by
75% of language speakers 
1331 the bit 3 alphabet has 78 syllables. 
    24 of them are grammar words, 54 are root syllables
should be easily pronounceable by 85% of speakers. 
1954 anyways what is the next phase of programming?
2200 aggregating the phonemes once generated
2203 it should be done at time of language translation,
since we know the key, and thus the value of the phonemes
} 04 Feb 2016
1551 idea for checking for uniqueness of definition before
commiting them to root word list. For instance if two words have
the same definition in three different languages, then the
shorter of the two (english) words will be kept, and the other
will be blacklisted. 
1637 can also have a redlist where words that have the same
spelling in multiple (three or more) languages would go, 
as it indicates borrowing. may have to lowercase them all.
1638 then can also have a greenlist of words which are have
unique definitions in all languages, as well as unique
spellings. 
1657 in relation to the monostary, tibetan bodhisattva vows, 
with new monasticism. the goal is to bring awakening to all 
people, not just those who follow a celebate lifestyle. 
1. I vow to actualize and live according to my full moral and ethical capacity.
2. I vow to live in solidarity with the cosmos and all living beings.
3. I vow to live in deep nonviolence.
4. I vow to live in humility and to remember the many teachers and guides who assisted me on my spiritual path.
5. I vow to embrace a daily spiritual practice.
6. I vow to cultivate mature self-knowledge.
7. I vow to live a life of simplicity.
8. I vow to live a life of selfless service and compassionate action.
9. I vow to be a prophetic voice as I work for justice, compassion and world transformation."
from  The new monasticism: an interspiritual manifesto for
contemplative life"
} 05 Feb 2016
0930 so what to do now.. I guess we can continue with the
phoneme aggregation since we started that, and then the
uniqueness after, even though it would later be happening
before the phoneme aggregation stage, or even the phoneme
translation station, due to different pronunciation rules. 
1107 okay finished phoneme aggregation stage, but now am excited
about word generation stage. I'm thinking can use a simpler
algorithm that simply generates all possible words in order of
preference, and then they would be matched to the available
words. 
1109 so I'll have to think about the best algorithm for it.
1348 okay implemented it,  need something that when run low on
words 
1352 now need something to switch from 16glyph mode to 24glyph
mode after a certain number of words. lets say golden ratio,
so 682, though number of of grammar words and roots are
different. there are 144 grammar words, 960 roots.
so 593 for roots, 88 for grammar words. 
or even 39 for grammar words, since that is the shortest ones.
and 120 for the root words, since those are the shortest ones. 
1506 have to add the weight of the words to each word, so can
sort by highest weight. can add an average-weight letter to
shorter words.
1733 have to turn cvList and such into arrays.
} 06 Feb 2016
0910 instead of adding an extra glyph value, can divide all the
weights by the number of letters, to get a better approximation
of how many speakers the words represents
1742 great so that is done, next is the uniqueness stuff.
} 07 Feb 2015
1048 so I am inspired to work on the meditation app again, will
set the colors to lime or chartreuse and green apple.
also set the form to be in proper order. 
then also set up the drop down menus with other option for the
currently empty fields
