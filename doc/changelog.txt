} 01 Jan 2015
1246 so they say release early, and release often eh.
well okay, guess I'll release something then.
2252 tested the site on my phone earlier, it was a bit slow and
unresponsive, so I'll put up signs for when it is loading and
such ya
} 02 Jan 2015
0803 added blink tag via html5 css, for processing loading stuff
1610 so I'm thinking can add javascript translation support ya
can add a word formating thing, so compounds would be dot
seperated. 
also the verb would have to be distinguished, and the noun
phrases would have to be arguments. 
2323 we can either use an object which would allow named
arguments as input, or have them all in a set order. personally
I prefer named arguments, since it is more similar to how
natural languages are constructed. 
be say ob wu hello ya
say({ob:"hello"});
2326 say would have to be defined also
su say be function for tha ob word de
be console log ob word ya
function say(obj){
var word = obj[ob];
console.log(word);}
2330 so maybe plain ob would be standard argument, without
having an object. 
be say ob word de
be console log ob word ya
function say(word){
console.log(word);}
} 03 Jan 2015
0802 so I'm thinking it is more of a format thing than a
language thing. thus meaning we can output in mwak/eng/spa or
whatever other language, using the same format.
Though of course english is the international language of
computing, and many languages have different versions of say, so
it could make sense to have a dictionary for them also ya
0827 de is really like a multi-sentence quote, but for now we
can simply demonstrate some proof of concept javascript such as
with phrases and such
1428 the easiest computery output we can start with is JSON, can
have it as an output, and potentially even input language ya
also dicionary can be output in JSON. this will be at least a
minimal demonstration of it's programming language ability ya
2357 have it outputting the dictionary in JSON
} 05 Jan 2015
0559 added support for translation to json ya
1332 okay to add javascript output support,
we need to distinguish the verb ya
1336 okay made a verbWords array in grammar, can use that ya
1348 hmmm started making a javascript translation thingy,
but now I'm thinking how do we describe javascript as a
language?
it is prepositional, and it has : as phraseHeadJoiner
is has ';' as a period or end of sentence ya
has ',' as a phraseJoiner
phrases are also encapsulated with a '{' and '}' ya
word order is VO head initial
} 06 Jan 2015
0135 Anyways, should get back to the assigned roadmap ya
0157 have junctions in grammar, can work on junctionParse
then junction Object ya
0158 can start with firstJunctionWordIndexParse and
lastJunctionWordIndexParse.
0205 okay now we have two different kinds of junctions,
prepositional and postpositional style ya
the next stage is to identify phrase junctions,
but we want this to be modable, so can pass a parse function,
or else implement in the same level ya
0208 one possibility is to have a junction extract, much like
the quoteExtract, in it for instance anded phrases would be
grouped together, and extracted from the sentence.
we can check how quote extract works, though if I remember
correctly it simply returns an array with the quote in the same
place as it was, but in object form.
0211 junctions are slightly more complex, since they may be in
different parts of the sentence, though generally I think in
natural speech we find them in the same part of the sentence,
thus we can only accounts for those for now. 
0212 one way of having a modable junctionParse is that for
instance prepositional form would check if the word after it is
either a type or phrase word, if it is, then it gets that type,
and returns the result.
0214 okay lets try that for now
0214 for postpositional style, we'd have to get the next of
whatever it is ya
0220 oh actuall I guess postpositional stuff we usually parse
backwards anyways, so it's not as much of an issue, would still
be parsing whatever it is backwards ya
0227 wrote barebones algorithms for each
0259 implemented, now to test ya
0308 okay is working, now a junction object
0313 copied phrase.js to make junction.js
now rewriting the constructor algorithm
0317 wondering how this is going to work,
phrase encounters a junction at tail, 
then calls junction constructor with it's own head,
junction constructor would have to identify the head,
and parse accordingly, find the tail, and add matching heads 
to it's body ya
0321 later on the toString would iterate through body,
inserting the head junction until it reaches the end ya
0322 there is a hierarchy of junctions though, for instance and
is subordinate to or generally speaking ya
so perhaps would have to give what's been parsed thus far to
junction as an input, as it may be a phrase or a collection of
phrases ya
0325 alternatively it can figure out those things on it's own as
it's going through to be more consistent with other constructor
initialization ya
0326 anyways right now we are only looking at the simple case of
two phrases with one and in between ya
0331 change folder from type/ to class/ so easier to distinguish
from type.js
0352 wrote algorithsm for clause final and clause initial
junctions ya
0410 implementing
0423 hmm just realized that if I have a word junction in a
phrase.. well I guess the type getting will handle that. 
0438 okay wrote it
0442 it compiles
0455 anyways I'll finish debugging later, gotta catch some sleep.
1228 bah, Phrase seems to be acting weird now.
1231 Phrase gets confused if there is more than one of the same
type of phrase in the same sentence ya
while techincally it should simply get just one of them
1234 issue was I was using ta instead of tu, oops
1236 okay cool now simply have to do toString stuff
1237 just gotta prep lunch first ya
1338 good it works ya 
1339 now need it to work with prepositional or clause Initial
input ya
1359 hmmm it's not strict compliant, should fix that ya
1419 okay is strict compliant
1431 wrote the prepositional version
1447 okay working partially, but seems to break after third
1449 okay now both junctions work, have to add them to phrase
object ya
1507 okay seems to be working :-D
1511 next have to test in web version and then can release ya
} 07 Jan 2015
0451 time to test
0501 hmmm doesn't seem to work at sentence level ya
0512 it seems to be because only the parsed phrase tokens are
passed to new Phrase, wheras we'd need the ones previous in
order to get the junction out ya
however we relly on the parse function not including it ya
so we can either have another parse function ya
or find a way of passing the rest of the tokens to phrase ya
0516 I think an extra junction aware parsing function would be 
most compatible ya
0534 made parsing function, now debugging
0556 okay works for postpositional style ya
now for prepositional ya
0602 okay now to test it
0610 debugging
0617 okay it works :-)
0618 now web version ya
0622 seems to be having issue with topClause
0630 okay now got to put it back in order even with junctions ya
0639 okay fixed it up .ia ya
0646 excellent it works, can roadmap and git ya
} 08 Jan 2015
0316 so next is type junctions,
these might be a little bit easier as likely don't have to add
another parser function for them. Can simply have a junction
detector in the type class, which would forward the type
contents to Junction ya
0318 but ya, I'm a little sleepy, will continu this a bit later
2208 hmmm my latest calculations seem to indicate that hydrogen
is 249hz, resonant with B (246hz), helium is 214hz around
A(220hz), lithium is 164hz around E (164hz), berylium (196hz) 
G (195hz), boron 156hz D# (155hz), carbon (176hz) F(174hz), 
oxygen 193hz G (195hz), flourine 222hz A (220Hz). 
so what scale has, A B D# E F G
2226 well anyways that's pretty embarassing. 
I used the more usual f*l = c formula this time,
rather than the convoluted one I was using before. 
} 09 Jan 2015
0540 anyways time to do type junctions
0541 guess can start with the Junction class
0547 I'll check over the algorithm
0553 hmmm, seems like I will need a lastTypeIndexParse and
firstTypeIndexParse function, though should be easy enough.
0613 okay wrote lastTypeIndexParse, can test it ya
0634 okay firstTypeIndexParse also works,
now lets try Junction.
0647 hm seems to parsing correct, but not outputting properly.
appears to have lost it's prototypes.
0709 cool, so Junction level works now with string output ya
0710 now have to add it to Type object ya
0713 right should also check with English version ya
0727 okay fully debugged Junction and parsing,
think I need a nap before baby wakes ya
0815 okay works at Type level, now for Phrase level ya
0820 oh actually Type not yet fully operational ya
0827 issue with english multiple ands
0938 hmm, thinking now that have Type junctions, that case and
subphrase junctions are unecessary. however sentence and
subclause junctions can still be useful ya
1608 whatever can have all sorts and kinds why not, easy enough
to implement at this stage.
1642 okay turned out to be a parsing problem, has been fixed .ia
1645 works for Phrase, debugging for Sentence
1712 okay so test on web, then roadmap and git
1717 cool works, so roadmap and git
1752 found out yesterday that cytoskeletons resonate at
frequencies as low as 10Khz, that means we can make music which
appeals to them. Lets see, B
1756 so in western music that's the 9th octave,
or from about d#9 (9956Hz) til D#10 (19912Hz)
cytoskeleton music w00t w00t!
1806 okay found a study that mentions 2Khz til 20Khz
 http://www.rife.de/files/efficiency_of_solitary-waves.pdf 
1808 the diameter of a microtubule is 12nm and 24nm for inner
and outer, so lets see what note that gives us.
1816 op, redid my music calculations, seems I was right the
first time, it really is C# that is hydrogen harmonic. 
even with the f*l=c equation
(120 * (10^-12) * (16^13) * x) = 2.9979246E8 = approx. x = 554.72748
piano C# is 554.365 
1834 okay so F9 is closest to 11360Hz the harmonic of 
microtubule diameter, 31TET with A at 443.58Hz (tuned for
hydrogen) is -9Hz deviation, whereas 12TET is -184hz deviation.
1837 nice with this new A for 31, schuman is -0.079 deviation at
B2, wheras it's -0.113 for 12TEt, also B2.
1839 of course cytoskeleton microtubule wavelengths matter more
based on their lengths than their diameters, but it's something
ya, they all resonate by their diameters.
2111 decided will work on the translation in 0.4 since it is
more useful sooner. can do some real demonstrations once there
is enough vocabulary ya
} 11 Jan 2015
0411 made command like google translate script, with help of
translate-bin
0416 hmmm have to implement in javascript for portability ya
0421 seems google translate requires payment for apiKey,
so best to simply use translate-bin for now ya
we only need to translate the core words once ya
0438 so I'll have to implement the shell script output for
translation.
0537 for full implementation will need text append
otherwise the translation update script is almost complete 
0538 anyways need to catch some z's 
1539 I think I'm going to go back to posting some of my more
epic email responses on tumblr. They seem to be one of the most
popular sources of posts on reddit.
1623 so need to replace spaces with dashes in the output,
since sometimes a single word is equivalent to multiple words
in a foreign language ya
1624 also thinking insert would be a nice feature, since then
can insert the entry at same place as it is found in the
original file ya
1707 okay so have prett much completed single file translation,
can put the warnings in the .log file with the date
after that have to make a verification file, that makes sure
there aren't any double definition
} 12 Jan 2015
0459 have it working very well now, 
added arabic, portugeuse, now translating indonesian.
can probably also add german, japanese and korean ya
0503 hmmm gotta make yi take multiple words ya
0543 managed to fix the space problem by writing custom function
to replace the spaces with dashes ya
0614 thinking can translate to japanese and korean from chinese,
since then can only have to update chinese for the english
differences rather than all three.
0630 okay updated my mandarin file, will try doing translation
from it to japanese and korean
0643 okay so italian, dutch, swedish, adn then should be done
0717 okay well couldn't find a translation service for esperanto
but I think in total we have enough for now ya
0829 so next have to do roadmap and then verifiers
0904 apostrophe is more common than period for glottal stop so
we should change that ya
0943 some preliminary things I want to translate are some of
Aesop's fables, such as sour grapes. 
1212 thinking that using the apostrophe may make it more
difficult for some things as we'd have to use an escape sequence
for a lot of programs, especially for c conversion and the like. 
1216 there are apostrophe's in English though, so perhaps we can
try it and see if it works? I dono, it seems kinda scary, would
get all sorts of problems, and increase the size of things. I
also like how glottal stop periods are low just like in the 
throat. I think having it as an apostrophe is a bit confusing.
admitedly having it as a period is a bit confusing for people
which aren't familiar with it.
1222 anyways so roadmap done, lets git for now
oh also can make a tarball
2147 I'm going to have to write up a meeting draft soon,
so can probably translate that to mwak also,
it is pertinent to the political theme.
} 13 Jan 2015
0558 so gotta add grammar support for Arabic ya
I'll remove esperanto ya
0634 cool, gotta fix up a few arabic words
0635 then I want to add hindi :-D
oh and portugese, oh and indonesian if possible ya
0706 hmmm seems to be issue with end clasue for hindi and mwak
ya for instance hindi is getting the chinese end clause, and
mwak isn't getting any at all.
0728 okay fixed it, it was simply issue of having the cmnGrammar
in the hinLanguage by accident ya
0730 okay now portuguese ya
0736 next is indonesian, japanese, german, korean, turkish
vietnamese?, italian and swahili ya
0738 i'll add this to the roadmap ya
0743 of currently supported languages we have total support for
3.5 billion speakers (some maybe twice), once we add the above
we'll have 4.1 billion. 
1350 we should have UNL compatability layer sooner rather than
later, I should get UNL certified in order to do so adequately ya
1351 definitely before I start doing frame translations ya
1352 If we want this to be accepted by the UN, then
interoperability with the UNL is paramount!
1436 anyways for now can add a few more langs
can add danish, ukranian and hungarian to the list ya
1444 okay time to test indonesian
1458 okay fixed up vocab. next is Japanese.
1500 okay lets add a few langs at the same time 
jpn deu kor tur swa ukr swe nld
1857 k so they all work, sorta anyways,
since I want this to be used by the UN, I'll focus on the
official languages of the UN.
