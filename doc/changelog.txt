} 01 Jan 2015
1246 so they say release early, and release often eh.
well okay, guess I'll release something then.
2252 tested the site on my phone earlier, it was a bit slow and
unresponsive, so I'll put up signs for when it is loading and
such ya
} 02 Jan 2015
0803 added blink tag via html5 css, for processing loading stuff
1610 so I'm thinking can add javascript translation support ya
can add a word formating thing, so compounds would be dot
seperated. 
also the verb would have to be distinguished, and the noun
phrases would have to be arguments. 
2323 we can either use an object which would allow named
arguments as input, or have them all in a set order. personally
I prefer named arguments, since it is more similar to how
natural languages are constructed. 
be say ob wu hello ya
say({ob:"hello"});
2326 say would have to be defined also
su say be function for tha ob word de
be console log ob word ya
function say(obj){
var word = obj[ob];
console.log(word);}
2330 so maybe plain ob would be standard argument, without
having an object. 
be say ob word de
be console log ob word ya
function say(word){
console.log(word);}
} 03 Jan 2015
0802 so I'm thinking it is more of a format thing than a
language thing. thus meaning we can output in mwak/eng/spa or
whatever other language, using the same format.
Though of course english is the international language of
computing, and many languages have different versions of say, so
it could make sense to have a dictionary for them also ya
0827 de is really like a multi-sentence quote, but for now we
can simply demonstrate some proof of concept javascript such as
with phrases and such
1428 the easiest computery output we can start with is JSON, can
have it as an output, and potentially even input language ya
also dicionary can be output in JSON. this will be at least a
minimal demonstration of it's programming language ability ya
2357 have it outputting the dictionary in JSON
} 05 Jan 2015
0559 added support for translation to json ya
1332 okay to add javascript output support,
we need to distinguish the verb ya
1336 okay made a verbWords array in grammar, can use that ya
1348 hmmm started making a javascript translation thingy,
but now I'm thinking how do we describe javascript as a
language?
it is prepositional, and it has : as phraseHeadJoiner
is has ';' as a period or end of sentence ya
has ',' as a phraseJoiner
phrases are also encapsulated with a '{' and '}' ya
word order is VO head initial
} 06 Jan 2015
0135 Anyways, should get back to the assigned roadmap ya
0157 have junctions in grammar, can work on junctionParse
then junction Object ya
0158 can start with firstJunctionWordIndexParse and
lastJunctionWordIndexParse.
0205 okay now we have two different kinds of junctions,
prepositional and postpositional style ya
the next stage is to identify phrase junctions,
but we want this to be modable, so can pass a parse function,
or else implement in the same level ya
0208 one possibility is to have a junction extract, much like
the quoteExtract, in it for instance anded phrases would be
grouped together, and extracted from the sentence.
we can check how quote extract works, though if I remember
correctly it simply returns an array with the quote in the same
place as it was, but in object form.
0211 junctions are slightly more complex, since they may be in
different parts of the sentence, though generally I think in
natural speech we find them in the same part of the sentence,
thus we can only accounts for those for now. 
0212 one way of having a modable junctionParse is that for
instance prepositional form would check if the word after it is
either a type or phrase word, if it is, then it gets that type,
and returns the result.
0214 okay lets try that for now
0214 for postpositional style, we'd have to get the next of
whatever it is ya
0220 oh actuall I guess postpositional stuff we usually parse
backwards anyways, so it's not as much of an issue, would still
be parsing whatever it is backwards ya
0227 wrote barebones algorithms for each
0259 implemented, now to test ya
0308 okay is working, now a junction object
0313 copied phrase.js to make junction.js
now rewriting the constructor algorithm
0317 wondering how this is going to work,
phrase encounters a junction at tail, 
then calls junction constructor with it's own head,
junction constructor would have to identify the head,
and parse accordingly, find the tail, and add matching heads 
to it's body ya
0321 later on the toString would iterate through body,
inserting the head junction until it reaches the end ya
0322 there is a hierarchy of junctions though, for instance and
is subordinate to or generally speaking ya
so perhaps would have to give what's been parsed thus far to
junction as an input, as it may be a phrase or a collection of
phrases ya
0325 alternatively it can figure out those things on it's own as
it's going through to be more consistent with other constructor
initialization ya
0326 anyways right now we are only looking at the simple case of
two phrases with one and in between ya
0331 change folder from type/ to class/ so easier to distinguish
from type.js
0352 wrote algorithsm for clause final and clause initial
junctions ya
0410 implementing
0423 hmm just realized that if I have a word junction in a
phrase.. well I guess the type getting will handle that. 
0438 okay wrote it
0442 it compiles
0455 anyways I'll finish debugging later, gotta catch some sleep.
1228 bah, Phrase seems to be acting weird now.
1231 Phrase gets confused if there is more than one of the same
type of phrase in the same sentence ya
while techincally it should simply get just one of them
1234 issue was I was using ta instead of tu, oops
1236 okay cool now simply have to do toString stuff
1237 just gotta prep lunch first ya
1338 good it works ya 
1339 now need it to work with prepositional or clause Initial
input ya
1359 hmmm it's not strict compliant, should fix that ya
1419 okay is strict compliant
1431 wrote the prepositional version
1447 okay working partially, but seems to break after third
1449 okay now both junctions work, have to add them to phrase
object ya
1507 okay seems to be working :-D
1511 next have to test in web version and then can release ya
} 07 Jan 2015
0451 time to test
0501 hmmm doesn't seem to work at sentence level ya
0512 it seems to be because only the parsed phrase tokens are
passed to new Phrase, wheras we'd need the ones previous in
order to get the junction out ya
however we relly on the parse function not including it ya
so we can either have another parse function ya
or find a way of passing the rest of the tokens to phrase ya
0516 I think an extra junction aware parsing function would be 
most compatible ya
0534 made parsing function, now debugging
0556 okay works for postpositional style ya
now for prepositional ya
0602 okay now to test it
0610 debugging
0617 okay it works :-)
0618 now web version ya
0622 seems to be having issue with topClause
0630 okay now got to put it back in order even with junctions ya
0639 okay fixed it up .ia ya
0646 excellent it works, can roadmap and git ya
} 08 Jan 2015
0316 so next is type junctions,
these might be a little bit easier as likely don't have to add
another parser function for them. Can simply have a junction
detector in the type class, which would forward the type
contents to Junction ya
0318 but ya, I'm a little sleepy, will continu this a bit later
2208 hmmm my latest calculations seem to indicate that hydrogen
is 249hz, resonant with B (246hz), helium is 214hz around
A(220hz), lithium is 164hz around E (164hz), berylium (196hz) 
G (195hz), boron 156hz D# (155hz), carbon (176hz) F(174hz), 
oxygen 193hz G (195hz), flourine 222hz A (220Hz). 
so what scale has, A B D# E F G
2226 well anyways that's pretty embarassing. 
I used the more usual f*l = c formula this time,
rather than the convoluted one I was using before. 
} 09 Jan 2015
0540 anyways time to do type junctions
0541 guess can start with the Junction class
0547 I'll check over the algorithm
0553 hmmm, seems like I will need a lastTypeIndexParse and
firstTypeIndexParse function, though should be easy enough.
0613 okay wrote lastTypeIndexParse, can test it ya
0634 okay firstTypeIndexParse also works,
now lets try Junction.
0647 hm seems to parsing correct, but not outputting properly.
appears to have lost it's prototypes.
0709 cool, so Junction level works now with string output ya
0710 now have to add it to Type object ya
0713 right should also check with English version ya
0727 okay fully debugged Junction and parsing,
think I need a nap before baby wakes ya
0815 okay works at Type level, now for Phrase level ya
0820 oh actually Type not yet fully operational ya
0827 issue with english multiple ands
0938 hmm, thinking now that have Type junctions, that case and
subphrase junctions are unecessary. however sentence and
subclause junctions can still be useful ya
1608 whatever can have all sorts and kinds why not, easy enough
to implement at this stage.
1642 okay turned out to be a parsing problem, has been fixed .ia
1645 works for Phrase, debugging for Sentence
1712 okay so test on web, then roadmap and git
1717 cool works, so roadmap and git
1752 found out yesterday that cytoskeletons resonate at
frequencies as low as 10Khz, that means we can make music which
appeals to them. Lets see, B
1756 so in western music that's the 9th octave,
or from about d#9 (9956Hz) til D#10 (19912Hz)
cytoskeleton music w00t w00t!
1806 okay found a study that mentions 2Khz til 20Khz
 http://www.rife.de/files/efficiency_of_solitary-waves.pdf 
1808 the diameter of a microtubule is 12nm and 24nm for inner
and outer, so lets see what note that gives us.
1816 op, redid my music calculations, seems I was right the
first time, it really is C# that is hydrogen harmonic. 
even with the f*l=c equation
(120 * (10^-12) * (16^13) * x) = 2.9979246E8 = approx. x = 554.72748
piano C# is 554.365 
1834 okay so F9 is closest to 11360Hz the harmonic of 
microtubule diameter, 31TET with A at 443.58Hz (tuned for
hydrogen) is -9Hz deviation, whereas 12TET is -184hz deviation.
1837 nice with this new A for 31, schuman is -0.079 deviation at
B2, wheras it's -0.113 for 12TEt, also B2.
1839 of course cytoskeleton microtubule wavelengths matter more
based on their lengths than their diameters, but it's something
ya, they all resonate by their diameters.
2111 decided will work on the translation in 0.4 since it is
more useful sooner. can do some real demonstrations once there
is enough vocabulary ya
} 11 Jan 2015
0411 made command like google translate script, with help of
translate-bin
0416 hmmm have to implement in javascript for portability ya
0421 seems google translate requires payment for apiKey,
so best to simply use translate-bin for now ya
we only need to translate the core words once ya
0438 so I'll have to implement the shell script output for
translation.
0537 for full implementation will need text append
otherwise the translation update script is almost complete 
0538 anyways need to catch some z's 
1539 I think I'm going to go back to posting some of my more
epic email responses on tumblr. They seem to be one of the most
popular sources of posts on reddit.
1623 so need to replace spaces with dashes in the output,
since sometimes a single word is equivalent to multiple words
in a foreign language ya
1624 also thinking insert would be a nice feature, since then
can insert the entry at same place as it is found in the
original file ya
1707 okay so have prett much completed single file translation,
can put the warnings in the .log file with the date
after that have to make a verification file, that makes sure
there aren't any double definition
} 12 Jan 2015
0459 have it working very well now, 
added arabic, portugeuse, now translating indonesian.
can probably also add german, japanese and korean ya
0503 hmmm gotta make yi take multiple words ya
0543 managed to fix the space problem by writing custom function
to replace the spaces with dashes ya
0614 thinking can translate to japanese and korean from chinese,
since then can only have to update chinese for the english
differences rather than all three.
0630 okay updated my mandarin file, will try doing translation
from it to japanese and korean
0643 okay so italian, dutch, swedish, adn then should be done
0717 okay well couldn't find a translation service for esperanto
but I think in total we have enough for now ya
0829 so next have to do roadmap and then verifiers
0904 apostrophe is more common than period for glottal stop so
we should change that ya
0943 some preliminary things I want to translate are some of
Aesop's fables, such as sour grapes. 
1212 thinking that using the apostrophe may make it more
difficult for some things as we'd have to use an escape sequence
for a lot of programs, especially for c conversion and the like. 
1216 there are apostrophe's in English though, so perhaps we can
try it and see if it works? I dono, it seems kinda scary, would
get all sorts of problems, and increase the size of things. I
also like how glottal stop periods are low just like in the 
throat. I think having it as an apostrophe is a bit confusing.
admitedly having it as a period is a bit confusing for people
which aren't familiar with it.
1222 anyways so roadmap done, lets git for now
oh also can make a tarball
2147 I'm going to have to write up a meeting draft soon,
so can probably translate that to mwak also,
it is pertinent to the political theme.
} 13 Jan 2015
0558 so gotta add grammar support for Arabic ya
I'll remove esperanto ya
0634 cool, gotta fix up a few arabic words
0635 then I want to add hindi :-D
oh and portugese, oh and indonesian if possible ya
0706 hmmm seems to be issue with end clasue for hindi and mwak
ya for instance hindi is getting the chinese end clause, and
mwak isn't getting any at all.
0728 okay fixed it, it was simply issue of having the cmnGrammar
in the hinLanguage by accident ya
0730 okay now portuguese ya
0736 next is indonesian, japanese, german, korean, turkish
vietnamese?, italian and swahili ya
0738 i'll add this to the roadmap ya
0743 of currently supported languages we have total support for
3.5 billion speakers (some maybe twice), once we add the above
we'll have 4.1 billion. 
1350 we should have UNL compatability layer sooner rather than
later, I should get UNL certified in order to do so adequately ya
1351 definitely before I start doing frame translations ya
1352 If we want this to be accepted by the UN, then
interoperability with the UNL is paramount!
1436 anyways for now can add a few more langs
can add danish, ukranian and hungarian to the list ya
1444 okay time to test indonesian
1458 okay fixed up vocab. next is Japanese.
1500 okay lets add a few langs at the same time 
jpn deu kor tur swa ukr swe nld
1857 k so they all work, sorta anyways,
since I want this to be used by the UN, I'll focus on the
official languages of the UN.
} 14 Jan 2015
1526 okay so git and roadmap
1527 now time for the verifier
1527 btw I found out that there is no "core UW" vocab
explicitly, the closest they have is extended basic english.
1528 so the frames we had before should be fine, 
though there may be UW attributes which are defined,
we can implement those for sure.
1528 oh an in terms of the syntax of the language I'd like to
fix up the glottal stops, and remove the diphthongs
1542 okay I also removed the unique phones restriction
1545 meh, actually I'll keep it for now
1546 got more than enough core vocab room to fill for now
1546 so I need a script to update the .u's and such to 'u's 
also to remove the CVV and CTVTV CTVV CVTV words,
easy enough for the latter, since can simply regenerate that
file, don't actually hve anything defined there.
1548 also I don't think I have anything defined in the X files,
yet anyways, so can remove those, and regenerate.
1549 oh actually I have nia and tai, and tua, blah
1550 guess I'll have to keep the diphthongs for now.
1551 so I'll just update the vocab files them
1604 okay updating to apostrophe notation, 
working out the kinks
} 15 Jan 2015
0253 great so we can include the UW attributes, and UW relations
which are already defined ya
0255 ideally I'd also support outputting them from my JSON,
or even inputting them, since we strive for UNL compatibility ya
Actually lets see what UNL already has so we don't overlap
functionality ya
0300 so currently they have LILY which is Language to
Interlingua to Language sYstem, which is also a pivot based
translator. It doesn't seem to aim to support computer
programming languages, and it doesn't seem to be functional yet
either. 
0425 anyways I managed to do CUPS250 but their whole way where
the focus on the subliminal meaning of stuff is really
frustrating cause it is so variable and hard to determine.
0427 anyways so I need to make a verifier.
0450 oh ya, I can also change the current diphthong cases to
monopthongs
0514 okay now just have to update the files
tua is now twa, tai is tya, kai is kya and nia is nya
0623 made the verification program, will have to weed out the
duplicated later as I need some shut eye before morning
0626 chinese needs the most work, and then to have japanese and
korean retranslate from it ya
1324 got a new monitor, it is a small one, 7 inches.
So can get a feel for what it would be like for BoP to program,
or how it can be done effectively anyways.
I have it standing up on the box it came in, so that my neck is
fully extended to look at it properly ya
su it be comfortable ya
su me be increase ob font size for ease of reading ya
} 16 Jan 2015
0536 figuring out how to have a core language, and one where we
translate out of. so finding pairs of which less prominent
languages usually use a source.
For instance swahili seems more commonly translated from Russian
than English. 
turkish is usually from arabic and french.
0630 so I'm currently debugging the non unique words out of the
dictionary ya
0712 great so I did it :-)
now they are all unique
0713 now to test the web version ya
0721 hmm seems to be working fine except the synesthesia ya
0723 okay fixed
1703 probably going to have to change back to periods instead of
apostrophes since periods are more compatible with URL's and
filenames. 
} 18 Jan 2015
0724 so next is verb, ergative and tripartite support.
verb support can be added by making a verb variable in grammar.
ergative, tripartive, nominal best with enum
1603 I was looking up x-bar theory, it was saying how a sentence
is like a phrase, with a head consisting of the tense and aspect
ya
So I can probably put tense and aspect in the mood area of the
sentence, which would then be the head of the sentence ya
want su me be sleep ya
past su me be eat ob buckwheat ya
recently su me be watch ob one piece ya
happy su me be like ob it ya
clarify flow su it ob tense and aspect 
in mood area of sentence ya 
} 19 Jan 2015
0258 so should also define object and subject for ergative
transformation ya
0326 did a little studying on tripartite, ergative and
nominative languages.
0327 gotta look up javascript enums if they are viable.
0329 hmmm seems like it would be somewhat of a hassle.
0330 thinking of changing meaning from subject to agent but I
guess it's moot right now, since subject is the more common SOV
and w/e.  I'm using "hu" as agent word. that way can have an
intransitive word order ya
0419 okay so wrote the intransitivity stuff now to test it
0437 okay debugged is working now :-)
0438 next is the long awaited performance grammar phrase
ordering ya
0454 hmmm so I guess it's an output thing,
in toLocaleString for sentence
0459 hmmm testing the word order stuff with indonesian, doesn't
seem to be quite right ya
0509 okay fixed, it was just a typo.
0529 so looked up performance grammar again, 
it seems to take most effect for clusters greater than 4 words.
the hungarian vso example I'm assuming is inflectional so really
has about that much if it were analytical.
0539 wrote algorithm, need some beauty sleep ya
0540 I'll assume by if it is twice the size of average length,
then it should be reordered by performance grammar
1424 so wheras SOV languages use time manner place,
SVO or head-initial languages use place manner time.
interesting so phrase order would change correspondingly.
1519 on the agenda is to finish up that blitz meeting and post
it project rejuvenation's wall.
} Jan 20 2015
0046 also have to make that translation pack so language
maintainers can more easily check on current and new
translations ya
0047 can probably set it up so that it emails them with new
definitions.
0050 anyways decided will do performance grammar in a simple way
for now, which is just to find the phrase which has a clause,
and set that in the tail and just return the rest to be
processed as normal ya.
0146 was studying up on China and it's great firewall,
also looking at my QQ profile, it's interesting.
Though I should really focus on the free world instead.
Chances are however upsetting that they don't want deliberative
assembly in China. Though it might be possible to be a business
thing or something *shrugs*.
Anyways it's a big market, but there is 6 billion other people
in the world also, which may be better to focus on, since they
aren't behind a firewall. 
0209 okay wrote in performance grammar for toLocaleString, now
to test ya
0234 okay it is working even in web version so can increment
roadmap and git
0243 so next is UW relations and toki pona level vocabulary
Here is a listing, with english mwak equivalents:
rel				relation
agt (agent)			su
and (conjunction)		and
aoj (object of an attribute)	su 
ant (antonym, different from)	different-from
equ (synonym, equal to)		equal-to
fld (field)			from-field-of
icl (hyponym, a kind of)	a-kind-of
iof (example, instance of)	is-a
pof (meronym, part of)		part-of
ben (beneficiary)		for
cnt (content or theme)		ob
con (condition)			if
exp (experiencer)		su
mod (modifier)			- h
mat (material)			made-of
nam (name)			named
pos (possessor)			of
qua (quantifier)		nu
obj (patient)			ob
opl (objective place)		ob
res (result)			to
or (disjunction)		or
per (proportion, rate)		per
bas (basis for a comparison)	based-on
plc (location: physical or logical)	at
gol (final place or state, destination)	til
lpl (logical place, scene)		lat
src (initial place or state, origin)	from
via (intermediate place, path)	via
ptn (partner)			with
tim (time)			at-time
tmf (initial time)		from-time
tmt (final time)		til-time
dur (duration)			for-time
coo (co-occurrence)		during
man (manner)			by
ins (instrument or method)	by-tool
met (method)			by-method
pur (purpose)			for-purpose
rsn (reason)			because
seq (consequence)		thus
0308 hmmm some overlap and seem redundant
I wouldn't have so many if I was designing it,
I want to stick to just the basics for now
junctions and/or
su bo to til for by from of
at with named nu tat via thus cuz
0314 we should review the attributes as well
@1 (first person of discourse (speaker)) 00.@1.@pl=we
@2 (second person (addressee)) 00.@2.@pl=you
@3 (third person (other)) 00.@3.@pl=they
@ability
@about (about) book about Paris > mod(book,Paris.@about)
@above (above) above
@according_to (according to)
@across (across)
@active (active voice) kill.@active=kill
@adjective (adjectivation)
@adverb (adverbialization)
@advice
@after (after)
@again (iterative) do.@again=redo
@against (against)
@agreement
@all (all) book.@all=all books
@alliteration (series of words that begin with the same letter or sound alike)
@almost (approximative) big.@almost=almost big
@along (along)
@also (repetition) big.@also=also big
@although (although, even though, though) do.@although=although [he] does
@among (among)
@anacoluthon (change in the syntax within a sentence)
@anadiplosis (repetition of a word at the end of a clause at the beginning of another)
@anaphora (repetition of the same word or group of words at the beginning of successive clauses)
@anastrophe (inversion of the usual word order)
@and (and, nor, as well as, both... and, neither... nor, not only... but also) do.@and=and [he] goes
@anger (Expression of anger)
@angle_bracket (< >) a.@angle_bracket=
@antanaclasis (repetition of a word in two different senses)
@anterior (before some other time other than the time of utterance) go.@past.@anterior=had gone
@anthropomorphism (Ascribing human characteristics to something that is not human, such as an animal or a god (see zoomorphism))
@anticlimax (Arrangement of words in order of decreasing importance)
@antimetabole (repetition of words in successive clauses, in reverse order)
@antiphrasis (Word or words used contradictory to their usual meaning, often with irony)
@antithesis (juxtaposition of opposing or contrasting ideas)
@antonomasia (Substitution of a phrase for a proper name or vice versa)
@any (any) book.@any=any book
@apposition (placing of two elements side by side, in which the second defines the first)
@archaic (archaism)
@around (around)
@as (as) do.@as=as [he] does
@as_far_as (as far as)
@as_of (as of)
@as_per (as per)
@as_regards (as regards)
@as_well_as (as well as) do.@as_well_as=as well as [he] does
@as.@if (as if, as though) do.@as.@if=as if [he] does
@assertion
@assonance (repetition of vowel sounds, most commonly within a short passage of verse)
@assumption
@asyndeton (omission of conjunctions between related clauses)
@at (at) at
@attention (Expression of attention) 00.@attention=hey!
@back (in relation to the back of) the book behind the box = plc(book,box.@back)
@barring (barring)
@because (because, since, for, as, that) do.@because = because [he] does
@because_of (because of)
@before (before)
@behind (behind) behind
@belief
@below (below) the box below the table = plc(box,table.@below)
@beside (beside) beside
@besides (besides)
@between (between)
@both (both) book.@both=both books
@bottom (in relation to the bottom of) the book under the box = plc(book,box.@bottom)
@brace ({ }) a.@brace={a}
@brachylogia (omission of conjunctions between a series of words)
@but (but, yet) do.@but = but [he] does
@by (by)
@by_means_of (by means of)
@catachresis (use an existing word to denote something that has no name in the current language)
@causative (causing) eat.@causative=make eat
@certain (certain) book.@certain=certain book
@chiasmus (reversal of grammatical structures in successive clauses)
@circa (circa) born circa 1900
@climax (arrangement of words in order of increasing importance)
@clockwise (in the same direction as the rotating hands of a clock) a
@colloquial (colloquialism)
@command
@comment (what is being said about the topic) (the dog).@topic (bit the little girl).@comment
@concerning (concerning)
@conclusion
@condition
@confirmation
@consent (Expression of agreement) 00.@consent=Uh-huh
@consequence
@consonance (repetition of consonant sounds without the repetition of the vowel sounds)
@contact (in contact with (in opposition to "near" and "far")) the book at the box = plc(book,box.@contact)
@contentment (Expression of contentment)
@continuative (continuous) eat.@continuative=still eats
@conviction
@decision
@deduction
@def (the) book.@def=the book
@desire
@despite (despite)
@determination
@dialect (regional speech pattern)
@disagreement (Expression of disagreement)
@discontentment (Expression of discontment)
@dissent (Attribute that expresses the sentiment of dissent) 00.@dissent (No way!)
@distal (that, those) book.@distal=that book
@double_negative (Grammar construction that can be used as an expression and it is the repetition of negative words)
@double_parenthesis ((( ))) a.@double_parenthesis=((a))
@double_quote (" ") a.@double_quote="a"
@doubt
@down (down)
@dual (Two of a class) book.@dual=a pair of books
@due_to (due to)
@during (during)
@dysphemism (Substitution of a harsher, more offensive, or more disagreeable term for another. Opposite of euphemism)
@each (each) book.@each=each book
@either (either) book.@either=either book
@ellipsis (omission of words)
@emphasis (emphasis) book.@emphasis=the book itself
@enough (sufficiently) big.@enough=big enough
@entire (Reference to the whole.) entire book = book.@entire, whole book = book.@whole
@entry (head of the main clause)
@epanalepsis (repetition of the initial word or words of a clause or sentence at the end of the clause or sentence)
@epanorthosis (Immediate and emphatic self-correction, often following a slip of the tongue)
@equal (comparative of equality) big.@equal=as big as
@equivalent (equality of status)
@euphemism (Substitution of a less offensive or more agreeable term for another)
@even (even) book.@even=even a book
@even.@if (even if) do.@even.@if = even if [he] does
@except (except)
@except_for (except for)
@except.@if (except if) do.@except.@if = except if [he] does
@exclamation
@excluding (excluding)
@exhortation
@expectation
@experiential (experience) eat.@experiential=have already eaten
@extra (excessively) big.@extra=too big
@failing (failing)
@familiar (high degree of solidarity) mother.@familiar=mom
@far (far from) the book far from the box = plc(book,box.@far)
@fear
@female (female) 00.@3.@female=she
@focus (information that is contrary to the presuppositions of the interlocutor) John.@focus = it was John that
@following (following)
@for (for)
@from (from)
@front (in relation to the front of) the book in front of the box = plc(book,box.@front)
@future (at a time after the moment of utterance) go.@future = will go
@generic (generic) book.@generic=books, a book
@given (given)
@habitual (habitual) eat.@habitual=eats
@half (One of two equal parts that together constitute a whole) semicircle = circle.@half
@hesitation (Expression of hesitation) 00.@hesitation=..er..
@hope
@hyperbole (Use of exaggerated terms for emphasis)
@hypothesis
@if (if) do.@if = if [he] does
@if.@only (only if) do.@if.@only = only if [he] does
@imperfective (uncompleted) eat.@habitual=was eating
@in (in) in
@in_accordance_with (in accordance with)
@in_addition_to (in addition to)
@in_case (in case (that)) do.@in_case = in case [he] does
@in_case_of (in case of)
@in_front_of (in front of) in front of
@in_place_of (in place of) in place of
@in_spite_of (in spite of)
@inceptive (beginning) eat.@inceptive=start eating
@inchoative (Inchoative aspec (change of state)) adult.@inchoative (become adult)
@including (including)
@indef (a, an) book.@indef=a book
@inferior (low degree of status)
@inside (inside)
@instead_of (instead of)
@intention
@interrogation
@intimate (very high degree of solidarity) mother.@intimate=mommy
@invitation
@irony (Use of word in a way that conveys a meaning opposite to its usual meaning)
@iterative (repetition) eat.@iterative=eat and eat
@jargon (technical vocabulary)
@judgement
@least (superlative of inferiority) big.@least=the smallest
@left (in relation to the left side of) the book at the left of box = plc(book,box.@left)
@less (comparative of inferiority) big.@less=smaller
@like (like)
@literary (Used to create a special effect in poems or novels, and are not usually used in ordinary speech or writing.) awaken = awake.@literary
@majority (A great majority of; nearly all) most books = books.@majority; most of the book = book.@majority
@male (male) 00.@3.@male=he
@maybe (Attribute that expresses doubt) Maybe he will go > go.@maybe
@medial (medial) medial
@metaphor (Stating one entity is another for the purpose of comparing them in quality)
@metonymy (Substitution of a word to suggest what is really meant)
@minority (a number, part, or amount forming less than half of the whole) few people among all = people.@minority
@minus (downtoned) big.@minus=a little big
@more (comparative of superiority) big.@more=bigger
@most (superlative of superiority) big.@most=biggest
@multal (a lot of, many, much, several) book.@multal=a lot of books
@narrative
@near (near to) the book near the box = plc(book,box.@near)
@near_to (near to) near to
@necessity
@neither (neither) foot.@neither=neither foot
@neutral (neutral) 00.@3.@neutral=it
@no (no) book.@no=no book
@not (negative) go.@not=I do not go
@notwithstanding (notwithstanding)
@noun (nominalization) poor.@noun=the poor
@obligation
@of (of) book of pictures > mod(book,pictures.@of)
@off (off)
@on (on) on
@on_account_of (on account of)
@on_behalf_of (on behalf of)
@on_top_of (on top of) on top of
@only (only) book.@only=only the book
@onomatopoeia (Words that sound like their meaning)
@opinion
@opposite (opposite)
@or (or, either... or, whether... or) do.@or = or [he] does
@ordinal (ordinal numeral) 1.@ordinal=first
@other (other, another, else) book.@other=other book
@outside (outside)
@over (over) over
@owing_to (owing to)
@own (own) book.@own=own book
@oxymoron (Using two terms together, that normally contradict each other)
@pace (pace)
@pain (Expression of pain) 00.@pain=ouch!
@paradox (Use of apparently contradictory ideas to point out some underlying truth)
@parallelism (use of similar structures in two or more clauses)
@parenthesis (( )) a.@parenthesis=(a)
@paronomasia (A form of pun, in which words similar in sound but with different meanings are used)
@part (A portion, division, piece, or segment of a whole) part of the book = book.@part
@passive (passive voice) kill.@passive=was killed
@past (at a time before the moment of utterance) go.@past = went
@paucal (a few, a little, few, little, some, a couple of) book.@paucal=a few book
@pejorative (Having an unpleasant or disparaging connotation) scalawag = rascal.@pejorative
@per (per)
@perfect (used to indicate that an action or circumstance occurred earlier than the present time (or other time under consideration), often focusing attention on the resulting state rather than on the occurrence itself) I have made the dinner
@perfective (completed) eat.@perfective=ate
@periphrasis (Using several words instead of few)
@permission
@permissive (allowing) eat.@permisse=let eat
@persistent (persistent) eat.@persistent=have been eating
@person (human) 00.@person=someone
@pl (plural) book.@pl=plural
@pleonasm (Use of superfluous or redundant words)
@plus (intensified) big.@plus=very big
@polite (low degree of solidarity)
@polyptoton (repetition of words derived from the same root)
@polysyndeton (repetition of conjunctions)
@possibility
@posterior (after some other time other than the time of utterance)
@prediction
@present (at the moment of utterance) go.@present = goes
@presumption
@prior_to (prior to)
@probability
@progressive (ongoing) eat.@progressive=is eating
@prohibition
@promise
@prospective (imminent) eat.@prospective=about to eat
@proximal (this, these) book.@proximal=this book
@pursuant_to (pursuant to)
@qua (qua)
@quadrual (Four of a class)
@recent (close to the moment of utterance) go.@recent = have just gone
@reciprocal (reciprocal voice) kill.@reciprocal=kill each other
@reflexive (reflexive voice) kill.@reflexive=kill oneself
@regarding (regarding)
@regardless_of (regardless of)
@regret
@relative (head of the relative clause)
@relief (Expression of relief)
@remote (remote from the moment of utterance)
@repetition (Repeated usage of word(s)/group of words in the same sentence to create a poetic/rhythmic effect)
@request
@result (resulting) eat.@result=have eaten
@reverential (very high status)
@right (in relation to the right side of) the box at the right of the box = plc(book,box.@right)
@round (round)
@same (same) book.@same=same book
@save (save)
@side (at one of the sides of) the book beside the box = plc(book,box.@side)
@since (since)
@single_quote (' ') a.@single_quote='a'
@singular (singular) book.@singular=book
@slang (slang)
@so (so, then, so that, that) do.@so = so [he] does
@speculation
@speech (Direct speech)
@square_bracket ([ ]) a.@square_bracket=[a]
@subsequent_to (subsequent to)
@such (such) book.@such=such books
@suggestion
@superior (high status)
@surprise (Expression of surprise) 00.@surprise=oh!
@symploce (combination of anaphora and epistrophe)
@synecdoche (Form of metonymy, in which a part stands for the whole)
@synesthesia (Description of one kind of sense impression by using words that normally describe another.)
@taboo (offensive word)
@terminative (cessation) eat.@terminative=finished eating
@than (than)
@thanks_to (thanks to)
@that_of (that of)
@thing (inanimate) 00.@thing=something
@threat
@through (through)
@throughout (throughout) throughout
@times (multiplicative numeral) 2.@times=twice
@title (title) book.@title=
@to (to)
@top (in relation to the top of) the book on the table = plc(book,table.@top.@contact)
@topic (topic of the sentence) book.@topic=the book that
@towards (towards) towards
@trial (Three of a class)
@tuple (collective numeral) 2.@tuple=double
@under (under) under
@unit (an individual, group, structure, or other entity regarded as an elementary structural or functional constituent of a whole) a slice of bread = bread.@unit
@unless (unless) do.@unless = unless [he] does
@unlike (unlike)
@until (until)
@up (up)
@upon (upon)
@verb (verbalization) google.@verb=to google
@versus (versus)
@vocative (Being addressed) agt(run, John.@vocative)= John, run
@warning
@weariness (Expression of weariness)
@wh (what, whatever, which, whichever) book.@wh=what book
@with (with)
@with_regard_to (with regard to)
@with_respect_to (with respect to)
@within (within) within
@without (without)
@worth (worth)
@yes (affirmative) go.@yes=I do go
@zoomorphism (Applying animal characteristics to humans or gods)
0316 wow there are over 800 of those
0318 I think I like them more than the relations
they seem to cover the same kind of stuff but better,
also the relations are very confusing, since they are all about
graphs and not about language.
0319 can probably start with the super categories
att
animacy (ANIA)
aspect (ASPA)
degree (DEGA)
emotions (FEEL)
figure of speech (FIGA)
gender (GENA)
information structure (ISTA)
lexical category (LEXA)
manner (HOW)
modality (MODA)
nominal attributes (NOUA)
person (PERA)
place (WHERE)
polarity (POLA)
quantification (QUAA)
register (REGA)
social deixis (SODA)
specification (WHICH)
syntactic structures (SYNA)
time (WHEN)
voice (VOIA)
0321 some of those categories while interesting,
are far to specific for an initial frame vocabulary.
0332 I could probably use at least some of it though
perhaps can make a frame vocab that is intersection of one I
made before and this, that may be ideal ya
or can simply select the useful categories like person place
quantification and such
1016 okay what to do, I guess we can do some basic vocab words
for now ya
maybe funny so I can finally make that reply to that guy
can also check out the toki pona vocabulary
1021 hmmm guess can start with english lemmas,
those are bound to be useful, intersected with UW attributes.
I can change mi to be simply first person pronoun
yu to be second person pronoun
sa to be third person pronoun
mu to be plural modifier
1025 okay too many files, gotta trim it back down to the binary
ones 1 bit 2bit 3bit and 4 bit alphabet
or 2 glyphs 4 glyph 8glyph and 16glyph
can simply stop using the other ones
1027 in fact can simply use the 16 bit one and disregard the
others.
I wanted to change either to disjunct or something, 
or I can even simply remove all the 2bit definitions or
something dono, w/e leave them for now, we need to add words at
this point not remove.
1037 I tried putting the vocab in mwak performance grammar
order, but since from doesn't have official sublcauses it ends
up in the wrong spot, not fronted. thus I may have to shift some
stuff around for it to work properly ya
1107 okay rewrote algorithm for performance grammar will have to
debug
1149 almost works :-)
1201 okay works but need to figure out why kya is at end in
stead of front ya
1213 okay fixed
1231 now setting up so text outputs formated lines up to 64
glyphs long and breaks at nearest word boundary ya
} 21 Jan 2015
0024 changed my monitor to be be sideways, so is more like the
page of a book ya
has a good feel to it, also can see more history better this way
:-). 
0107 got a wordwrap function from internet, much better than
mine, but it has some extra newlines where I don't need, not
sure how to remove them, since it uses rather opaque regular
expression for matching.
0130 okay  I think I finally figured it out with a regexp
reference to help me :-)
needed lookahead patter (?=\\s|$) instead of normal match
0133 also performance grammar needs a bit more work
0137 okay now seems to be fully operational :-)
0144 should test in web version
0154 weird it isn't working in web version
0211 okay was issue with basis and not checking for clauses has
been fixed ya
0738 so what is next? vocabulary work.
guess I will start with UW relations and attributes,
even if the UNL implemenation of them is opaque,
at least the common ones which are easy to understand,
I will implement ya
0739 for now can add the UW or UNL equivalent to those words
which are already defined ya
1546 so I'm working on pronouns for now
1559 added null as nwa for 00 UW
1858 hmmm I don't think I should have plural and singular forms 
at this moment, there might be a bunch of other words that want
those CV spots ya, should just have a word for singulr and
plural ya
} 22 Jan 2015
0328 I guess singular is common enough, so I just took out the
one for plural and kept the generic yu 
0436 ya so I'm pretty much defining everything in 4bit, way too
much hassle trying to use multiple files ya
0439 put mom and  dad in the extended vocab, mam and pap ya
though I could put mother and father mat and pat in core
0616 changing yi to li so yi can be this, and ka can be it
0638 debugging seems to be some parse issue or something
0737 almost done update just have to debug a few non unique
words ya
1006 okay it is fully operational now :-)
2317 got synesthesia bookmarklet working fairly satisfactory now
:-D well only on desktop, have no idea how to get it to work on
a phone version, not sure how to open a bookmark in the same
window. 
} 23 Jan 2014
1231 okay figured it out. works on the phone for some websites
also anyways. 
1232 so planning on moving basic conjugation ahead on the
roadmap.
first will organize the language packs so they are in external
files, 
and then will do the conjugation ya
which will consist of simply removing or replace  the su ob ya 
yand and other unusual words ya
1302 okay so the first thing on the agenda is systemizing the
adding of new languages. 
1304 can use spelp as a model
1546 you know what I'm more interested in basic conjugation
support at this time, lets get a basic prototype working, to my
knowledge most languages don't have su and ob, so we can just
assume they aren't marked.
can have an unmarked phrase list ya
1632 or we can simply call it unmarked words.
hmmm I'm thinking topicalization can be good also,
since now that we have performance grammar subject isn't always
the first thing ya
1737 cool so got odroid working :-)
} 26 Jan 2015
0733 can do conjugation with regular expression search and
replace ya
a file consisting of su what to replace with ob what would be
sufficient also ya
0748 okay well seems like we would need multi word quote support
before can make conjugation from text files.  but for now can do
it with json files or something ya
0811 hmmm this form of conjugation is very basic, for instance
can't translate " of you " into "your" as that would require a
word-order change, but can translate "su you" into " ye ".
0813 I've also divided it into reversible and irreversible
conjugation ya
0814 wow, that's amazing I found a word for third-person
singular in english it is ey and eir for they and their
respectively :-D
1127 so can do Translate.conjugate(grammar.conjugation,string);
just before outputting, and this would be at the sentence level
ya
1141 can also deconjugate the reversible ones at least in
begining. 
1150 I've populated eng.js with a bunch of examples.
1402 also need it to take a variable for type of conjugation,
whether it is plain (none), conjugated (reversible), 
or naturalized (irreversible).
} 27 Jan 2014
0344 bah, time to get something done ya
0416 added the statements to sentence.js
0423 hmmm I'm thinking maybe we shouldn't accept any conjugation
as input, since there are no guarantees with such a brute for
search and replace..
0500 bah keep getting distracted by facebook :-|
0501 anyways so next have to set up spel-node.js to accept
eng.js as input, then write the conjugation search and replace
functions
0606 awesome conjugation is now fully operational
0625 still have to port other languages than english into the
new locale framework, and also test the web version. but can do
that later, need some more sleep first ya
1315 okay so I'm settin gup the file system for making it easier
to deal with the languages in locale
1327 okay I made french, now should test it
} 28 Jan 2015
0603 adding languages to the new directory system,
have english, french and spanish so far ya
0641 added mandardin, arabic, hindi
0652 added russian and ukranian
} 29 Jan 2015
0209 hopefully will have enough time to finish off basic
conjugation. or rather I guess we're working on systemizing now
ya
0211 one of the languages I'm most interested in is Inuktitut,
it requires some very heavy verb conjugation however.
also Esperanto requires conjugation, so it might make sense to
have a conjugation.verb and conjugation.noun function ya
0213 we can make a mwak flavoured version of Inuktitut, but it
will bear little or no resemblance to it's parent language ya
however it will still be easier to translate from that to
ordinary Inuktitut than simple SPEL.
Inuktitut is OSV the verbs are VS, it is verb-initial.
0232 I've also got to improve the performance of the site, since
it is too slow with the whole loading all these languages ya
perhaps can put the vocab in JSON files, or compact them into a
single file somehow, don't know if can require a JSON file thus
shove the dictionary in more easily.
0414 okay cool I finished systemizing, now I just have to update
the web file to use it.
0458 now I need to add the new langs ita and hun, also should
make a listener for the conjugation
0520 I have a feeling that if I publish a story in analytic
inuktitut some of the elder inuit might get rather angry ya
since it wouldn't really be inuktitut anymore ya
0530 weird it is not conjugating in web verrsion.
0533 maybe it needs a string buffer or something
0534 I dono anyways I need some sleep before dawn
0743 maybe it is because of static strings, might be able to get
around it with split join via stringBuffer ya
0910 I think it's because of the syntax highlighting, I have to
transform before the syntax highlighting.
0943 okay well now I have no idea why it's not working.
0942 also a simple regexp wouldn't work for anything with html
formatting
2203 finishing up first post to mailing list
} 30 Jan 2015
0714 so next is topicalization
2111 edited the roadmap some,
decided that should leave major conjugation ttil after 1.0 ya
} 31 Jan 2015
1438 updated git repository to reflect the new nodejs branch
it is called spel-code
} 01 Feb 2015
0154 set up my odroid, thinking of moving development over
there.
} 02 Feb 2015
1556 moved development to the odroid
2242 anyways I should really make that file translate thing
input of a language file and output of all files,
figures out language code by input parameter
figures out output language codes either default all,
or if all is given, or a list of particular ones.
loads only if language code given, and is not already defined.
2257 cool okay first one is working
2311 generified, now works for multiple langs,
need to make it even more streamlined, 
using an array or object of codes associated with variables. 
} 03 Feb 2015
0524 okay got it working, with the codes and all.
will have to update the spelp.js file and spel-node.js
accordingly also ya
0544 oh right so should make mwak a language like all the
others, so it could be loaded with them
0938 okay it seems to be all working smoothly together.
should update the spelp to work with the new system ASAP.
then we can probably call it a release. 
1004 updating spel-node.js
1019 okay updated :-)
later will have to accept spel-lang input can put it on roadmap
probably somewhere around javascript impelmentation
1033 updated japanese and chinese sentence final particles :-D
1052 updated spelp.js but gotta reinstall browserify
anywas g2g shopping for now will be back
1900 finished fixing it up 
} 04 Feb 2015
0629 so what's next on the roadmap? or rather, what next on the
roadmap do I most feel like implementing? I'm feeling
basic javascript would give me some good satisfaction around
now.
0631 so basic sentences into javascript, 
we'll be converting them into objects
su we be wil convert ob them into objects ya
{"su":"we","be":"wil convert","ob":"them","into":"objects"};
tat later su me be add ob verb support and subject support to it ya
me.add("it","verb support","subject support",{"tat":"later"});
su sentence tha be have ob nesting clause-tail ob also possible ya
sentence.have("nesting") = also_possible();
su 1 of item ob array-reference ya
item[1] = arrayReference();
su mwak file contents ob tha be file-read of io ob mwak.txt ya
mwak_file_contents = io.fileRead("mwak.txt");
ob hey world be log of console ya
console.log("hey world")
ob hey world be say ya
say("hey world");
0712 anyways the basic part is just the first of those examples
0716 vocabulary note: 
want to change with to mwa, and love to something else maybe yam
0723 ay borean wen eurasiatic sun afroasiatic 
nikw sino-tibetan nam macro-khoisan
so definitely an n in there, probably an a also
wan or yan perhaps PIE has wenos also, so wan is okay
0732 okay wan it is
0958 thinking should do a glyph transform to romanize some of
the other phonetic scripts, like hindi, arabic and the native
one. like cree and inuktitut syllabics. 
1313 can put it on the roadmap after compound words
1420 trying to get IPA keyboard to work, is a hassle ya
1931 ya I seem obsessed with phonetic transcription 
ya it be on my mind constantly in recent hours
1932 specifically the transcription of English,
but also of the word compounding algorithms for mwak. 
1933 for mwak it is simple in case of consonants clusters
comprised of 1, 2 or 4 consonants,  but near impossible for 3,
so only 1, 2, 4 or 5 will be legal 5 only if the middle is an h
or a . so say a hypothetical may and kya need to go together,
instead of maykya it would be may.kya 
the h is for making meaningful compounds, that are meant as one
word. for instance  piy mak can be piyhmak  then equivalent to
wiyp
1940 for simplicity I can have an external file for the local
glyphs to IPA conversion, similar to the normal dictionary.
for instance the mwak one can be mwak.ipa.txt
just like the normal dictionary, a json would be generated, and
required. there would then be a ipa glyph translate function
available ya
1943 another thing on the todo list is to move cmn to zhe
since zhe wil have the pronunciation reform, and cmn can be
whatever the mandarin people speak
2055 can use web workers API to speed up multi language
translation. If there is more than a quarter second lag then
people may think it is slow, or unresponsive. 
it seems to take more than a second to show output on my samsung
s3 mini, which has a dual core processor, so there is room for
improvement. 
